<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnySecurity" xml:space="preserve">
    <value>Any Security</value>
  </data>
  <data name="DeltaProfile" xml:space="preserve">
    <value>Delta Profile</value>
  </data>
  <data name="FutPx" xml:space="preserve">
    <value>Base Asset Price</value>
  </data>
  <data name="RiskFreeRate" xml:space="preserve">
    <value>Risk-free rate %</value>
  </data>
  <data name="SECURITYSource" xml:space="preserve">
    <value>Instrument</value>
  </data>
  <data name="POSITIONSource" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="OptionSeries" xml:space="preserve">
    <value>Option series</value>
  </data>
  <data name="OPTIONSource" xml:space="preserve">
    <value>Option source</value>
  </data>
  <data name="PositionProfile" xml:space="preserve">
    <value>Position profile</value>
  </data>
  <data name="ReferenceLine" xml:space="preserve">
    <value>Reference line</value>
  </data>
  <data name="Series1" xml:space="preserve">
    <value>Series 1</value>
  </data>
  <data name="Series2" xml:space="preserve">
    <value>Series 2</value>
  </data>
  <data name="AutoHedger.Name" xml:space="preserve">
    <value>Auto Hedge Delta</value>
    <comment>Автохеджер дельты</comment>
  </data>
  <data name="AutoHedger.Description" xml:space="preserve">
    <value>Hedge delta by time (on every script execution)</value>
    <comment>Автоматический хедж дельты позиции по времени (на каждом исполнении скрипта)</comment>
  </data>
  <data name="AutoHedger.HedgeDelta.Name" xml:space="preserve">
    <value>Align Delta</value>
  </data>
  <data name="AutoHedger.HedgeDelta.Description" xml:space="preserve">
    <value>Align delta to target level</value>
  </data>
  <data name="AutoHedger.DownDelta.Description" xml:space="preserve">
    <value>Possible delta decrease from target level</value>
  </data>
  <data name="AutoHedger.TargetDelta.Description" xml:space="preserve">
    <value>Target delta</value>
  </data>
  <data name="AutoHedger.UpDelta.Description" xml:space="preserve">
    <value>Possible delta increase from target level</value>
  </data>
  <data name="AutoHedger.BuyPrice.Name" xml:space="preserve">
    <value>Buy price</value>
  </data>
  <data name="AutoHedger.BuyPrice.Description" xml:space="preserve">
    <value>Price of hedge order to buy</value>
  </data>
  <data name="AutoHedger.SellPrice.Name" xml:space="preserve">
    <value>Sell price</value>
  </data>
  <data name="AutoHedger.SellPrice.Description" xml:space="preserve">
    <value>Price of hedge order to sell</value>
  </data>
  <data name="AutoHedger.WorkWithoutOptions.Name" xml:space="preserve">
    <value>Work without options</value>
  </data>
  <data name="AutoHedger.WorkWithoutOptions.Description" xml:space="preserve">
    <value>Permission to work without options</value>
  </data>
  <data name="Delta" xml:space="preserve">
    <value>Delta</value>
  </data>
  <data name="PositionsManager.Name" xml:space="preserve">
    <value>Positions Manager</value>
  </data>
  <data name="PositionsManager.Description" xml:space="preserve">
    <value>Manager for virtual and real positions</value>
  </data>
  <data name="Sub.Name" xml:space="preserve">
    <value>Subtract</value>
  </data>
  <data name="Sub.Description" xml:space="preserve">
    <value>Subtract second number from the first one</value>
  </data>
  <data name="AskSmile.Name" xml:space="preserve">
    <value>Ask smile</value>
  </data>
  <data name="AskSmile.Description" xml:space="preserve">
    <value>Options ask prices. Strike is ignored if there is no offer in it.</value>
  </data>
  <data name="AskSmile.StrikeType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="AskSmile.StrikeType.Description" xml:space="preserve">
    <value>Type of option to be used in handler (put, call, any)</value>
  </data>
  <data name="AskSmile.Shift.Name" xml:space="preserve">
    <value>Shift Time</value>
  </data>
  <data name="AskSmile.Shift.Description" xml:space="preserve">
    <value>Shift calculations back in time</value>
  </data>
  <data name="AskStrikes.Name" xml:space="preserve">
    <value>Option Asks</value>
  </data>
  <data name="AskStrikes.Description" xml:space="preserve">
    <value>Options ask prices. Price is set to 0 if there is no offer in it. Handler returns a list of Double2.</value>
  </data>
  <data name="AskStrikes.StrikeType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="AskStrikes.StrikeType.Description" xml:space="preserve">
    <value>Type of option to be used in handler (put, call, any)</value>
  </data>
  <data name="BasePx.Name" xml:space="preserve">
    <value>Base Price</value>
  </data>
  <data name="BasePx.Description" xml:space="preserve">
    <value>A base asset price. Various algorithms are applied in calculation (fixed price, the last trade, quote midpoint, etc). It is a stream handler.</value>
  </data>
  <data name="BasePx.PxMode.Name" xml:space="preserve">
    <value>Algorythm</value>
  </data>
  <data name="BasePx.PxMode.Description" xml:space="preserve">
    <value>Algorythm to get base asset's price (FixedPx, LastTrade, etc)</value>
  </data>
  <data name="BasePx.DisplayUnits.Name" xml:space="preserve">
    <value>Display Units</value>
  </data>
  <data name="BasePx.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
  </data>
  <data name="BasePx.FixedPx.Name" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="BasePx.FixedPx.Description" xml:space="preserve">
    <value>Price for algorythm FixedPx</value>
  </data>
  <data name="BasePx.DisplayPrice.Name" xml:space="preserve">
    <value>Display Price</value>
  </data>
  <data name="BasePx.DisplayPrice.Description" xml:space="preserve">
    <value>Base asset price (only to display at UI)</value>
  </data>
  <data name="BidSmile.Name" xml:space="preserve">
    <value>Bid smile</value>
  </data>
  <data name="BidSmile.Description" xml:space="preserve">
    <value>Options bid prices. Strike is ignored if there is no demand in it.</value>
  </data>
  <data name="BidSmile.StrikeType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="BidSmile.StrikeType.Description" xml:space="preserve">
    <value>Type of option to be used in handler (put, call, any)</value>
  </data>
  <data name="BidSmile.Shift.Name" xml:space="preserve">
    <value>Shift Time</value>
  </data>
  <data name="BidSmile.Shift.Description" xml:space="preserve">
    <value>Shift calculations back in time</value>
  </data>
  <data name="BidStrikes.Name" xml:space="preserve">
    <value>Option Bids</value>
  </data>
  <data name="BidStrikes.Description" xml:space="preserve">
    <value>Options bid prices. Price is set to 0 if there is no demand in it. Handler returns a list of Double2.</value>
  </data>
  <data name="BidStrikes.StrikeType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="BidStrikes.StrikeType.Description" xml:space="preserve">
    <value>Type of option to be used in handler (put, call, any)</value>
  </data>
  <data name="CentralStrike.Name" xml:space="preserve">
    <value>Central Strike</value>
  </data>
  <data name="CentralStrike.Description" xml:space="preserve">
    <value>Central strike of an Option Series</value>
  </data>
  <data name="CloseVirtualFutPosition.Name" xml:space="preserve">
    <value>Close Virtual Pos</value>
  </data>
  <data name="CloseVirtualFutPosition.Description" xml:space="preserve">
    <value>Close virtual fut position in base asset</value>
  </data>
  <data name="ExchangeTheorPx.Name" xml:space="preserve">
    <value>Exchange Theor Px</value>
  </data>
  <data name="ExchangeTheorPx.Description" xml:space="preserve">
    <value>Theoretical option price provided by exchange. Additional linear transformation is allowed.</value>
  </data>
  <data name="ExchangeTheorSigma2.Name" xml:space="preserve">
    <value>Exchange Smile</value>
  </data>
  <data name="ExchangeTheorSigma2.Description" xml:space="preserve">
    <value>Exchange smile (stream handler)</value>
  </data>
  <data name="ExchangeTheorSigma2.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ExchangeTheorSigma2.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ExchangeTheorSigma2.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="ExchangeTheorSigma2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="ForwardTheorPx.Name" xml:space="preserve">
    <value>Forward Price</value>
  </data>
  <data name="ForwardTheorPx.Description" xml:space="preserve">
    <value>Base asset price calculated using theretical option prices</value>
  </data>
  <data name="GlobalHv.Name" xml:space="preserve">
    <value>Global HV</value>
  </data>
  <data name="GlobalHv.Description" xml:space="preserve">
    <value>This block takes precalculated HV from global cache.</value>
  </data>
  <data name="GlobalIvOnF.Name" xml:space="preserve">
    <value>Global IV ATM</value>
  </data>
  <data name="GlobalIvOnF.Description" xml:space="preserve">
    <value>This block takes precalculated IvOnF from global cache.</value>
  </data>
  <data name="GlobalIvOnF.ExpirationMode.Name" xml:space="preserve">
    <value>Search Mode</value>
  </data>
  <data name="GlobalIvOnF.ExpirationMode.Description" xml:space="preserve">
    <value>Algorythm to get expiration date</value>
  </data>
  <data name="GlobalIvOnF.Number.Name" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="GlobalIvOnF.Number.Description" xml:space="preserve">
    <value>Option series index (only alive). Parameter is used in mode ExpiryByNumber.</value>
  </data>
  <data name="GlobalIvOnF.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="GlobalIvOnF.ReturnPct.Description" xml:space="preserve">
    <value>Return volatility as percents</value>
  </data>
  <data name="GlobalIvOnF.Expiry.Name" xml:space="preserve">
    <value>Expiry</value>
  </data>
  <data name="GlobalIvOnF.Expiry.Description" xml:space="preserve">
    <value>Expiration date (format yyyy-MM-dd)</value>
  </data>
  <data name="GlobalIvOnF.RepeatLastIv.Name" xml:space="preserve">
    <value>Repeat Last IV</value>
  </data>
  <data name="GlobalIvOnF.RepeatLastIv.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="GlobalIvOnF.RescaleTime.Name" xml:space="preserve">
    <value>Rescale Time</value>
  </data>
  <data name="GlobalIvOnF.RescaleTime.Description" xml:space="preserve">
    <value>Rescale time-to-expiry to our internal?</value>
  </data>
  <data name="GlobalIvOnF.DistanceMode.Name" xml:space="preserve">
    <value>Estimation Algo</value>
  </data>
  <data name="GlobalIvOnF.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="GlobalIvOnF.IgnoreCacheError.Name" xml:space="preserve">
    <value>Ignore cache error</value>
  </data>
  <data name="GlobalIvOnF.IgnoreCacheError.Description" xml:space="preserve">
    <value>Handler should ignore cache errors in agent mode</value>
  </data>
  <data name="GlobalSkewOnF.Name" xml:space="preserve">
    <value>Global Skew ATM</value>
    <comment>Global Skew ATM</comment>
  </data>
  <data name="GlobalSkewOnF.Description" xml:space="preserve">
    <value>This block takes precalculated skew at the money from global cache.</value>
    <comment>Брать готовый наклон на деньгах из глобального кеша (чтобы не путаться с 'пишущей' версией)</comment>
  </data>
  <data name="GlobalSkewOnF.ExpirationMode.Name" xml:space="preserve">
    <value>Search mode</value>
    <comment>Режим поиска</comment>
  </data>
  <data name="GlobalSkewOnF.ExpirationMode.Description" xml:space="preserve">
    <value>Algorythm to get expiration date</value>
    <comment>Алгоритм определения даты экспирации</comment>
  </data>
  <data name="GlobalSkewOnF.Number.Name" xml:space="preserve">
    <value>Number</value>
    <comment>Номер</comment>
  </data>
  <data name="GlobalSkewOnF.Number.Description" xml:space="preserve">
    <value>Option series index (only alive). Parameter is used in mode ExpiryByNumber.</value>
    <comment>Индекс серии (учитываются только живые). Используется в режиме ExpiryByNumber.</comment>
  </data>
  <data name="GlobalSkewOnF.Expiry.Name" xml:space="preserve">
    <value>Expiry</value>
    <comment>Экспирация</comment>
  </data>
  <data name="GlobalSkewOnF.Expiry.Description" xml:space="preserve">
    <value>Expiration date (format yyyy-MM-dd)</value>
    <comment>Дата экспирации в формате гггг-ММ-дд</comment>
  </data>
  <data name="GlobalSkewOnF.RepeatLastSkew.Name" xml:space="preserve">
    <value>Repeat last skew</value>
    <comment>Повтор значения</comment>
  </data>
  <data name="GlobalSkewOnF.RepeatLastIv.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
    <comment>При true будет находить и использовать последнее известное значение</comment>
  </data>
  <data name="GlobalSkewOnF.RescaleTime.Name" xml:space="preserve">
    <value>Rescale time</value>
    <comment>Заменить время</comment>
  </data>
  <data name="GlobalSkewOnF.RescaleTime.Description" xml:space="preserve">
    <value>Rescale time-to-expiry to our internal?</value>
    <comment>Заменять время на 'правильное'?</comment>
  </data>
  <data name="GlobalSkewOnF.DistanceMode.Name" xml:space="preserve">
    <value>Estimation algo</value>
    <comment>Алгоритм расчета</comment>
  </data>
  <data name="GlobalSkewOnF.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
    <comment>Алгоритм расчета времени до экспирации</comment>
  </data>
  <data name="GlobalSkewOnF.IgnoreCacheError.Name" xml:space="preserve">
    <value>Ignore cache error</value>
    <comment>Игнорировать ошибки кеша</comment>
  </data>
  <data name="GlobalSkewOnF.IgnoreCacheError.Description" xml:space="preserve">
    <value>Handler should ignore cache errors in agent mode</value>
    <comment>Специально для агента-сборщика волатильности делаю настройку для подавления исключений при отсутствии данных в Глобальном Кеше</comment>
  </data>
  <data name="Heartbeat.Name" xml:space="preserve">
    <value>Heartbeat</value>
  </data>
  <data name="Heartbeat.Description" xml:space="preserve">
    <value>Recalculate script by timer</value>
  </data>
  <data name="HeartbeatHandler.Name" xml:space="preserve">
    <value>Heartbeat 2</value>
  </data>
  <data name="HeartbeatHandler.Description" xml:space="preserve">
    <value>Automatic forced recalculation of the script after a specified period of time. The forced recalculation is started via the Recalc() method in the API. By default, protection is enabled so that the recalculation does not start more often than 300ms.</value>
  </data>
  <data name="HV.Name" xml:space="preserve">
    <value>HV (from book)</value>
  </data>
  <data name="HV.Description" xml:space="preserve">
    <value>Estimate HV with classic method</value>
  </data>
  <data name="IvOnF.Name" xml:space="preserve">
    <value>IV ATM</value>
  </data>
  <data name="IvOnF.Description" xml:space="preserve">
    <value>Implied Volatility at-the-money</value>
  </data>
  <data name="IvOnF.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="IvOnF.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="IvOnF.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="IvOnF.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="IvSmile.Name" xml:space="preserve">
    <value>IV Smile</value>
  </data>
  <data name="IvSmile.Description" xml:space="preserve">
    <value>Smile derived from option quotes (stream handler)</value>
  </data>
  <data name="IvSmile.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="IvSmile.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="IvSmile.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="IvSmile.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="NumericalDeltaOnF2.Name" xml:space="preserve">
    <value>Numerical Delta ATM v2</value>
  </data>
  <data name="NumericalDeltaOnF2.Description" xml:space="preserve">
    <value>Numerical estimate of delta at-the-money (only one point is processed; stream handler)</value>
  </data>
  <data name="OpenVirtualFutPosition.Name" xml:space="preserve">
    <value>Open Virtual Pos</value>
  </data>
  <data name="OpenVirtualFutPosition.Description" xml:space="preserve">
    <value>Open virtual position in base asset (stream handler)</value>
  </data>
  <data name="OpenVirtualOptPosition.Name" xml:space="preserve">
    <value>Open Virtual Opt Pos</value>
  </data>
  <data name="OpenVirtualOptPosition.Description" xml:space="preserve">
    <value>Open virtual position in option (stream handler)</value>
  </data>
  <data name="OptionBase.Name" xml:space="preserve">
    <value>Base asset</value>
  </data>
  <data name="OptionBase.Description" xml:space="preserve">
    <value>Base asset (stream handler)</value>
  </data>
  <data name="OptionsBoardNumericalDelta.Name" xml:space="preserve">
    <value>Options board numerical delta</value>
  </data>
  <data name="OptionsBoardNumericalDelta.Description" xml:space="preserve">
    <value>Estimate delta as function of strikes with numerical differentiation</value>
  </data>
  <data name="OptionSelector.Name" xml:space="preserve">
    <value>Option Selector</value>
  </data>
  <data name="OptionSelector.Description" xml:space="preserve">
    <value>Choose one of several option sources</value>
  </data>
  <data name="OptionSeriesByNumber.Name" xml:space="preserve">
    <value>Option Series by Number</value>
  </data>
  <data name="OptionSeriesByNumber.Description" xml:space="preserve">
    <value>Handler to get option series by its index. Series are sorted ascending from near (index 1) to further. It's stream handler.</value>
  </data>
  <data name="OptionStrikeCount.Name" xml:space="preserve">
    <value>Count Options</value>
  </data>
  <data name="OptionStrikeCount.Description" xml:space="preserve">
    <value>Number of options in the source</value>
  </data>
  <data name="SingleOption.Name" xml:space="preserve">
    <value>Single Option</value>
  </data>
  <data name="SingleOption.Description" xml:space="preserve">
    <value>Get single option from its option series</value>
  </data>
  <data name="SingleOption.FixedStrike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="SingleOption.FixedStrike.Description" xml:space="preserve">
    <value>Option strike</value>
  </data>
  <data name="SingleOption.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="SingleOption.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="SingleOption.SelectionMode.Name" xml:space="preserve">
    <value>Search Algo</value>
  </data>
  <data name="SingleOption.SelectionMode.Description" xml:space="preserve">
    <value>Search algorythm</value>
  </data>
  <data name="SingleOption2.Name" xml:space="preserve">
    <value>Single Option</value>
  </data>
  <data name="SingleOption2.Description" xml:space="preserve">
    <value>Get single option from its option series</value>
  </data>
  <data name="SingleOption2.FixedStrike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="SingleOption2.FixedStrike.Description" xml:space="preserve">
    <value>Option strike</value>
  </data>
  <data name="SingleOption2.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="SingleOption2.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="SingleOption2.SelectionMode.Name" xml:space="preserve">
    <value>Search Algo</value>
  </data>
  <data name="SingleOption2.SelectionMode.Description" xml:space="preserve">
    <value>Search algorythm</value>
  </data>
  <data name="TimeToExpiry.Name" xml:space="preserve">
    <value>Time to expiry</value>
  </data>
  <data name="TimeToExpiry.Description" xml:space="preserve">
    <value>Time to expiry in year fractions. Various algorithms are applied (fixed time, plain calendar time, plain calendar time including days off and so on).</value>
  </data>
  <data name="VerticalLine.Name" xml:space="preserve">
    <value>Vertical Line</value>
  </data>
  <data name="VerticalLine.Description" xml:space="preserve">
    <value>Vertical line for CanvasPane (no interaction with user)</value>
  </data>
  <data name="AutoHedger.DownDelta.Name" xml:space="preserve">
    <value>Down Delta</value>
  </data>
  <data name="AutoHedger.UpDelta.Name" xml:space="preserve">
    <value>Up Delta</value>
  </data>
  <data name="AutoHedger.TargetDelta.Name" xml:space="preserve">
    <value>Target Delta</value>
  </data>
  <data name="BasePx2.Name" xml:space="preserve">
    <value>Base Price</value>
  </data>
  <data name="BasePx2.Description" xml:space="preserve">
    <value>Base asset price. Different algorythms are available (fixed price, last trade, quote midpoint, etc). Bar handler.</value>
  </data>
  <data name="BasePx2.PxMode.Name" xml:space="preserve">
    <value>Algorythm</value>
  </data>
  <data name="BasePx2.PxMode.Description" xml:space="preserve">
    <value>Algorythm to get base asset's price (FixedPx, LastTrade, etc)</value>
  </data>
  <data name="BasePx2.DisplayUnits.Name" xml:space="preserve">
    <value>Display Units</value>
  </data>
  <data name="BasePx2.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
  </data>
  <data name="BasePx2.FixedPx.Name" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="BasePx2.FixedPx.Description" xml:space="preserve">
    <value>Price for algorythm FixedPx</value>
  </data>
  <data name="BasePx2.DisplayPrice.Name" xml:space="preserve">
    <value>Display Price</value>
  </data>
  <data name="BasePx2.DisplayPrice.Description" xml:space="preserve">
    <value>Base asset price (only to display at UI)</value>
  </data>
  <data name="BestChartTrading.Name" xml:space="preserve">
    <value>Best Chart Trading</value>
  </data>
  <data name="BestChartTrading.Description" xml:space="preserve">
    <value>Trading with mouse on CanvasPane. Best quotes are accented automatically</value>
  </data>
  <data name="BestChartTrading.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="BestChartTrading.OptionType.Description" xml:space="preserve">
    <value>Option type (when Any, the handler will choose the best quote)</value>
  </data>
  <data name="BestChartTrading.Qty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="BestChartTrading.Qty.Description" xml:space="preserve">
    <value>Trade quantity. Negative value reverts the signal.</value>
  </data>
  <data name="BestChartTrading.OptPxMode.Name" xml:space="preserve">
    <value>Quote Type</value>
  </data>
  <data name="BestChartTrading.OptPxMode.Description" xml:space="preserve">
    <value>Quote type (ask or bid)</value>
  </data>
  <data name="BestChartTrading.WidthPx.Name" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="BestChartTrading.WidthPx.Description" xml:space="preserve">
    <value>Width of neutral band (price steps)</value>
  </data>
  <data name="BestChartTrading.OutletDistance.Name" xml:space="preserve">
    <value>Outlet distance</value>
  </data>
  <data name="BestChartTrading.OutletDistance.Description" xml:space="preserve">
    <value>Outlet distance to 'profitable' market order (units of volatility)</value>
  </data>
  <data name="BestChartTrading.OutletSize.Name" xml:space="preserve">
    <value>Outlet size</value>
  </data>
  <data name="BestChartTrading.OutletSize.Description" xml:space="preserve">
    <value>Outlet size (pixel)</value>
  </data>
  <data name="BlackScholesConstSmile2.Name" xml:space="preserve">
    <value>Black-Scholes Const</value>
  </data>
  <data name="BlackScholesConstSmile2.Description" xml:space="preserve">
    <value>A flat smile as in the Black-Scholes option model. Volatility is a constant and is defined by the 'Sigma, %' parameter.</value>
  </data>
  <data name="BlackScholesConstSmile2.Label.Name" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="BlackScholesConstSmile2.Label.Description" xml:space="preserve">
    <value>Label to mark a nodes</value>
  </data>
  <data name="BlackScholesConstSmile2.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="BlackScholesConstSmile2.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="BlackScholesConstSmile2.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="BlackScholesConstSmile2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="BlackScholesDelta.Name" xml:space="preserve">
    <value>Single Series Delta (book)</value>
  </data>
  <data name="BlackScholesDelta.Description" xml:space="preserve">
    <value>Straigtforward calculation of delta (as in books)</value>
  </data>
  <data name="BlackScholesDelta.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="BlackScholesDelta.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="BlackScholesDelta.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="BlackScholesDelta.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="BlackScholesGreeks.Name" xml:space="preserve">
    <value>Single Series Greeks (book)</value>
  </data>
  <data name="BlackScholesGreeks.Description" xml:space="preserve">
    <value>Straigtforward calculation of greeks (as in books)</value>
  </data>
  <data name="BlackScholesGreeks.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="BlackScholesGreeks.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="BlackScholesGreeks.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="BlackScholesGreeks.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="BlackScholesSmile2.Name" xml:space="preserve">
    <value>Black-Scholes 'Smile'</value>
  </data>
  <data name="BlackScholesSmile2.Description" xml:space="preserve">
    <value>Horizontal line spanning a few Sigma</value>
  </data>
  <data name="BlackScholesSmile2.Label.Name" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="BlackScholesSmile2.Label.Description" xml:space="preserve">
    <value>Label to mark a nodes</value>
  </data>
  <data name="BlackScholesSmile2.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="BlackScholesSmile2.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="BlackScholesSmile2.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="BlackScholesSmile2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="BuyOptions.Name" xml:space="preserve">
    <value>Buy Options</value>
  </data>
  <data name="BuyOptions.Description" xml:space="preserve">
    <value>Buy options while position risk is 'small'</value>
  </data>
  <data name="BuyOptionGroup.Name" xml:space="preserve">
    <value>Buy option group</value>
    <comment>Покупка группы опционов</comment>
  </data>
  <data name="BuyOptionGroup.Description" xml:space="preserve">
    <value>Buy many options while position risk is 'small'</value>
    <comment>Покупка группы опционов до заданного уровня риска</comment>
  </data>
  <data name="BuyOptionGroupDelta.Name" xml:space="preserve">
    <value>Buy option group (delta range)</value>
    <comment>Покупка группы опционов  (диапазон по дельте)</comment>
  </data>
  <data name="BuyOptionGroupDelta.Description" xml:space="preserve">
    <value>Buy many options while position risk is 'small' (strike range is set in units of delta)</value>
    <comment>Покупка группы опционов до заданного уровня риска (диапазон страйков задается в единицах дельты)</comment>
  </data>
  <data name="MarketMakerDelta.Name" xml:space="preserve">
    <value>Market maker (delta range)</value>
    <comment>Маркетмейкер (диапазон по дельте)</comment>
  </data>
  <data name="MarketMakerDelta.Description" xml:space="preserve">
    <value>Buy and sell options while position risk is 'small' (strike range is set in units of delta)</value>
    <comment>Покупка и продажа опционов до заданного уровня риска (диапазон страйков задается в единицах дельты)</comment>
  </data>
  <data name="ChartTrading.Name" xml:space="preserve">
    <value>Chart Trading</value>
  </data>
  <data name="ChartTrading.Description" xml:space="preserve">
    <value>Trading with mouse on CanvasPane</value>
  </data>
  <data name="CloseVirtualPosition.Name" xml:space="preserve">
    <value>Close Virtual Pos (bar)</value>
  </data>
  <data name="CloseVirtualPosition.Description" xml:space="preserve">
    <value>Close virtual position (bar handler)</value>
  </data>
  <data name="CombinePositionProfiles.Name" xml:space="preserve">
    <value>Combine Series Profiles</value>
  </data>
  <data name="CombinePositionProfiles.Description" xml:space="preserve">
    <value>Add 2 position profiles</value>
  </data>
  <data name="CurrentFutPx.Name" xml:space="preserve">
    <value>Current Fut Px</value>
  </data>
  <data name="CurrentFutPx.Description" xml:space="preserve">
    <value>Draws a vertical line in the chart. A vertical position is connected to any given Interactive Series.</value>
  </data>
  <data name="DropVirtualPositions.Name" xml:space="preserve">
    <value>Clear Virtual Positions</value>
  </data>
  <data name="DropVirtualPositions.Description" xml:space="preserve">
    <value>This block allows you to delete virtual positions. Connect Delete positions property to Control Pane and create a button.</value>
  </data>
  <data name="EditTemplateSmile.Name" xml:space="preserve">
    <value>Edit Template Smile</value>
  </data>
  <data name="EditTemplateSmile.Description" xml:space="preserve">
    <value>Edit template smile</value>
  </data>
  <data name="EditTemplateSmile.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="EditTemplateSmile.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="EditTemplateSmile.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="EditTemplateSmile.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="ExchangeTheorSigma3.Name" xml:space="preserve">
    <value>Exchange Smile</value>
  </data>
  <data name="ExchangeTheorSigma3.Description" xml:space="preserve">
    <value>Exchange smile (bar handler)</value>
  </data>
  <data name="ExchangeTheorSigma3.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ExchangeTheorSigma3.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ExchangeTheorSigma3.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="ExchangeTheorSigma3.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="ExchangeTheorSigma5.Name" xml:space="preserve">
    <value>Exchange Smile (Rescaled)</value>
  </data>
  <data name="ExchangeTheorSigma5.Description" xml:space="preserve">
    <value>Exchange smile rescaled to our internal time-to-expiry</value>
  </data>
  <data name="ExchangeTheorSigma5.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ExchangeTheorSigma5.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ExchangeTheorSigma5.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="ExchangeTheorSigma5.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="FixedValue.Name" xml:space="preserve">
    <value>Fixed Value</value>
  </data>
  <data name="FixedValue.Description" xml:space="preserve">
    <value>Fixed value</value>
  </data>
  <data name="GaussSmile.Name" xml:space="preserve">
    <value>Gauss 'Smile'</value>
  </data>
  <data name="GaussSmile.Description" xml:space="preserve">
    <value>Arbitrary function with 3 parameters similar to observed smile</value>
  </data>
  <data name="GaussSmile.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="GaussSmile.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="GaussSmile.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="GaussSmile.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="IvSmile2.Name" xml:space="preserve">
    <value>IV Smile</value>
  </data>
  <data name="IvSmile2.Description" xml:space="preserve">
    <value>Smile derived from option quotes (bar handler)</value>
  </data>
  <data name="IvSmile2.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="IvSmile2.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="IvSmile2.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="IvSmile2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="IvSmile2.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
  </data>
  <data name="IvSmile2.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="IvSmile2.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
  </data>
  <data name="IvSmile2.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="IvSmile2.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvSmile2.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvSmileRescaled2.Name" xml:space="preserve">
    <value>IV Smile (Deribit)</value>
    <comment>IV Smile (rescaled)</comment>
  </data>
  <data name="IvSmileRescaled2.Description" xml:space="preserve">
    <value>Smile derived from option quotes with scale multiplier (bar handler, for Deribit)</value>
    <comment>Подразумеваемые волатильности опционов на основании их рыночных цен (c учетом необходимости домножить цены на курс конвертации)</comment>
  </data>
  <data name="IvSmileRescaled2.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
    <comment>Считать в %</comment>
  </data>
  <data name="IvSmileRescaled2.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
    <comment>Значения волатильности вычисляются в процентах</comment>
  </data>
  <data name="IvSmileRescaled2.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
    <comment>Показывать узлы</comment>
  </data>
  <data name="IvSmileRescaled2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
    <comment>При true будет показывать узлы на отображаемой линии</comment>
  </data>
  <data name="IvSmileRescaled2.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
    <comment>Минимальный страйк</comment>
  </data>
  <data name="IvSmileRescaled2.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
    <comment>Минимальный обрабатываемый страйк</comment>
  </data>
  <data name="IvSmileRescaled2.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
    <comment>Максимальный страйк</comment>
  </data>
  <data name="IvSmileRescaled2.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
    <comment>Максимальный обрабатываемый страйк</comment>
  </data>
  <data name="IvSmileRescaled2.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
    <comment>Шаг страйков</comment>
  </data>
  <data name="IvSmileRescaled2.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
    <comment>Шаг между страйками</comment>
  </data>
  <data name="LinearTransform.Name" xml:space="preserve">
    <value>Linear transform (a*x+b)</value>
  </data>
  <data name="LinearTransform.Description" xml:space="preserve">
    <value>Linear transform (a*x+b)</value>
  </data>
  <data name="MarketMaker.Name" xml:space="preserve">
    <value>Market Maker</value>
  </data>
  <data name="MarketMaker.Description" xml:space="preserve">
    <value>Market-maker. It can repeat quotes from one market to another</value>
  </data>
  <data name="NumericalDeltaOnF.Name" xml:space="preserve">
    <value>Numerical Delta ATM</value>
  </data>
  <data name="NumericalDeltaOnF.Description" xml:space="preserve">
    <value>Numerical estimate of delta at-the-money (only one point is processed; bar handler)</value>
  </data>
  <data name="NumericalDeltaOnF3.Name" xml:space="preserve">
    <value>Numerical Delta ATM (IntSer)</value>
  </data>
  <data name="NumericalDeltaOnF3.Description" xml:space="preserve">
    <value>Numerical estimate of delta at-the-money (only one point is processed using delta profile)</value>
  </data>
  <data name="NumericalGammaOnF.Name" xml:space="preserve">
    <value>Numerical Gamma ATM</value>
  </data>
  <data name="NumericalGammaOnF.Description" xml:space="preserve">
    <value>Numerical estimate of gamma at-the-money (only one point is processed; bar handler)</value>
  </data>
  <data name="NumericalGammaOnF3.Name" xml:space="preserve">
    <value>Numerical Gamma ATM (IntSer)</value>
  </data>
  <data name="NumericalGammaOnF3.Description" xml:space="preserve">
    <value>Numerical estimate of gamma at-the-money (only one point is processed using gamma profile)</value>
  </data>
  <data name="NumericalThetaOnF.Name" xml:space="preserve">
    <value>Numerical Theta ATM</value>
  </data>
  <data name="NumericalThetaOnF.Description" xml:space="preserve">
    <value>Numerical estimate of theta at-the-money (only one point is processed)</value>
  </data>
  <data name="NumericalVegaOnF.Name" xml:space="preserve">
    <value>Numerical Vega ATM</value>
  </data>
  <data name="NumericalVegaOnF.Description" xml:space="preserve">
    <value>Numerical estimate of vega at-the-money (only one point is processed)</value>
  </data>
  <data name="NumericalVegaOnF.SigmaStep.Name" xml:space="preserve">
    <value>Sigma step</value>
  </data>
  <data name="NumericalVegaOnF.SigmaStep.Description" xml:space="preserve">
    <value>Sigma step for numerical derivative</value>
  </data>
  <data name="NumericalVegaOnF.GreekAlgo.Name" xml:space="preserve">
    <value>Greek algo</value>
  </data>
  <data name="NumericalVegaOnF.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="NumericalVegaOnF.Vega.Name" xml:space="preserve">
    <value>Vega</value>
  </data>
  <data name="NumericalVegaOnF.Vega.Description" xml:space="preserve">
    <value>Current vega (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalVommaOnF.Name" xml:space="preserve">
    <value>Numerical Vomma ATM</value>
  </data>
  <data name="NumericalVommaOnF.Description" xml:space="preserve">
    <value>Numerical estimate of vomma at-the-money (only one point is processed)</value>
  </data>
  <data name="NumericalVommaOnF.SigmaStep.Name" xml:space="preserve">
    <value>Sigma step</value>
  </data>
  <data name="NumericalVommaOnF.SigmaStep.Description" xml:space="preserve">
    <value>Sigma step for numerical derivative</value>
  </data>
  <data name="NumericalVommaOnF.GreekAlgo.Name" xml:space="preserve">
    <value>Greek algo</value>
  </data>
  <data name="NumericalVommaOnF.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="NumericalVommaOnF.Vomma.Name" xml:space="preserve">
    <value>Vomma</value>
  </data>
  <data name="NumericalVommaOnF.Vomma.Description" xml:space="preserve">
    <value>Current vomma (just to show it on ControlPane)</value>
  </data>
  <data name="OpenVirtualFutPosition2.Name" xml:space="preserve">
    <value>Open Virtual Fut Pos (bar)</value>
  </data>
  <data name="OpenVirtualFutPosition2.Description" xml:space="preserve">
    <value>Open virtual position in base asset (bar handler)</value>
  </data>
  <data name="OpenVirtualOptPosition2.Name" xml:space="preserve">
    <value>Open Virtual Opt Pos (bar)</value>
  </data>
  <data name="OpenVirtualOptPosition2.Description" xml:space="preserve">
    <value>Open virtual position in options (bar handler)</value>
  </data>
  <data name="OptionBase2.Name" xml:space="preserve">
    <value>Base asset</value>
  </data>
  <data name="OptionBase2.Description" xml:space="preserve">
    <value>Base asset (bar handler)</value>
  </data>
  <data name="OptionSeriesByNumber2.Name" xml:space="preserve">
    <value>Option Series by Number</value>
  </data>
  <data name="OptionSeriesByNumber2.Description" xml:space="preserve">
    <value>Handler to get option series by its index. Series are sorted ascending from near (index 1) to further. It's bar handler.</value>
  </data>
  <data name="OwnOrders.Name" xml:space="preserve">
    <value>Own orders</value>
  </data>
  <data name="OwnOrders.Description" xml:space="preserve">
    <value>Own active orders</value>
  </data>
  <data name="OwnOrders.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="OwnOrders.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="OwnOrders.ShowNodes.Name" xml:space="preserve">
    <value>Show Nodes</value>
  </data>
  <data name="OwnOrders.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="OwnOrders.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="OwnOrders.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="OwnOrders.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="OwnOrders.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="OwnOrders.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="OwnOrders.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="OwnOrders.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="OwnOrders.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="OwnPositionIv.Name" xml:space="preserve">
    <value>Own position IV (num)</value>
    <comment>Волатильность позиции (число)</comment>
  </data>
  <data name="OwnPositionIv.Description" xml:space="preserve">
    <value>Own position IV (effective volatility that makes current profit to become zero)</value>
    <comment>Волатильность своей позиции (такая волатильность, чтобы текущая прибыль стала нуль)</comment>
  </data>
  <data name="OwnPositionIv.ShowLongPositions.Name" xml:space="preserve">
    <value>Show long</value>
    <comment>Показывать длинные</comment>
  </data>
  <data name="OwnPositionIv.ShowLongPositions.Description" xml:space="preserve">
    <value>Show long or short positions</value>
    <comment>Показывать длинные позиции или короткие?</comment>
  </data>
  <data name="OwnPositionIv.DisplayUnits.Name" xml:space="preserve">
    <value>Display units</value>
    <comment>Единицы отображения</comment>
  </data>
  <data name="OwnPositionIv.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
    <comment>Единицы отображения (сотни, тысячи, как есть)</comment>
  </data>
  <data name="OwnPositionIvLine.Name" xml:space="preserve">
    <value>Own position IV (line)</value>
    <comment>Волатильность позиции (линия)</comment>
  </data>
  <data name="OwnPositionIvLine.Description" xml:space="preserve">
    <value>Own position IV (effective volatility that makes current profit to become zero)</value>
    <comment>Волатильность своей позиции (такая волатильность, чтобы текущая прибыль стала нуль)</comment>
  </data>
  <data name="OwnPositionIvLine.ShowLongPositions.Name" xml:space="preserve">
    <value>Show long</value>
    <comment>Показывать длинные</comment>
  </data>
  <data name="OwnPositionIvLine.ShowLongPositions.Description" xml:space="preserve">
    <value>Show long or short positions</value>
    <comment>Показывать длинные позиции или короткие?</comment>
  </data>
  <data name="OwnPositionIvLine.DisplayUnits.Name" xml:space="preserve">
    <value>Display units</value>
    <comment>Единицы отображения</comment>
  </data>
  <data name="OwnPositionIvLine.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
    <comment>Единицы отображения (сотни, тысячи, как есть)</comment>
  </data>
  <data name="SellOptions.Name" xml:space="preserve">
    <value>Sell Options</value>
  </data>
  <data name="SellOptions.Description" xml:space="preserve">
    <value>Sell options while position risk is 'small'</value>
  </data>
  <data name="SellOptionGroup.Name" xml:space="preserve">
    <value>Sell option group</value>
    <comment>Продажа группы опционов</comment>
  </data>
  <data name="SellOptionGroup.Description" xml:space="preserve">
    <value>Sell many options while position risk is 'small'</value>
    <comment>Продажа группы опционов до заданного уровня риска</comment>
  </data>
  <data name="SellOptionGroupDelta.Name" xml:space="preserve">
    <value>Sell option group (delta range)</value>
    <comment>Продажа группы опционов (диапазон по дельте)</comment>
  </data>
  <data name="SellOptionGroupDelta.Description" xml:space="preserve">
    <value>Sell many options while position risk is 'small' (strike range is set in units of delta)</value>
    <comment>Продажа группы опционов до заданного уровня риска (диапазон страйков задается в единицах дельты)</comment>
  </data>
  <data name="SetViewport.Name" xml:space="preserve">
    <value>Set Viewport</value>
  </data>
  <data name="SetViewport.Description" xml:space="preserve">
    <value>Configure chart visible region: ranges of axes, grid step, etc.</value>
  </data>
  <data name="SetViewport.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SetViewport.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SetViewport.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SetViewport.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesNumericalDelta.Name" xml:space="preserve">
    <value>Single Series Numerical Delta</value>
  </data>
  <data name="SingleSeriesNumericalDelta.Description" xml:space="preserve">
    <value>Estimates a delta profile with numerical differentiation (build a delta profile)</value>
  </data>
  <data name="SingleSeriesNumericalDelta.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="SingleSeriesNumericalDelta.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="SingleSeriesNumericalDelta.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalDelta.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.Name" xml:space="preserve">
    <value>Numerical Delta (IntSer)</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.Description" xml:space="preserve">
    <value>Estimates a delta using a position profile</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesNumericalGamma.Name" xml:space="preserve">
    <value>Single Series Numerical Gamma</value>
  </data>
  <data name="SingleSeriesNumericalGamma.Description" xml:space="preserve">
    <value>Estimates a gamma profile with numerical differentiation</value>
  </data>
  <data name="SingleSeriesNumericalGamma.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="SingleSeriesNumericalGamma.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="SingleSeriesNumericalGamma.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalGamma.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.Name" xml:space="preserve">
    <value>Numerical Gamma (IntSer)</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.Description" xml:space="preserve">
    <value>Estimates a gamma position using its delta profile</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesNumericalTheta.Name" xml:space="preserve">
    <value>Single Series Numerical Theta</value>
  </data>
  <data name="SingleSeriesNumericalTheta.Description" xml:space="preserve">
    <value>Estimates a theta profile with numerical differentiation (build a theta profile)</value>
  </data>
  <data name="SingleSeriesNumericalTheta.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="SingleSeriesNumericalTheta.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="SingleSeriesNumericalTheta.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalTheta.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesNumericalVega.Name" xml:space="preserve">
    <value>Single Series Numerical Vega</value>
  </data>
  <data name="SingleSeriesNumericalVega.Description" xml:space="preserve">
    <value>Estimates a vega profile with numerical differentiation (build a vega profile)</value>
  </data>
  <data name="SingleSeriesNumericalVega.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="SingleSeriesNumericalVega.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="SingleSeriesNumericalVega.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalVega.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesPositionGrid.Name" xml:space="preserve">
    <value>Single Series Position Grid</value>
  </data>
  <data name="SingleSeriesPositionGrid.Description" xml:space="preserve">
    <value>Grid of entire option position (count semistraddles)</value>
  </data>
  <data name="SingleSeriesPositionGrid.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionGrid.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionGrid.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesPositionGrid.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesPositionList.Name" xml:space="preserve">
    <value>Single Series Position List</value>
  </data>
  <data name="SingleSeriesPositionList.Description" xml:space="preserve">
    <value>A list of all user's trades in one option series</value>
  </data>
  <data name="SingleSeriesPositionList.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionList.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionList.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesPositionList.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesProfile.Name" xml:space="preserve">
    <value>Single Series Profile</value>
  </data>
  <data name="SingleSeriesProfile.Description" xml:space="preserve">
    <value>A single series position profile (change of currency rate is not included) as a function of BA price</value>
  </data>
  <data name="SingleSeriesProfile.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesProfile.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesProfile.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesProfile.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesProfile.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesProfile.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SingleSeriesProfile.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesProfile.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesProfile.TwoSideDelta.Name" xml:space="preserve">
    <value>Two side delta</value>
  </data>
  <data name="SingleSeriesProfile.TwoSideDelta.Description" xml:space="preserve">
    <value>Calculate delta to the left and to the right from the strike</value>
  </data>
  <data name="SmileImitation3.Name" xml:space="preserve">
    <value>Smile Imitation v3</value>
  </data>
  <data name="SmileImitation3.Description" xml:space="preserve">
    <value>Smile imitation using arbitrary function with 3 parameters</value>
  </data>
  <data name="SmileImitation3.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SmileImitation3.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SmileImitation3.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitation3.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SmileImitation5.Name" xml:space="preserve">
    <value>Smile Imitation v5</value>
  </data>
  <data name="SmileImitation5.Description" xml:space="preserve">
    <value>Smile imitation using application-wide user function in Global Cache</value>
  </data>
  <data name="SmileImitation5.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SmileImitation5.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SmileImitation5.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitation5.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="TotalCommission.Name" xml:space="preserve">
    <value>Total Commission</value>
  </data>
  <data name="TotalCommission.Description" xml:space="preserve">
    <value>Total commission including closed positions</value>
  </data>
  <data name="TotalQty.Name" xml:space="preserve">
    <value>Total Open Qty</value>
  </data>
  <data name="TotalQty.Description" xml:space="preserve">
    <value>Pure open position in a given security</value>
  </data>
  <data name="TotalRiskN2.Name" xml:space="preserve">
    <value>Total Risk N2</value>
  </data>
  <data name="TotalRiskN2.Description" xml:space="preserve">
    <value>Total risk of position as number of semistraddles</value>
  </data>
  <data name="TransformSmile.Name" xml:space="preserve">
    <value>Transform Smile</value>
  </data>
  <data name="TransformSmile.Description" xml:space="preserve">
    <value>Transform smile as requested in parameters</value>
  </data>
  <data name="VerticalLine2.Name" xml:space="preserve">
    <value>Vertical Line</value>
  </data>
  <data name="VerticalLine2.Description" xml:space="preserve">
    <value>Vertical line for CanvasPane. It is possible to trade base asset using this control.</value>
  </data>
  <data name="CentralStrike.SwitchRatioPct.Name" xml:space="preserve">
    <value>Switch Ratio Pct</value>
  </data>
  <data name="CentralStrike.SwitchRatioPct.Description" xml:space="preserve">
    <value>Market should pass this percent of distance to next strike to switch central strike</value>
  </data>
  <data name="CentralStrike.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="CentralStrike.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract most important options</value>
  </data>
  <data name="CentralStrike.DisplayUnits.Name" xml:space="preserve">
    <value>Display Units</value>
  </data>
  <data name="CentralStrike.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
  </data>
  <data name="CentralStrike.DisplayPrice.Name" xml:space="preserve">
    <value>Display Price</value>
  </data>
  <data name="CentralStrike.DisplayPrice.Description" xml:space="preserve">
    <value>Base asset price (only to display at UI)</value>
  </data>
  <data name="IvOnF.RepeatLastIv.Name" xml:space="preserve">
    <value>Repeat Last IV</value>
  </data>
  <data name="IvOnF.RepeatLastIv.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="AutoHedger.MinPeriod.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="AutoHedger.MinPeriod.Description" xml:space="preserve">
    <value>Hedge period (seconds)</value>
  </data>
  <data name="BuyOptions.EntryShift.Name" xml:space="preserve">
    <value>Entry shift</value>
  </data>
  <data name="BuyOptions.EntryShift.Description" xml:space="preserve">
    <value>Entry shift to get lower buy price (price step)</value>
  </data>
  <data name="BuyOptions.ExitShift.Name" xml:space="preserve">
    <value>Exit shift</value>
  </data>
  <data name="BuyOptions.ExitShift.Description" xml:space="preserve">
    <value>Exit shift to get quick execution (price step)</value>
  </data>
  <data name="NumericalDeltaOnF3.PrintDeltaInLog.Name" xml:space="preserve">
    <value>Print in Log</value>
  </data>
  <data name="NumericalDeltaOnF3.PrintDeltaInLog.Description" xml:space="preserve">
    <value>Print delta in main log</value>
  </data>
  <data name="PositionsManager.BlockTrading.Name" xml:space="preserve">
    <value>Block Trading</value>
  </data>
  <data name="PositionsManager.BlockTrading.Description" xml:space="preserve">
    <value>When true trading is completely blocked to avoid user misclick errors</value>
  </data>
  <data name="PositionsManager.DropVirtualPos.Name" xml:space="preserve">
    <value>Drop Virtual Positions</value>
  </data>
  <data name="PositionsManager.DropVirtualPos.Description" xml:space="preserve">
    <value>Drop virtual positions</value>
  </data>
  <data name="PositionsManager.UseGlobalCache.Name" xml:space="preserve">
    <value>Use Global Cache</value>
  </data>
  <data name="PositionsManager.UseGlobalCache.Description" xml:space="preserve">
    <value>Use global cache</value>
  </data>
  <data name="SellOptions.OptionType.Name" xml:space="preserve">
    <value>Option type</value>
  </data>
  <data name="SellOptions.OptionType.Description" xml:space="preserve">
    <value>Limit trading to options of given type (call, put, both)</value>
  </data>
  <data name="SellOptions.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="SellOptions.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="SellOptions.EntryShift.Name" xml:space="preserve">
    <value>Entry shift</value>
  </data>
  <data name="SellOptions.EntryShift.Description" xml:space="preserve">
    <value>Entry shift to get higher sell price (price step)</value>
  </data>
  <data name="SellOptions.ExitShift.Name" xml:space="preserve">
    <value>Exit shift</value>
  </data>
  <data name="SellOptions.ExitShift.Description" xml:space="preserve">
    <value>Exit shift to get quick execution (price step)</value>
  </data>
  <data name="SellOptionGroup.OptionType.Name" xml:space="preserve">
    <value>Option type</value>
    <comment>Тип опциона</comment>
  </data>
  <data name="SellOptionGroup.OptionType.Description" xml:space="preserve">
    <value>Limit trading to options of given type (call, put, both)</value>
    <comment>Ограничение на тип торгуемого инструмента (колл, пут, котируются одновременно оба)</comment>
  </data>
  <data name="SellOptionGroup.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
    <comment>Объём заявки</comment>
  </data>
  <data name="SellOptionGroup.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
    <comment>Объём заявки</comment>
  </data>
  <data name="SellOptionGroup.EntryShift.Name" xml:space="preserve">
    <value>Entry shift</value>
    <comment>Сдвиг входа</comment>
  </data>
  <data name="SellOptionGroup.EntryShift.Description" xml:space="preserve">
    <value>Entry shift to get higher sell price (price step)</value>
    <comment>Сдвиг входа для увеличения цены продажи (шаг цены)</comment>
  </data>
  <data name="SellOptionGroup.ExitShift.Name" xml:space="preserve">
    <value>Exit shift</value>
    <comment>Сдвиг выхода</comment>
  </data>
  <data name="SellOptionGroup.ExitShift.Description" xml:space="preserve">
    <value>Exit shift to get quick execution (price step)</value>
    <comment>Сдвиг выхода для быстрого закрытия позиции (шаг цены)</comment>
  </data>
  <data name="SellOptionGroup.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
    <comment>Шаг страйков</comment>
  </data>
  <data name="SellOptionGroup.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract the most important options</value>
    <comment>Шаг страйков для выделения главных подсерий</comment>
  </data>
  <data name="SellOptionGroup.StrikeAmount.Name" xml:space="preserve">
    <value>Strike amount</value>
    <comment>Количество страйков</comment>
  </data>
  <data name="SellOptionGroup.StrikeAmount.Description" xml:space="preserve">
    <value>Strike amount to set your orders (up and down from the central strike)</value>
    <comment>Количество страйков для котирования (в обе стороны от центрального страйка)</comment>
  </data>
  <data name="SellOptionGroupDelta.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
    <comment>Объём заявки</comment>
  </data>
  <data name="SellOptionGroupDelta.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
    <comment>Объём заявки</comment>
  </data>
  <data name="SellOptionGroupDelta.EntryShift.Name" xml:space="preserve">
    <value>Entry shift</value>
    <comment>Сдвиг входа</comment>
  </data>
  <data name="SellOptionGroupDelta.EntryShift.Description" xml:space="preserve">
    <value>Entry shift to get higher sell price (price step)</value>
    <comment>Сдвиг входа для уменьшения цены покупки (шаг цены)</comment>
  </data>
  <data name="SellOptionGroupDelta.ExitShift.Name" xml:space="preserve">
    <value>Exit shift</value>
    <comment>Сдвиг выхода</comment>
  </data>
  <data name="SellOptionGroupDelta.ExitShift.Description" xml:space="preserve">
    <value>Exit shift to get quick execution (price step)</value>
    <comment>Сдвиг выхода для быстрого закрытия позиции (шаг цены)</comment>
  </data>
  <data name="SellOptionGroupDelta.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
    <comment>Шаг страйков</comment>
  </data>
  <data name="SellOptionGroupDelta.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract the most important options</value>
    <comment>Шаг страйков для выделения главных подсерий</comment>
  </data>
  <data name="SellOptionGroupDelta.MinDeltaPct.Name" xml:space="preserve">
    <value>Min delta, %</value>
    <comment>Мин. дельта, %</comment>
  </data>
  <data name="SellOptionGroupDelta.MinDeltaPct.Description" xml:space="preserve">
    <value>The lowest working delta we allow to quote (as percents)</value>
    <comment>Минимальная рабочая дельта, которую мы согласны котировать (в процентах)</comment>
  </data>
  <data name="SellOptionGroupDelta.MaxDeltaPct.Name" xml:space="preserve">
    <value>Max delta, %</value>
    <comment>Макс. дельта, %</comment>
  </data>
  <data name="SellOptionGroupDelta.MaxDeltaPct.Description" xml:space="preserve">
    <value>The highest working delta we allow to quote (as percents)</value>
    <comment>Максимальная рабочая дельта, которую мы согласны котировать (в процентах)</comment>
  </data>
  <data name="SellOptionGroupDelta.CheckAbsDelta.Name" xml:space="preserve">
    <value>Check absolute delta</value>
    <comment>Проверять модуль дельты</comment>
  </data>
  <data name="SellOptionGroupDelta.CheckAbsDelta.Description" xml:space="preserve">
    <value>Check absolute value of option's delta</value>
    <comment>Флаг того, что дельту опционов следует проверять по модулю (без учета знака)</comment>
  </data>
  <data name="TotalProfit.Name" xml:space="preserve">
    <value>Profit ATM (IntSer)</value>
  </data>
  <data name="TotalProfit.Description" xml:space="preserve">
    <value>Numerical estimate of profit at-the-money (only one point is processed using position profile)</value>
  </data>
  <data name="TotalProfit.Profit.Name" xml:space="preserve">
    <value>Profit</value>
  </data>
  <data name="TotalProfit.Profit.Description" xml:space="preserve">
    <value>Current position profit</value>
  </data>
  <data name="TotalProfit.PrintProfitInLog.Name" xml:space="preserve">
    <value>Print in Log</value>
  </data>
  <data name="TotalProfit.PrintProfitInLog.Description" xml:space="preserve">
    <value>Print profit in main log</value>
  </data>
  <data name="TotalProfit.ScaleMultiplier.Name" xml:space="preserve">
    <value>Scale multiplier</value>
  </data>
  <data name="TotalProfit.ScaleMultiplier.Description" xml:space="preserve">
    <value>Scale multiplier to convert profit from price units to money (i.e. dollars or euros)</value>
  </data>
  <data name="OptionSelector.BaseSecPrefix.Name" xml:space="preserve">
    <value>Base asset</value>
  </data>
  <data name="OptionSelector.BaseSecPrefix.Description" xml:space="preserve">
    <value>Select Base Asset (RI, Si, Eu, ES, ...)</value>
  </data>
  <data name="OptionSelector.OptionSeries.Name" xml:space="preserve">
    <value>Option Series</value>
  </data>
  <data name="OptionSelector.OptionSeries.Description" xml:space="preserve">
    <value>Select option series (RIH5, SiG5, ESM6, ...)</value>
  </data>
  <data name="OptionSeriesSelector.Name" xml:space="preserve">
    <value>Option Series Selector</value>
  </data>
  <data name="OptionSeriesSelector.Description" xml:space="preserve">
    <value>Choose one of several option series from single OPTION source</value>
  </data>
  <data name="OptionSeriesSelector.AliveOnly.Name" xml:space="preserve">
    <value>Alive Only</value>
  </data>
  <data name="OptionSeriesSelector.AliveOnly.Description" xml:space="preserve">
    <value>Handler will use only alive option series</value>
  </data>
  <data name="OptionSeriesSelector.OptionSeries.Name" xml:space="preserve">
    <value>Option Series</value>
  </data>
  <data name="OptionSeriesSelector.OptionSeries.Description" xml:space="preserve">
    <value>Select option series (RIH5, SiG5, ESM6, ...)</value>
  </data>
  <data name="SeriesSelector.Name" xml:space="preserve">
    <value>Series Selector</value>
  </data>
  <data name="SeriesSelector.Description" xml:space="preserve">
    <value>Choose one of several option series</value>
  </data>
  <data name="SeriesSelector.AliveOnly.Name" xml:space="preserve">
    <value>Alive Only</value>
  </data>
  <data name="SeriesSelector.AliveOnly.Description" xml:space="preserve">
    <value>Handler will use only alive option series</value>
  </data>
  <data name="SeriesSelector.OptionSeries.Name" xml:space="preserve">
    <value>Option Series</value>
  </data>
  <data name="SeriesSelector.OptionSeries.Description" xml:space="preserve">
    <value>Select option series (RIH5, SiG5, ESM6, ...)</value>
  </data>
  <data name="GetValueAtm.Name" xml:space="preserve">
    <value>Get Value ATM (IntSer)</value>
  </data>
  <data name="GetValueAtm.Description" xml:space="preserve">
    <value>Numerical estimate of value at-the-money (only one point of profile is returned)</value>
  </data>
  <data name="GetValueAtm.Moneyness.Name" xml:space="preserve">
    <value>Moneyness</value>
  </data>
  <data name="GetValueAtm.Moneyness.Description" xml:space="preserve">
    <value>Moneyness</value>
  </data>
  <data name="GetValueAtm.Result.Name" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="GetValueAtm.Result.Description" xml:space="preserve">
    <value>Value ATM</value>
  </data>
  <data name="GetValueAtm.PrintInLog.Name" xml:space="preserve">
    <value>Print in Log</value>
  </data>
  <data name="GetValueAtm.PrintInLog.Description" xml:space="preserve">
    <value>Print in main log</value>
  </data>
  <data name="IvOnF2.Name" xml:space="preserve">
    <value>IV ATM (by tick)</value>
  </data>
  <data name="IvOnF2.Description" xml:space="preserve">
    <value>Implied Volatility at-the-money</value>
  </data>
  <data name="IvOnF2.RepeatLastIv.Name" xml:space="preserve">
    <value>Repeat Last IV</value>
  </data>
  <data name="IvOnF2.RepeatLastIv.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="IvOnF2.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="IvOnF2.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="IvOnF2.ShowNodes.Name" xml:space="preserve">
    <value>Show Nodes</value>
  </data>
  <data name="IvOnF2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="CloseVirtualFutPosition.FixedPx.Name" xml:space="preserve">
    <value>Fixed Price</value>
  </data>
  <data name="CloseVirtualFutPosition.FixedPx.Description" xml:space="preserve">
    <value>Exit price for virtual futures position</value>
  </data>
  <data name="CloseVirtualFutPosition.TimeToLive.Name" xml:space="preserve">
    <value>Time to Live</value>
  </data>
  <data name="CloseVirtualFutPosition.TimeToLive.Description" xml:space="preserve">
    <value>Position lifetime (in minutes)</value>
  </data>
  <data name="ExchangeTheorPx.Multiplier.Name" xml:space="preserve">
    <value>Multiplier</value>
  </data>
  <data name="ExchangeTheorPx.Multiplier.Description" xml:space="preserve">
    <value>Price multiplier</value>
  </data>
  <data name="ExchangeTheorPx.ShiftPx.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="ExchangeTheorPx.ShiftPx.Description" xml:space="preserve">
    <value>Price shift (price steps)</value>
  </data>
  <data name="ExchangeTheorSigma2.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="ExchangeTheorSigma2.ReturnPct.Description" xml:space="preserve">
    <value>Return volatility as percents</value>
  </data>
  <data name="ExchangeTheorSigma2.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="ExchangeTheorSigma2.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="ExchangeTheorSigma2.MultiplierPx.Name" xml:space="preserve">
    <value>Multiplier</value>
  </data>
  <data name="ExchangeTheorSigma2.MultiplierPx.Description" xml:space="preserve">
    <value>Price multiplier</value>
  </data>
  <data name="ExchangeTheorSigma2.ShiftPx.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="ExchangeTheorSigma2.ShiftPx.Description" xml:space="preserve">
    <value>Price shift (price steps)</value>
  </data>
  <data name="ExchangeTheorSigma2.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry Time</value>
  </data>
  <data name="ExchangeTheorSigma2.ExpiryTime.Description" xml:space="preserve">
    <value>Exact expiration time of day (HH:mm)</value>
  </data>
  <data name="ExchangeTheorSigma3.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="ExchangeTheorSigma3.ReturnPct.Description" xml:space="preserve">
    <value>Return volatility as percents</value>
  </data>
  <data name="ExchangeTheorSigma3.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="ExchangeTheorSigma3.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="ExchangeTheorSigma3.MultiplierPx.Name" xml:space="preserve">
    <value>Multiplier</value>
  </data>
  <data name="ExchangeTheorSigma3.MultiplierPx.Description" xml:space="preserve">
    <value>Price multiplier</value>
  </data>
  <data name="ExchangeTheorSigma3.ShiftPx.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="ExchangeTheorSigma3.ShiftPx.Description" xml:space="preserve">
    <value>Price shift (price steps)</value>
  </data>
  <data name="ExchangeTheorSigma3.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry Time</value>
  </data>
  <data name="ExchangeTheorSigma3.ExpiryTime.Description" xml:space="preserve">
    <value>Exact expiration time of day (HH:mm)</value>
  </data>
  <data name="ExchangeTheorSigma5.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="ExchangeTheorSigma5.ReturnPct.Description" xml:space="preserve">
    <value>Return volatility as percents</value>
  </data>
  <data name="ExchangeTheorSigma5.RescaleTime.Name" xml:space="preserve">
    <value>Rescale Time</value>
  </data>
  <data name="ExchangeTheorSigma5.RescaleTime.Description" xml:space="preserve">
    <value>Rescale time-to-expiry to our internal?</value>
  </data>
  <data name="ExchangeTheorSigma5.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="ExchangeTheorSigma5.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="ExchangeTheorSigma5.MultiplierPx.Name" xml:space="preserve">
    <value>Multiplier</value>
  </data>
  <data name="ExchangeTheorSigma5.MultiplierPx.Description" xml:space="preserve">
    <value>Price multiplier</value>
  </data>
  <data name="ExchangeTheorSigma5.ShiftPx.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="ExchangeTheorSigma5.ShiftPx.Description" xml:space="preserve">
    <value>Price shift (price steps)</value>
  </data>
  <data name="ExchangeTheorSigma5.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry Time</value>
  </data>
  <data name="ExchangeTheorSigma5.ExpiryTime.Description" xml:space="preserve">
    <value>Exact expiration time of day (HH:mm)</value>
  </data>
  <data name="ForwardTheorPx.Strike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="ForwardTheorPx.Strike.Description" xml:space="preserve">
    <value>Strike to calculate forward price</value>
  </data>
  <data name="GlobalHv.UseAllData.Name" xml:space="preserve">
    <value>Use All Data</value>
  </data>
  <data name="GlobalHv.UseAllData.Description" xml:space="preserve">
    <value>Should handler use all data including overnight gaps?</value>
  </data>
  <data name="GlobalHv.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="GlobalHv.Period.Description" xml:space="preserve">
    <value>Calculation period</value>
  </data>
  <data name="GlobalHv.Timeframe.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="GlobalHv.Timeframe.Description" xml:space="preserve">
    <value>Timeframe (seconds)</value>
  </data>
  <data name="GlobalHv.AnnualizingMultiplier.Name" xml:space="preserve">
    <value>Annualizing Multiplier</value>
  </data>
  <data name="GlobalHv.AnnualizingMultiplier.Description" xml:space="preserve">
    <value>Multiplier to convert volatility to annualized value</value>
  </data>
  <data name="GlobalHv.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="GlobalHv.ReturnPct.Description" xml:space="preserve">
    <value>Return volatility as percents</value>
  </data>
  <data name="GlobalHv.RepeatLastHv.Name" xml:space="preserve">
    <value>Repeat Last HV</value>
  </data>
  <data name="GlobalHv.RepeatLastHv.Description" xml:space="preserve">
    <value>When true it will find and repeat last known value in case when current value is unavailable</value>
  </data>
  <data name="Heartbeat.DelayMs.Name" xml:space="preserve">
    <value>Delay</value>
  </data>
  <data name="Heartbeat.DelayMs.Description" xml:space="preserve">
    <value>Delay between calls (ms)</value>
  </data>
  <data name="Heartbeat.OnlyAtTradingSession.Name" xml:space="preserve">
    <value>Trading session only</value>
  </data>
  <data name="Heartbeat.OnlyAtTradingSession.Description" xml:space="preserve">
    <value>If the flag is set, handler initiates execution only in agent mode at trading time when data provider is connected to market and the instrument is actually traded.</value>
  </data>
  <data name="HeartbeatHandler.Interval.Name" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="HeartbeatHandler.Interval.Description" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="GaussSmile.IsVisiblePoints.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="GaussSmile.IsVisiblePoints.Description" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="GaussSmile.GenerateTails.Name" xml:space="preserve">
    <value>Generate Tails</value>
  </data>
  <data name="GaussSmile.GenerateTails.Description" xml:space="preserve">
    <value>Prepare invisible tails to extend working range</value>
  </data>
  <data name="GaussSmile.IvAtmPct.Name" xml:space="preserve">
    <value>IV ATM</value>
  </data>
  <data name="GaussSmile.IvAtmPct.Description" xml:space="preserve">
    <value>IV ATM (percents)</value>
  </data>
  <data name="GaussSmile.ShiftPct.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="GaussSmile.ShiftPct.Description" xml:space="preserve">
    <value>Shift (percents)</value>
  </data>
  <data name="GaussSmile.DepthPct.Name" xml:space="preserve">
    <value>Depth</value>
  </data>
  <data name="GaussSmile.DepthPct.Description" xml:space="preserve">
    <value>Depth (percents)</value>
  </data>
  <data name="AnyOption" xml:space="preserve">
    <value>Security or Option Series or OPTION</value>
    <comment>Любой инструмент (Security or Option Series or OPTION) для задания в качестве имени атрибута Input</comment>
  </data>
  <data name="HV.UseAllData.Name" xml:space="preserve">
    <value>Use All Data</value>
  </data>
  <data name="HV.UseAllData.Description" xml:space="preserve">
    <value>Should handler use all data including overnight gaps?</value>
  </data>
  <data name="HV.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="HV.Period.Description" xml:space="preserve">
    <value>Calculation period</value>
  </data>
  <data name="HV.AnnualizingMultiplier.Name" xml:space="preserve">
    <value>Annualizing Multiplier</value>
  </data>
  <data name="HV.AnnualizingMultiplier.Description" xml:space="preserve">
    <value>Multiplier to convert volatility to annualized value</value>
  </data>
  <data name="HV.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="HV.ReturnPct.Description" xml:space="preserve">
    <value>Return volatility as percents</value>
  </data>
  <data name="HV.Reset.Name" xml:space="preserve">
    <value>Repeat</value>
  </data>
  <data name="HV.Reset.Description" xml:space="preserve">
    <value>Repeat calculation for all bars every execution</value>
  </data>
  <data name="HV.UseGlobalCache.Name" xml:space="preserve">
    <value>Use Global Cache</value>
  </data>
  <data name="HV.UseGlobalCache.Description" xml:space="preserve">
    <value>Use global cache</value>
  </data>
  <data name="HV.AllowGlobalReadWrite.Name" xml:space="preserve">
    <value>Allow Global Write</value>
  </data>
  <data name="HV.AllowGlobalReadWrite.Description" xml:space="preserve">
    <value>Permission to write to Global Cache</value>
  </data>
  <data name="HV.GlobalSavePeriod.Name" xml:space="preserve">
    <value>Global Save Period</value>
  </data>
  <data name="HV.GlobalSavePeriod.Description" xml:space="preserve">
    <value>Period to write to Global Cache</value>
  </data>
  <data name="IvOnF.UseGlobalCache.Name" xml:space="preserve">
    <value>Use Global Cache</value>
  </data>
  <data name="IvOnF.UseGlobalCache.Description" xml:space="preserve">
    <value>Use global cache</value>
  </data>
  <data name="IvOnF.AllowGlobalReadWrite.Name" xml:space="preserve">
    <value>Allow Global Write</value>
  </data>
  <data name="IvOnF.AllowGlobalReadWrite.Description" xml:space="preserve">
    <value>Permission to write to Global Cache</value>
  </data>
  <data name="IvOnF.GlobalSavePeriod.Name" xml:space="preserve">
    <value>Global Save Period</value>
  </data>
  <data name="IvOnF.GlobalSavePeriod.Description" xml:space="preserve">
    <value>Period to write to Global Cache</value>
  </data>
  <data name="IvOnF.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
  </data>
  <data name="IvOnF.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="IvOnF.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
  </data>
  <data name="IvOnF.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="IvOnF.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvOnF.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvSmile.OptPxMode.Name" xml:space="preserve">
    <value>Price Mode</value>
  </data>
  <data name="IvSmile.OptPxMode.Description" xml:space="preserve">
    <value>Algorythm to get option price</value>
  </data>
  <data name="IvSmile.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="IvSmile.OptionType.Description" xml:space="preserve">
    <value>Option type to be used by handler (call, put, best volatility)</value>
  </data>
  <data name="IvSmile.ShiftBid.Name" xml:space="preserve">
    <value>Shift Bid</value>
  </data>
  <data name="IvSmile.ShiftBid.Description" xml:space="preserve">
    <value>Shift Bids down (price steps)</value>
  </data>
  <data name="IvSmile.ShiftAsk.Name" xml:space="preserve">
    <value>Shift Ask</value>
  </data>
  <data name="IvSmile.ShiftAsk.Description" xml:space="preserve">
    <value>Shift Asks up (price steps)</value>
  </data>
  <data name="IvSmile.MaxSigmaPct.Name" xml:space="preserve">
    <value>Max Sigma Pct</value>
  </data>
  <data name="IvSmile.MaxSigmaPct.Description" xml:space="preserve">
    <value>Max volatility limit (percents)</value>
  </data>
  <data name="IvSmile.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
  </data>
  <data name="IvSmile.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="IvSmile.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
  </data>
  <data name="IvSmile.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="IvSmile.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvSmile.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="BlackScholesConstSmile2.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="BlackScholesConstSmile2.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="BlackScholesConstSmile2.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="BlackScholesConstSmile2.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="BlackScholesConstSmile2.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="BlackScholesConstSmile2.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="BlackScholesDelta.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
  </data>
  <data name="BlackScholesDelta.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="BlackScholesDelta.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
  </data>
  <data name="BlackScholesDelta.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="BlackScholesDelta.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="BlackScholesDelta.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="BlackScholesGreeks.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
  </data>
  <data name="BlackScholesGreeks.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="BlackScholesGreeks.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
  </data>
  <data name="BlackScholesGreeks.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="BlackScholesGreeks.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="BlackScholesGreeks.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="GaussSmile.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
  </data>
  <data name="GaussSmile.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="GaussSmile.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
  </data>
  <data name="GaussSmile.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="GaussSmile.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="GaussSmile.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvOnF2.UseGlobalCache.Name" xml:space="preserve">
    <value>Use Global Cache</value>
  </data>
  <data name="IvOnF2.UseGlobalCache.Description" xml:space="preserve">
    <value>Use global cache</value>
  </data>
  <data name="IvOnF2.AllowGlobalReadWrite.Name" xml:space="preserve">
    <value>Allow Global Write</value>
  </data>
  <data name="IvOnF2.AllowGlobalReadWrite.Description" xml:space="preserve">
    <value>Permission to write to Global Cache</value>
  </data>
  <data name="IvOnF2.GlobalSavePeriod.Name" xml:space="preserve">
    <value>Global Save Period</value>
  </data>
  <data name="IvOnF2.GlobalSavePeriod.Description" xml:space="preserve">
    <value>Period to write to Global Cache</value>
  </data>
  <data name="IvOnF2.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="IvOnF2.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="IvOnF2.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="IvOnF2.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="IvOnF2.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="IvOnF2.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SingleSeriesNumericalDelta.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="SingleSeriesNumericalDelta.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalDelta.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="SingleSeriesNumericalDelta.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalDelta.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="SingleSeriesNumericalDelta.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SingleSeriesNumericalGamma.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="SingleSeriesNumericalGamma.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalGamma.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="SingleSeriesNumericalGamma.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalGamma.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="SingleSeriesNumericalGamma.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SingleSeriesNumericalTheta.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="SingleSeriesNumericalTheta.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalTheta.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="SingleSeriesNumericalTheta.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalTheta.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="SingleSeriesNumericalTheta.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SingleSeriesNumericalVega.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="SingleSeriesNumericalVega.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalVega.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="SingleSeriesNumericalVega.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalVega.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="SingleSeriesNumericalVega.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvOnFAllSeries.Name" xml:space="preserve">
    <value>IV ATM (all series)</value>
  </data>
  <data name="IvOnFAllSeries.Description" xml:space="preserve">
    <value>Implied Volatility at-the-money (all option series are processed)</value>
  </data>
  <data name="OptionSeriesByNumber2.ExpirationMode.Name" xml:space="preserve">
    <value>Expiration Algo</value>
  </data>
  <data name="OptionSeriesByNumber2.ExpirationMode.Description" xml:space="preserve">
    <value>Algorythm to determine expiration date</value>
  </data>
  <data name="OptionSeriesByNumber2.Expiry.Name" xml:space="preserve">
    <value>Expiry</value>
  </data>
  <data name="OptionSeriesByNumber2.Expiry.Description" xml:space="preserve">
    <value>Expiration datetime (including time of a day) for algorythm FixedExpiry</value>
  </data>
  <data name="OptionSeriesByNumber2.Number.Name" xml:space="preserve">
    <value>Series index</value>
  </data>
  <data name="OptionSeriesByNumber2.Number.Description" xml:space="preserve">
    <value>Series index (only alive series) for algorythm ExpiryByNumber</value>
  </data>
  <data name="SingleSeriesProfile.NodesCount.Name" xml:space="preserve">
    <value>Nodes Count</value>
  </data>
  <data name="SingleSeriesProfile.NodesCount.Description" xml:space="preserve">
    <value>Number of additional nodes near money</value>
  </data>
  <data name="InteractiveConstGen.Name" xml:space="preserve">
    <value>Interactive constant</value>
  </data>
  <data name="InteractiveLineGen.Name" xml:space="preserve">
    <value>Interactive line</value>
  </data>
  <data name="NumericalDeltaOnF2.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="NumericalDeltaOnF2.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="NumericalDeltaOnF2.Delta.Name" xml:space="preserve">
    <value>Delta</value>
  </data>
  <data name="NumericalDeltaOnF2.Delta.Description" xml:space="preserve">
    <value>Current delta (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalDeltaOnF2.HedgeDelta.Name" xml:space="preserve">
    <value>Align Delta</value>
  </data>
  <data name="NumericalDeltaOnF2.HedgeDelta.Description" xml:space="preserve">
    <value>Align delta (just to make button on ControlPane)</value>
  </data>
  <data name="OpenVirtualFutPosition.FixedPx.Name" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="OpenVirtualFutPosition.FixedPx.Description" xml:space="preserve">
    <value>Entry price of this virtual position</value>
  </data>
  <data name="OpenVirtualFutPosition.FixedQty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="OpenVirtualFutPosition.FixedQty.Description" xml:space="preserve">
    <value>Entry size of this virtual position</value>
  </data>
  <data name="OpenVirtualOptPosition.FixedStrike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="OpenVirtualOptPosition.FixedStrike.Description" xml:space="preserve">
    <value>Strike of this virtual position</value>
  </data>
  <data name="OpenVirtualOptPosition.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="OpenVirtualOptPosition.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="OpenVirtualOptPosition.FixedPx.Name" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="OpenVirtualOptPosition.FixedPx.Description" xml:space="preserve">
    <value>Entry price of this virtual position</value>
  </data>
  <data name="OpenVirtualOptPosition.FixedQty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="OpenVirtualOptPosition.FixedQty.Description" xml:space="preserve">
    <value>Entry size of this virtual position</value>
  </data>
  <data name="OptionSeriesByNumber.ExpirationMode.Name" xml:space="preserve">
    <value>Expiration Algo</value>
  </data>
  <data name="OptionSeriesByNumber.ExpirationMode.Description" xml:space="preserve">
    <value>Algorythm to determine expiration date</value>
  </data>
  <data name="OptionSeriesByNumber.Expiry.Name" xml:space="preserve">
    <value>Expiry</value>
  </data>
  <data name="OptionSeriesByNumber.Expiry.Description" xml:space="preserve">
    <value>Expiration datetime (including time of a day) for algorythm FixedExpiry</value>
  </data>
  <data name="OptionSeriesByNumber.Number.Name" xml:space="preserve">
    <value>Series index</value>
  </data>
  <data name="OptionSeriesByNumber.Number.Description" xml:space="preserve">
    <value>Series index (only alive series) for algorythm ExpiryByNumber</value>
  </data>
  <data name="TimeToExpiry.CurDateMode.Name" xml:space="preserve">
    <value>Current date algo</value>
  </data>
  <data name="TimeToExpiry.CurDateMode.Description" xml:space="preserve">
    <value>Current date algorythm</value>
  </data>
  <data name="TimeToExpiry.ExpirationMode.Name" xml:space="preserve">
    <value>Expiration algo</value>
  </data>
  <data name="TimeToExpiry.ExpirationMode.Description" xml:space="preserve">
    <value>Algorythm to determine expiration date</value>
  </data>
  <data name="TimeToExpiry.DistanceMode.Name" xml:space="preserve">
    <value>Estimation algo</value>
  </data>
  <data name="TimeToExpiry.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="TimeToExpiry.Expiry.Name" xml:space="preserve">
    <value>Expiry</value>
  </data>
  <data name="TimeToExpiry.Expiry.Description" xml:space="preserve">
    <value>Expiration datetime (including time of a day) for algorythm FixedExpiry</value>
  </data>
  <data name="TimeToExpiry.FixedDate.Name" xml:space="preserve">
    <value>Frozen 'today'</value>
  </data>
  <data name="TimeToExpiry.FixedDate.Description" xml:space="preserve">
    <value>Today datetime (including time of a day) for algorythm FixedDate</value>
  </data>
  <data name="TimeToExpiry.UseDays.Name" xml:space="preserve">
    <value>Use days</value>
  </data>
  <data name="TimeToExpiry.UseDays.Description" xml:space="preserve">
    <value>When true, handler calculates time to expiry as days</value>
  </data>
  <data name="TimeToExpiry.SeriesIndex.Name" xml:space="preserve">
    <value>Series index</value>
  </data>
  <data name="TimeToExpiry.SeriesIndex.Description" xml:space="preserve">
    <value>Series index (only alive series) for algorythm ExpiryByNumber</value>
  </data>
  <data name="TimeToExpiry.Time.Name" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="TimeToExpiry.Time.Description" xml:space="preserve">
    <value>Time to expiry (just to show it on ControlPane)</value>
  </data>
  <data name="TimeToExpiry.CurrentDateShift.Name" xml:space="preserve">
    <value>Current date shift</value>
    <comment>Сдвиг текущей даты</comment>
  </data>
  <data name="TimeToExpiry.CurrentDateShift.Description" xml:space="preserve">
    <value>Shift current date by calendar time interval</value>
    <comment>Сдвинуть текущую дату на указанный интервал календарного времени</comment>
  </data>
  <data name="VerticalLine.SigmaLowPct.Name" xml:space="preserve">
    <value>Sigma Low, %</value>
  </data>
  <data name="VerticalLine.SigmaLowPct.Description" xml:space="preserve">
    <value>Low level of this marker (in percents)</value>
  </data>
  <data name="VerticalLine.SigmaHighPct.Name" xml:space="preserve">
    <value>Sigma High, %</value>
  </data>
  <data name="VerticalLine.SigmaHighPct.Description" xml:space="preserve">
    <value>High level of this marker (in percents)</value>
  </data>
  <data name="AutoHedger.SensitivityPct.Name" xml:space="preserve">
    <value>Sensitivity Pct</value>
  </data>
  <data name="AutoHedger.SensitivityPct.Description" xml:space="preserve">
    <value>Delta should pass this percent of distance to next integer value to align</value>
  </data>
  <data name="BlackScholesConstSmile2.SigmaPct.Name" xml:space="preserve">
    <value>Sigma, %</value>
  </data>
  <data name="BlackScholesConstSmile2.SigmaPct.Description" xml:space="preserve">
    <value>Volatility (percents)</value>
  </data>
  <data name="BlackScholesConstSmile2.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="BlackScholesConstSmile2.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ChartTrading.Qty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="ChartTrading.Qty.Description" xml:space="preserve">
    <value>Trade quantity. Negative value reverts the signal.</value>
  </data>
  <data name="CurrentFutPx.Qty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="CurrentFutPx.Qty.Description" xml:space="preserve">
    <value>Trade quantity. Negative value reverts the signal.</value>
  </data>
  <data name="CurrentFutPx.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip format</value>
  </data>
  <data name="CurrentFutPx.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##', 'P2' etc)</value>
  </data>
  <data name="GetValueAtm.RepeatLastValue.Name" xml:space="preserve">
    <value>Repeat Last Value</value>
  </data>
  <data name="GetValueAtm.RepeatLastValue.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="NumericalDeltaOnF.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="NumericalDeltaOnF.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="NumericalDeltaOnF.Delta.Name" xml:space="preserve">
    <value>Delta</value>
  </data>
  <data name="NumericalDeltaOnF.Delta.Description" xml:space="preserve">
    <value>Current delta (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalDeltaOnF.HedgeDelta.Name" xml:space="preserve">
    <value>Align Delta</value>
  </data>
  <data name="NumericalDeltaOnF.HedgeDelta.Description" xml:space="preserve">
    <value>Align delta (just to make button on ControlPane)</value>
  </data>
  <data name="NumericalDeltaOnF3.Delta.Name" xml:space="preserve">
    <value>Delta</value>
  </data>
  <data name="NumericalDeltaOnF3.Delta.Description" xml:space="preserve">
    <value>Current delta (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalDeltaOnF3.HedgeDelta.Name" xml:space="preserve">
    <value>Align Delta</value>
  </data>
  <data name="NumericalDeltaOnF3.HedgeDelta.Description" xml:space="preserve">
    <value>Align delta (just to make button on ControlPane)</value>
  </data>
  <data name="NumericalGammaOnF.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="NumericalGammaOnF.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="NumericalGammaOnF.Gamma.Name" xml:space="preserve">
    <value>Gamma</value>
  </data>
  <data name="NumericalGammaOnF.Gamma.Description" xml:space="preserve">
    <value>Current gamma (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalGammaOnF3.Gamma.Name" xml:space="preserve">
    <value>Gamma</value>
  </data>
  <data name="NumericalGammaOnF3.Gamma.Description" xml:space="preserve">
    <value>Current gamma (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalThetaOnF.TStep.Name" xml:space="preserve">
    <value>Time Step</value>
  </data>
  <data name="NumericalThetaOnF.TStep.Description" xml:space="preserve">
    <value>Time step for numerical derivative</value>
  </data>
  <data name="NumericalThetaOnF.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="NumericalThetaOnF.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="NumericalThetaOnF.Theta.Name" xml:space="preserve">
    <value>Theta</value>
  </data>
  <data name="NumericalThetaOnF.Theta.Description" xml:space="preserve">
    <value>Current theta (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalThetaOnF.DistanceMode.Name" xml:space="preserve">
    <value>Estimation algo</value>
  </data>
  <data name="NumericalThetaOnF.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="OpenVirtualFutPosition2.FixedPx.Name" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="OpenVirtualFutPosition2.FixedPx.Description" xml:space="preserve">
    <value>Entry price of this virtual position</value>
  </data>
  <data name="OpenVirtualFutPosition2.FixedQty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="OpenVirtualFutPosition2.FixedQty.Description" xml:space="preserve">
    <value>Entry size of this virtual position</value>
  </data>
  <data name="OpenVirtualOptPosition2.FixedStrike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="OpenVirtualOptPosition2.FixedStrike.Description" xml:space="preserve">
    <value>Strike of this virtual position</value>
  </data>
  <data name="OpenVirtualOptPosition2.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="OpenVirtualOptPosition2.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="OpenVirtualOptPosition2.FixedPx.Name" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="OpenVirtualOptPosition2.FixedPx.Description" xml:space="preserve">
    <value>Entry price of this virtual position</value>
  </data>
  <data name="OpenVirtualOptPosition2.FixedQty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="OpenVirtualOptPosition2.FixedQty.Description" xml:space="preserve">
    <value>Entry size of this virtual position</value>
  </data>
  <data name="SingleSeriesNumericalDelta.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesNumericalDelta.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SmileImitation5.SetSlopeByHands.Name" xml:space="preserve">
    <value>Set Skew Manually</value>
  </data>
  <data name="SmileImitation5.SetSlopeByHands.Description" xml:space="preserve">
    <value>Set skew manually</value>
  </data>
  <data name="SmileImitation5.SlopePct.Name" xml:space="preserve">
    <value>Skew, %</value>
  </data>
  <data name="SmileImitation5.SlopePct.Description" xml:space="preserve">
    <value>Skew (percents)</value>
  </data>
  <data name="TotalRiskN2.RepeatLastValue.Name" xml:space="preserve">
    <value>Repeat Last Value</value>
  </data>
  <data name="TotalRiskN2.RepeatLastValue.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="VerticalLine2.SigmaLowPct.Name" xml:space="preserve">
    <value>Sigma low, %</value>
  </data>
  <data name="VerticalLine2.SigmaLowPct.Description" xml:space="preserve">
    <value>Low level of this marker (in percents)</value>
  </data>
  <data name="VerticalLine2.SigmaHighPct.Name" xml:space="preserve">
    <value>Sigma high, %</value>
  </data>
  <data name="VerticalLine2.SigmaHighPct.Description" xml:space="preserve">
    <value>High level of this marker (in percents)</value>
  </data>
  <data name="VerticalLine2.Qty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="VerticalLine2.Qty.Description" xml:space="preserve">
    <value>Trade quantity. Negative value reverts the signal.</value>
  </data>
  <data name="FixedCommission.Name" xml:space="preserve">
    <value>Fixed Commission</value>
  </data>
  <data name="FixedCommission.Description" xml:space="preserve">
    <value>Fixed commission (it can apply 'scalper discount' available in MOEX)</value>
  </data>
  <data name="FixedCommission.ScalpingRule.Name" xml:space="preserve">
    <value>Scalping Discount</value>
  </data>
  <data name="FixedCommission.ScalpingRule.Description" xml:space="preserve">
    <value>Apply 'scalper discount' available in MOEX</value>
  </data>
  <data name="FixedCommission.FutCommission.Name" xml:space="preserve">
    <value>Futures commission</value>
  </data>
  <data name="FixedCommission.FutCommission.Description" xml:space="preserve">
    <value>Futures commission</value>
  </data>
  <data name="FixedCommission.OptCommission.Name" xml:space="preserve">
    <value>Option commission</value>
  </data>
  <data name="FixedCommission.OptCommission.Description" xml:space="preserve">
    <value>Option commission</value>
  </data>
  <data name="TimeToExpiry.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry time</value>
  </data>
  <data name="TimeToExpiry.ExpiryTime.Description" xml:space="preserve">
    <value>Expiration time (including time of a day) for algorythms EXCEPT FixedExpiry</value>
  </data>
  <data name="BlackScholesDelta.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip format</value>
  </data>
  <data name="BlackScholesDelta.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="BlackScholesGreeks.Greek.Name" xml:space="preserve">
    <value>Greek</value>
  </data>
  <data name="BlackScholesGreeks.Greek.Description" xml:space="preserve">
    <value>Greek to be calculated (delta, theta, vega, gamma, etc)</value>
  </data>
  <data name="BlackScholesGreeks.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="BlackScholesGreeks.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="BuyOptions.OptionType.Name" xml:space="preserve">
    <value>Option type</value>
  </data>
  <data name="BuyOptions.OptionType.Description" xml:space="preserve">
    <value>Limit trading to options of given type (call, put, both)</value>
  </data>
  <data name="BuyOptions.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="BuyOptions.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="BuyOptionGroup.OptionType.Name" xml:space="preserve">
    <value>Option type</value>
    <comment>Тип опциона</comment>
  </data>
  <data name="BuyOptionGroup.OptionType.Description" xml:space="preserve">
    <value>Limit trading to options of given type (call, put, both)</value>
    <comment>Ограничение на тип торгуемого инструмента (колл, пут, котируются одновременно оба)</comment>
  </data>
  <data name="BuyOptionGroup.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
    <comment>Объём заявки</comment>
  </data>
  <data name="BuyOptionGroup.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
    <comment>Объём заявки</comment>
  </data>
  <data name="BuyOptionGroup.EntryShift.Name" xml:space="preserve">
    <value>Entry shift</value>
    <comment>Сдвиг входа</comment>
  </data>
  <data name="BuyOptionGroup.EntryShift.Description" xml:space="preserve">
    <value>Entry shift to get lower buy price (price step)</value>
    <comment>Сдвиг входа для уменьшения цены покупки (шаг цены)</comment>
  </data>
  <data name="BuyOptionGroup.ExitShift.Name" xml:space="preserve">
    <value>Exit shift</value>
    <comment>Сдвиг выхода</comment>
  </data>
  <data name="BuyOptionGroup.ExitShift.Description" xml:space="preserve">
    <value>Exit shift to get quick execution (price step)</value>
    <comment>Сдвиг выхода для быстрого закрытия позиции (шаг цены)</comment>
  </data>
  <data name="BuyOptionGroup.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
    <comment>Шаг страйков</comment>
  </data>
  <data name="BuyOptionGroup.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract the most important options</value>
    <comment>Шаг страйков для выделения главных подсерий</comment>
  </data>
  <data name="BuyOptionGroup.StrikeAmount.Name" xml:space="preserve">
    <value>Strike amount</value>
    <comment>Количество страйков</comment>
  </data>
  <data name="BuyOptionGroup.StrikeAmount.Description" xml:space="preserve">
    <value>Strike amount to set your orders (up and down from the central strike)</value>
    <comment>Количество страйков для котирования (в обе стороны от центрального страйка)</comment>
  </data>
  <data name="BuyOptionGroupDelta.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
    <comment>Объём заявки</comment>
  </data>
  <data name="BuyOptionGroupDelta.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
    <comment>Объём заявки</comment>
  </data>
  <data name="BuyOptionGroupDelta.EntryShift.Name" xml:space="preserve">
    <value>Entry shift</value>
    <comment>Сдвиг входа</comment>
  </data>
  <data name="BuyOptionGroupDelta.EntryShift.Description" xml:space="preserve">
    <value>Entry shift to get lower buy price (price step)</value>
    <comment>Сдвиг входа для уменьшения цены покупки (шаг цены)</comment>
  </data>
  <data name="BuyOptionGroupDelta.ExitShift.Name" xml:space="preserve">
    <value>Exit shift</value>
    <comment>Сдвиг выхода</comment>
  </data>
  <data name="BuyOptionGroupDelta.ExitShift.Description" xml:space="preserve">
    <value>Exit shift to get quick execution (price step)</value>
    <comment>Сдвиг выхода для быстрого закрытия позиции (шаг цены)</comment>
  </data>
  <data name="BuyOptionGroupDelta.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
    <comment>Шаг страйков</comment>
  </data>
  <data name="BuyOptionGroupDelta.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract the most important options</value>
    <comment>Шаг страйков для выделения главных подсерий</comment>
  </data>
  <data name="BuyOptionGroupDelta.MinDeltaPct.Name" xml:space="preserve">
    <value>Min delta, %</value>
    <comment>Мин. дельта, %</comment>
  </data>
  <data name="BuyOptionGroupDelta.MinDeltaPct.Description" xml:space="preserve">
    <value>The lowest working delta we allow to quote (as percents)</value>
    <comment>Минимальная рабочая дельта, которую мы согласны котировать (в процентах)</comment>
  </data>
  <data name="BuyOptionGroupDelta.MaxDeltaPct.Name" xml:space="preserve">
    <value>Max delta, %</value>
    <comment>Макс. дельта, %</comment>
  </data>
  <data name="BuyOptionGroupDelta.MaxDeltaPct.Description" xml:space="preserve">
    <value>The highest working delta we allow to quote (as percents)</value>
    <comment>Максимальная рабочая дельта, которую мы согласны котировать (в процентах)</comment>
  </data>
  <data name="BuyOptionGroupDelta.CheckAbsDelta.Name" xml:space="preserve">
    <value>Check absolute delta</value>
    <comment>Проверять модуль дельты</comment>
  </data>
  <data name="BuyOptionGroupDelta.CheckAbsDelta.Description" xml:space="preserve">
    <value>Check absolute value of option's delta</value>
    <comment>Флаг того, что дельту опционов следует проверять по модулю (без учета знака)</comment>
  </data>
  <data name="MarketMakerDelta.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
    <comment>Объём заявки</comment>
  </data>
  <data name="MarketMakerDelta.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
    <comment>Объём заявки</comment>
  </data>
  <data name="MarketMakerDelta.EntryShift.Name" xml:space="preserve">
    <value>Shift, p.s.</value>
    <comment>Сдвиг, ш.ц.</comment>
  </data>
  <data name="MarketMakerDelta.EntryShift.Description" xml:space="preserve">
    <value>Shift to get better buy or sell price (price steps)</value>
    <comment>Сдвиг цены для получения лучшей цены покупки или продажи (в шагах цены)</comment>
  </data>
  <data name="MarketMakerDelta.EntryShiftIvPct.Name" xml:space="preserve">
    <value>Shift, %</value>
    <comment>Сдвиг, %</comment>
  </data>
  <data name="MarketMakerDelta.EntryShiftIvPct.Description" xml:space="preserve">
    <value>Shift to get better buy or sell price (percents of volatility)</value>
    <comment>Сдвиг цены для получения лучшей цены покупки или продажи (в процентах волатильности)</comment>
  </data>
  <data name="MarketMakerDelta.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
    <comment>Шаг страйков</comment>
  </data>
  <data name="MarketMakerDelta.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract the most important options</value>
    <comment>Шаг страйков для выделения главных подсерий</comment>
  </data>
  <data name="MarketMakerDelta.MinDeltaPct.Name" xml:space="preserve">
    <value>Min delta, %</value>
    <comment>Мин. дельта, %</comment>
  </data>
  <data name="MarketMakerDelta.MinDeltaPct.Description" xml:space="preserve">
    <value>The lowest working delta we allow to quote (as percents)</value>
    <comment>Минимальная рабочая дельта, которую мы согласны котировать (в процентах)</comment>
  </data>
  <data name="MarketMakerDelta.MaxDeltaPct.Name" xml:space="preserve">
    <value>Max delta, %</value>
    <comment>Макс. дельта, %</comment>
  </data>
  <data name="MarketMakerDelta.MaxDeltaPct.Description" xml:space="preserve">
    <value>The highest working delta we allow to quote (as percents)</value>
    <comment>Максимальная рабочая дельта, которую мы согласны котировать (в процентах)</comment>
  </data>
  <data name="MarketMakerDelta.CheckAbsDelta.Name" xml:space="preserve">
    <value>Check absolute delta</value>
    <comment>Проверять модуль дельты</comment>
  </data>
  <data name="MarketMakerDelta.CheckAbsDelta.Description" xml:space="preserve">
    <value>Check absolute value of option's delta</value>
    <comment>Флаг того, что дельту опционов следует проверять по модулю (без учета знака)</comment>
  </data>
  <data name="MarketMakerDelta.LiquidProAlgo.Name" xml:space="preserve">
    <value>Force all quotes</value>
    <comment>Выставлять все котировки</comment>
  </data>
  <data name="MarketMakerDelta.LiquidProAlgo.Description" xml:space="preserve">
    <value>Set all quotes at all strikes (this mode is convinient with the Liquid.Pro service)</value>
    <comment>Флаг того, что котировки надо выставлять СРАЗУ ВСЕ (в расчете на работу с сервисом типа Liquid.Pro)</comment>
  </data>
  <data name="MarketMakerDelta.MaxContractsOnStrike.Name" xml:space="preserve">
    <value>Max contracts at strike</value>
    <comment>Макс. контрактов на страйке</comment>
  </data>
  <data name="MarketMakerDelta.MaxContractsOnStrike.Description" xml:space="preserve">
    <value>Maximum amount of contracts at the single strike (absolute value)</value>
    <comment>Максимальное допустимое количество контрактов на одном страйке (без учета знака)</comment>
  </data>
  <data name="ChartTrading.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="ChartTrading.OptionType.Description" xml:space="preserve">
    <value>Option type (when Any, the handler will choose the best quote)</value>
  </data>
  <data name="ChartTrading.OptPxMode.Name" xml:space="preserve">
    <value>Quote Type</value>
  </data>
  <data name="ChartTrading.OptPxMode.Description" xml:space="preserve">
    <value>Quote type (ask or bid)</value>
  </data>
  <data name="CloseVirtualPosition.FixedPx.Name" xml:space="preserve">
    <value>Fixed Price</value>
  </data>
  <data name="CloseVirtualPosition.FixedPx.Description" xml:space="preserve">
    <value>Exit price for virtual position</value>
  </data>
  <data name="CloseVirtualPosition.TimeToLive.Name" xml:space="preserve">
    <value>Time to Live</value>
  </data>
  <data name="CloseVirtualPosition.TimeToLive.Description" xml:space="preserve">
    <value>Position lifetime (in minutes)</value>
  </data>
  <data name="CurrentFutPx.MinHeight.Name" xml:space="preserve">
    <value>Min Height</value>
  </data>
  <data name="CurrentFutPx.MinHeight.Description" xml:space="preserve">
    <value>Minimum height of the marker (absolute units)</value>
  </data>
  <data name="CurrentFutPx.OffsetPct.Name" xml:space="preserve">
    <value>Offset, %</value>
  </data>
  <data name="CurrentFutPx.OffsetPct.Description" xml:space="preserve">
    <value>Height of the marker (percents)</value>
  </data>
  <data name="DropVirtualPositions.DropPositions.Name" xml:space="preserve">
    <value>Drop Positions</value>
  </data>
  <data name="DropVirtualPositions.DropPositions.Description" xml:space="preserve">
    <value>Drop virtual positions</value>
  </data>
  <data name="FixedValue.DisplayUnits.Name" xml:space="preserve">
    <value>Display Units</value>
  </data>
  <data name="FixedValue.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
  </data>
  <data name="IvSmile2.OptPxMode.Name" xml:space="preserve">
    <value>Price Mode</value>
  </data>
  <data name="IvSmile2.OptPxMode.Description" xml:space="preserve">
    <value>Algorythm to get option price</value>
  </data>
  <data name="IvSmile2.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="IvSmile2.OptionType.Description" xml:space="preserve">
    <value>Option type to be used by handler (call, put, best volatility)</value>
  </data>
  <data name="IvSmile2.ShiftBid.Name" xml:space="preserve">
    <value>Shift Bid</value>
  </data>
  <data name="IvSmile2.ShiftBid.Description" xml:space="preserve">
    <value>Shift Bids down (price steps)</value>
  </data>
  <data name="IvSmile2.ShiftAsk.Name" xml:space="preserve">
    <value>Shift Ask</value>
  </data>
  <data name="IvSmile2.ShiftAsk.Description" xml:space="preserve">
    <value>Shift Asks up (price steps)</value>
  </data>
  <data name="IvSmile2.MaxSigmaPct.Name" xml:space="preserve">
    <value>Max Sigma, %</value>
  </data>
  <data name="IvSmile2.MaxSigmaPct.Description" xml:space="preserve">
    <value>Maximum volatility (percents)</value>
  </data>
  <data name="LinearTransform.Add.Name" xml:space="preserve">
    <value>Summand</value>
  </data>
  <data name="LinearTransform.Add.Description" xml:space="preserve">
    <value>Summand</value>
  </data>
  <data name="LinearTransform.Mult.Name" xml:space="preserve">
    <value>Multiplier</value>
  </data>
  <data name="LinearTransform.Mult.Description" xml:space="preserve">
    <value>Multiplier</value>
  </data>
  <data name="PositionsManager.UseVirtualPositions.Name" xml:space="preserve">
    <value>Virtual Positions</value>
  </data>
  <data name="PositionsManager.UseVirtualPositions.Description" xml:space="preserve">
    <value>When true it will create only virtual positions without sending orders in market</value>
  </data>
  <data name="PositionsManager.ImportRealPos.Name" xml:space="preserve">
    <value>Import Real Pos</value>
  </data>
  <data name="PositionsManager.ImportRealPos.Description" xml:space="preserve">
    <value>Button to import real positions</value>
  </data>
  <data name="SetViewport.ManageX.Name" xml:space="preserve">
    <value>Manage X</value>
  </data>
  <data name="SetViewport.ManageX.Description" xml:space="preserve">
    <value>Manage horizontal axis</value>
  </data>
  <data name="SetViewport.ManageY.Name" xml:space="preserve">
    <value>Manage Y</value>
  </data>
  <data name="SetViewport.ManageY.Description" xml:space="preserve">
    <value>Manage vertical axis</value>
  </data>
  <data name="SetViewport.VerticalMultiplier.Name" xml:space="preserve">
    <value>Height Multiplier</value>
  </data>
  <data name="SetViewport.VerticalMultiplier.Description" xml:space="preserve">
    <value>Multiplier to estimate viewport height</value>
  </data>
  <data name="SetViewport.ApplyVisualSettings.Name" xml:space="preserve">
    <value>Apply settings</value>
  </data>
  <data name="SetViewport.ApplyVisualSettings.Description" xml:space="preserve">
    <value>Apply visual settings</value>
  </data>
  <data name="SetViewport.ManageChildX.Name" xml:space="preserve">
    <value>Manage child X</value>
    <comment>Настраивать вторую ось X</comment>
  </data>
  <data name="SetViewport.ManageChildX.Description" xml:space="preserve">
    <value>Manage horizontal axis of secondary panes</value>
    <comment>При true будет управлять горизонтальной осью дочерних панелей</comment>
  </data>
  <data name="SingleSeriesNumericalDelta.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalDelta.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalGamma.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesNumericalGamma.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SingleSeriesNumericalGamma.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalGamma.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalTheta.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesNumericalTheta.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SingleSeriesNumericalTheta.TStep.Name" xml:space="preserve">
    <value>Time Step</value>
  </data>
  <data name="SingleSeriesNumericalTheta.TStep.Description" xml:space="preserve">
    <value>Time step for numerical derivative</value>
  </data>
  <data name="SingleSeriesNumericalTheta.DistanceMode.Name" xml:space="preserve">
    <value>Estimation algo</value>
  </data>
  <data name="SingleSeriesNumericalTheta.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="SingleSeriesNumericalTheta.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalTheta.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalVega.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesNumericalVega.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SingleSeriesNumericalVega.SigmaStep.Name" xml:space="preserve">
    <value>Sigma Step</value>
  </data>
  <data name="SingleSeriesNumericalVega.SigmaStep.Description" xml:space="preserve">
    <value>Sigma step for numerical derivative</value>
  </data>
  <data name="SingleSeriesNumericalVega.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalVega.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesPositionGrid.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="SingleSeriesPositionGrid.OptionType.Description" xml:space="preserve">
    <value>Option type to be used by handler (call, put, sum of both)</value>
  </data>
  <data name="SingleSeriesPositionGrid.CountFutures.Name" xml:space="preserve">
    <value>Count Futures</value>
  </data>
  <data name="SingleSeriesPositionGrid.CountFutures.Description" xml:space="preserve">
    <value>Count base asset</value>
  </data>
  <data name="SingleSeriesPositionGrid.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesPositionGrid.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesPositionList.CountFutures.Name" xml:space="preserve">
    <value>Count Futures</value>
  </data>
  <data name="SingleSeriesPositionList.CountFutures.Description" xml:space="preserve">
    <value>Count base asset</value>
  </data>
  <data name="SingleSeriesPositionList.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesPositionList.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="TotalQty.OpenQty.Name" xml:space="preserve">
    <value>Open Qty</value>
  </data>
  <data name="TotalQty.OpenQty.Description" xml:space="preserve">
    <value>Total open quantity</value>
  </data>
  <data name="TotalRiskN2.DisplayUnits.Name" xml:space="preserve">
    <value>Display Units</value>
  </data>
  <data name="TotalRiskN2.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
  </data>
  <data name="TotalRiskN2.DisplayRisk.Name" xml:space="preserve">
    <value>Risk</value>
  </data>
  <data name="TotalRiskN2.DisplayRisk.Description" xml:space="preserve">
    <value>Risk (just to display at UI)</value>
  </data>
  <data name="TransformSmile.Transformation.Name" xml:space="preserve">
    <value>Transformation</value>
  </data>
  <data name="TransformSmile.Transformation.Description" xml:space="preserve">
    <value>Algorythm to transform smile (LogSimmetrise, Simmetrise, None)</value>
  </data>
  <data name="TransformSmile.OptPxMode.Name" xml:space="preserve">
    <value>Price Mode</value>
  </data>
  <data name="TransformSmile.OptPxMode.Description" xml:space="preserve">
    <value>Algorythm to get option price</value>
  </data>
  <data name="EditTemplateSmile.NumberOfNodes.Name" xml:space="preserve">
    <value>Number of Nodes</value>
  </data>
  <data name="EditTemplateSmile.NumberOfNodes.Description" xml:space="preserve">
    <value>Number of nodes to edit</value>
  </data>
  <data name="EditTemplateSmile.NodeStep.Name" xml:space="preserve">
    <value>Node Step</value>
  </data>
  <data name="EditTemplateSmile.NodeStep.Description" xml:space="preserve">
    <value>Node step</value>
  </data>
  <data name="EditTemplateSmile.ShapePct.Name" xml:space="preserve">
    <value>Shape</value>
  </data>
  <data name="EditTemplateSmile.ShapePct.Description" xml:space="preserve">
    <value>Shape</value>
  </data>
  <data name="EditTemplateSmile.ResetSmile.Name" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="EditTemplateSmile.ResetSmile.Description" xml:space="preserve">
    <value>Button to reset smile to initial state</value>
  </data>
  <data name="EditTemplateSmile.LoadSplineCoeffs.Name" xml:space="preserve">
    <value>Load spline</value>
  </data>
  <data name="EditTemplateSmile.LoadSplineCoeffs.Description" xml:space="preserve">
    <value>Load spline coefficients from Global Cache</value>
  </data>
  <data name="EditTemplateSmile.PasteGlobal.Name" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="EditTemplateSmile.PasteGlobal.Description" xml:space="preserve">
    <value>Get spline from clipboard</value>
  </data>
  <data name="EditTemplateSmile.PrepareSplineCoeffs.Name" xml:space="preserve">
    <value>Prepare Spline</value>
  </data>
  <data name="EditTemplateSmile.PrepareSplineCoeffs.Description" xml:space="preserve">
    <value>Prepare spline coefficients</value>
  </data>
  <data name="EditTemplateSmile.FrozenSmileID.Name" xml:space="preserve">
    <value>Frozen Smile ID</value>
  </data>
  <data name="EditTemplateSmile.FrozenSmileID.Description" xml:space="preserve">
    <value>Smile ID to be used with Local Cache</value>
  </data>
  <data name="EditTemplateSmile.GlobalSmileID.Name" xml:space="preserve">
    <value>Global Smile ID</value>
  </data>
  <data name="EditTemplateSmile.GlobalSmileID.Description" xml:space="preserve">
    <value>Smile ID to be used with Global Cache</value>
  </data>
  <data name="FixedValue.MinValue.Name" xml:space="preserve">
    <value>Minimum</value>
  </data>
  <data name="FixedValue.MinValue.Description" xml:space="preserve">
    <value>Minimum for internal representation</value>
  </data>
  <data name="FixedValue.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="FixedValue.Value.Description" xml:space="preserve">
    <value>Constant value (always above the limit 'Minimum')</value>
  </data>
  <data name="SingleSeriesPositionList.DisplayMode.Name" xml:space="preserve">
    <value>Display Property</value>
  </data>
  <data name="SingleSeriesPositionList.DisplayMode.Description" xml:space="preserve">
    <value>Position property to be displayed</value>
  </data>
  <data name="SingleSeriesPositionList.MaxPositions.Name" xml:space="preserve">
    <value>Max Positions</value>
  </data>
  <data name="SingleSeriesPositionList.MaxPositions.Description" xml:space="preserve">
    <value>Limit number of positions to show</value>
  </data>
  <data name="SmileImitation3.SetIvByHands.Name" xml:space="preserve">
    <value>Set IV</value>
  </data>
  <data name="SmileImitation3.SetIvByHands.Description" xml:space="preserve">
    <value>Set IV manually</value>
  </data>
  <data name="SmileImitation3.SetSlopeByHands.Name" xml:space="preserve">
    <value>Set Skew Manually</value>
  </data>
  <data name="SmileImitation3.SetSlopeByHands.Description" xml:space="preserve">
    <value>Set skew manually</value>
  </data>
  <data name="SmileImitation3.GenerateTails.Name" xml:space="preserve">
    <value>Generate Tails</value>
  </data>
  <data name="SmileImitation3.GenerateTails.Description" xml:space="preserve">
    <value>Generate invisible tails</value>
  </data>
  <data name="SmileImitation3.IsVisiblePoints.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitation3.IsVisiblePoints.Description" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitation3.IvAtmPct.Name" xml:space="preserve">
    <value>IV ATM, %</value>
  </data>
  <data name="SmileImitation3.IvAtmPct.Description" xml:space="preserve">
    <value>IV ATM (percents)</value>
  </data>
  <data name="SmileImitation3.ShiftPct.Name" xml:space="preserve">
    <value>Shift, %</value>
  </data>
  <data name="SmileImitation3.ShiftPct.Description" xml:space="preserve">
    <value>Shift (percents)</value>
  </data>
  <data name="SmileImitation3.DepthPct.Name" xml:space="preserve">
    <value>Depth, %</value>
  </data>
  <data name="SmileImitation3.DepthPct.Description" xml:space="preserve">
    <value>Depth (percents)</value>
  </data>
  <data name="SmileImitation3.SlopeAtmPct.Name" xml:space="preserve">
    <value>Skew, %</value>
  </data>
  <data name="SmileImitation3.SlopeAtmPct.Description" xml:space="preserve">
    <value>Skew (percents)</value>
  </data>
  <data name="SmileImitation5.SetIvByHands.Name" xml:space="preserve">
    <value>Set IV</value>
  </data>
  <data name="SmileImitation5.SetIvByHands.Description" xml:space="preserve">
    <value>Set IV manually</value>
  </data>
  <data name="SmileImitation5.SetShapeByHands.Name" xml:space="preserve">
    <value>Set Shape Manually</value>
  </data>
  <data name="SmileImitation5.SetShapeByHands.Description" xml:space="preserve">
    <value>Set shape manually</value>
  </data>
  <data name="SmileImitation5.GenerateTails.Name" xml:space="preserve">
    <value>Generate Tails</value>
  </data>
  <data name="SmileImitation5.GenerateTails.Description" xml:space="preserve">
    <value>Generate invisible tails</value>
  </data>
  <data name="SmileImitation5.IsVisiblePoints.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitation5.IsVisiblePoints.Description" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitation5.UseLocalTemplate.Name" xml:space="preserve">
    <value>Use Local Template</value>
  </data>
  <data name="SmileImitation5.UseLocalTemplate.Description" xml:space="preserve">
    <value>Use template from global or from local cache</value>
  </data>
  <data name="SmileImitation5.IvAtmPct.Name" xml:space="preserve">
    <value>IV ATM, %</value>
  </data>
  <data name="SmileImitation5.IvAtmPct.Description" xml:space="preserve">
    <value>IV ATM (percents)</value>
  </data>
  <data name="SmileImitation5.ShapePct.Name" xml:space="preserve">
    <value>Shape, %</value>
  </data>
  <data name="SmileImitation5.ShapePct.Description" xml:space="preserve">
    <value>Shape (percents)</value>
  </data>
  <data name="SmileImitation5.FrozenSmileID.Name" xml:space="preserve">
    <value>Frozen Smile ID</value>
  </data>
  <data name="SmileImitation5.FrozenSmileID.Description" xml:space="preserve">
    <value>Smile ID to be used with Local Cache</value>
  </data>
  <data name="SmileImitation5.GlobalSmileID.Name" xml:space="preserve">
    <value>Global Smile ID</value>
  </data>
  <data name="SmileImitation5.GlobalSmileID.Description" xml:space="preserve">
    <value>Smile ID to be used with Global Cache</value>
  </data>
  <data name="SmileImitation5.NoLocalSmile" xml:space="preserve">
    <value>[{0}] There is no LOCAL smile with ID:{1}</value>
  </data>
  <data name="SmileImitation5.NoGlobalSmile" xml:space="preserve">
    <value>[{0}] There is no global templateInfo with ID:{1}. I'll try to use default one.</value>
  </data>
  <data name="SmileImitation5.TemplateWasSaved" xml:space="preserve">
    <value>[{0}] Default templateInfo was saved to Global Cache with ID:{1}</value>
  </data>
  <data name="TransformSmile.ShiftIvPct.Name" xml:space="preserve">
    <value>Shift IV, %</value>
  </data>
  <data name="TransformSmile.ShiftIvPct.Description" xml:space="preserve">
    <value>Additional vertical smile shift (in percents)</value>
  </data>
  <data name="TransformSmile.SimmWeight.Name" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="TransformSmile.SimmWeight.Description" xml:space="preserve">
    <value>Weight (0 -- initial function; 0.5 -- simmetrised; 1 -- mirrored)</value>
  </data>
  <data name="Smile" xml:space="preserve">
    <value>Smile</value>
  </data>
  <data name="Strike" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="AbsolutCommission" xml:space="preserve">
    <value>Absolute comission</value>
    <comment>Абсолютная комиссия</comment>
  </data>
  <data name="Add.Name" xml:space="preserve">
    <value>Sum up</value>
    <comment>ok Сложить</comment>
  </data>
  <data name="AdjShift.Name" xml:space="preserve">
    <value>Adjustment shift</value>
    <comment>Сдвиг выравнивания</comment>
  </data>
  <data name="Adjustment.Name" xml:space="preserve">
    <value>Adjustment</value>
    <comment>Выравнивание</comment>
  </data>
  <data name="Not.Name" xml:space="preserve">
    <value>Not</value>
  </data>
  <data name="And.Name" xml:space="preserve">
    <value>And</value>
    <comment>ok И</comment>
  </data>
  <data name="Or.Name" xml:space="preserve">
    <value>Or</value>
  </data>
  <data name="BarsHeld.Name" xml:space="preserve">
    <value>Bars held</value>
    <comment>Удерживалось баров</comment>
  </data>
  <data name="BOOL.Name" xml:space="preserve">
    <value>Source (boolean)</value>
    <comment>ok Источник данных (логический)</comment>
  </data>
  <data name="BooleanExpression.Name" xml:space="preserve">
    <value>Boolean expression</value>
    <comment>ok Логическая формула</comment>
  </data>
  <data name="BoolValue.Name" xml:space="preserve">
    <value>Source (boolean, not stream)</value>
    <comment>ok Источник данных (логический)</comment>
  </data>
  <data name="Close.Name" xml:space="preserve">
    <value>Close</value>
    <comment>ok Закрытие</comment>
  </data>
  <data name="Coef.Name" xml:space="preserve">
    <value>Factor </value>
    <comment>ok Коэф.</comment>
  </data>
  <data name="ColorPower.Name" xml:space="preserve">
    <value>Color filling coefficient</value>
    <comment>Коэф. заливки</comment>
  </data>
  <data name="CombineSteps.Name" xml:space="preserve">
    <value>Combine steps</value>
    <comment>Объединять шагов</comment>
  </data>
  <data name="Commission.Name" xml:space="preserve">
    <value>Commission</value>
    <comment>ok Комиссия</comment>
  </data>
  <data name="CommissionPct.Name" xml:space="preserve">
    <value>Commission %</value>
    <comment>ok Комиссия %</comment>
  </data>
  <data name="CompressAdvanced.Name" xml:space="preserve">
    <value>Compress (Advanced)</value>
    <comment>Сжать (Расшир)</comment>
  </data>
  <data name="Compress.Name" xml:space="preserve">
    <value>Compress</value>
    <comment>Сжать</comment>
  </data>
  <data name="CompressToSeconds.Name" xml:space="preserve">
    <value>Compress into seconds</value>
    <comment>Сжать в секунды</comment>
  </data>
  <data name="ConstGen.Name" xml:space="preserve">
    <value>Constant</value>
    <comment>Константа</comment>
  </data>
  <data name="CrossOver.Name" xml:space="preserve">
    <value>Cross over</value>
    <comment>Пересечение сверху</comment>
  </data>
  <data name="CrossUnder.Name" xml:space="preserve">
    <value>Cross under</value>
    <comment>Пересечение снизу</comment>
  </data>
  <data name="EqualHandler.Name" xml:space="preserve">
    <value>Equal</value>
  </data>
  <data name="GreaterHandler.Name" xml:space="preserve">
    <value>Greater</value>
  </data>
  <data name="LessHandler.Name" xml:space="preserve">
    <value>Less</value>
  </data>
  <data name="GreaterOrEqualHandler.Name" xml:space="preserve">
    <value>Greater or equal</value>
  </data>
  <data name="LessOrEqualHandler.Name" xml:space="preserve">
    <value>Less or equal</value>
  </data>
  <data name="CurrentPosition.Name" xml:space="preserve">
    <value>Current position</value>
    <comment>Текущая позиция</comment>
  </data>
  <data name="AgentCurrentPosition.Name" xml:space="preserve">
    <value>Agent current position</value>
    <comment>Текущая позиция</comment>
  </data>
  <data name="Cutter.Name" xml:space="preserve">
    <value>Cut off</value>
    <comment>Обрезать</comment>
  </data>
  <data name="Date.Name" xml:space="preserve">
    <value>Date</value>
    <comment>ok Дата</comment>
  </data>
  <data name="DayOfMonth.Name" xml:space="preserve">
    <value>Day of month</value>
  </data>
  <data name="DayOfWeek.Name" xml:space="preserve">
    <value>Day of week</value>
    <comment>День недели</comment>
  </data>
  <data name="DaysInPosition.Name" xml:space="preserve">
    <value>Days in position</value>
    <comment>Дней в позиции</comment>
  </data>
  <data name="Decimals.Name" xml:space="preserve">
    <value>Symbols</value>
    <comment>Знаков</comment>
  </data>
  <data name="Decompres.Name" xml:space="preserve">
    <value>Decompress</value>
    <comment>Разжать</comment>
  </data>
  <data name="DecompresBool.Name" xml:space="preserve">
    <value>Decompress boolean</value>
    <comment>Разжать логическое</comment>
  </data>
  <data name="SecDivideWith.Name" xml:space="preserve">
    <value>Divide with</value>
    <comment>Поделить с</comment>
  </data>
  <data name="DOUBLE.Name" xml:space="preserve">
    <value>Source (numbers)</value>
    <comment>ok Источник данных (значения)</comment>
  </data>
  <data name="DoubleExpression.Name" xml:space="preserve">
    <value>Formula</value>
    <comment>ok Формула</comment>
  </data>
  <data name="DoubleValue.Name" xml:space="preserve">
    <value>Source (numbers, not stream)</value>
    <comment>ok Источник данных (значения)</comment>
  </data>
  <data name="DrowdownCount.Name" xml:space="preserve">
    <value>Losses running</value>
    <comment>Убытков подряд</comment>
  </data>
  <data name="EntryDate.Name" xml:space="preserve">
    <value>Entry date</value>
    <comment>Дата входа</comment>
  </data>
  <data name="CalcEntryPrice.Name" xml:space="preserve">
    <value>Entry price (estimated)</value>
    <comment>Цена входа (расчетная)</comment>
  </data>
  <data name="EntryPrice.Name" xml:space="preserve">
    <value>Entry price</value>
    <comment>ok Цена входа</comment>
  </data>
  <data name="EntryTime.Name" xml:space="preserve">
    <value>Entry time</value>
    <comment>Время входа</comment>
  </data>
  <data name="EstimatedMoney.Name" xml:space="preserve">
    <value>Portfolio estimation</value>
    <comment>Оценка портфеля</comment>
  </data>
  <data name="Expression.Name" xml:space="preserve">
    <value>Expression</value>
    <comment>Выражение</comment>
  </data>
  <data name="FastLimit.Name" xml:space="preserve">
    <value>Fast limit</value>
    <comment>Быстрый лимит</comment>
  </data>
  <data name="Flip.Name" xml:space="preserve">
    <value>Flip</value>
    <comment>Перевернуть</comment>
  </data>
  <data name="FreeMoney.Name" xml:space="preserve">
    <value>Free money</value>
    <comment>Свободные деньги</comment>
  </data>
  <data name="Handler.Name" xml:space="preserve">
    <value>Handler</value>
    <comment>Обработчик</comment>
  </data>
  <data name="HasLongPositionActive.Name" xml:space="preserve">
    <value>There is active long position</value>
    <comment>ok Есть активная длинная поз.</comment>
  </data>
  <data name="HasPositionActive.Name" xml:space="preserve">
    <value>There is active position</value>
    <comment>ok Есть активная позиция</comment>
  </data>
  <data name="HasShortPositionActive.Name" xml:space="preserve">
    <value>There is active short position</value>
    <comment>ok Есть активная короткая поз.</comment>
  </data>
  <data name="HasTwoLoss.Name" xml:space="preserve">
    <value>2 losses successively</value>
    <comment>2 убытка подряд</comment>
  </data>
  <data name="High.Name" xml:space="preserve">
    <value>High</value>
    <comment>ok Максимум</comment>
  </data>
  <data name="Highest.Name" xml:space="preserve">
    <value>Highest for</value>
    <comment>ok Максимум за</comment>
  </data>
  <data name="Hold.Name" xml:space="preserve">
    <value>Hold</value>
    <comment>Задержать</comment>
  </data>
  <data name="INTERACTIVESPLINE.Name" xml:space="preserve">
    <value>Interactive spline</value>
    <comment>Источник (интерактивный сплайн)</comment>
  </data>
  <data name="Interval.Name" xml:space="preserve">
    <value>Interval</value>
    <comment>ok Интервал</comment>
  </data>
  <data name="IntervalBase.Name" xml:space="preserve">
    <value>Interval base</value>
    <comment>База интервала</comment>
  </data>
  <data name="LastClosedIsLong2.Name" xml:space="preserve">
    <value>Last closed position was long</value>
    <comment>Посл. поз. была длинной</comment>
  </data>
  <data name="LastClosedIsShort2.Name" xml:space="preserve">
    <value>Last closed position was short</value>
    <comment>Посл. поз. была короткой</comment>
  </data>
  <data name="LastClosedNamePositionExitDate.Name" xml:space="preserve">
    <value>Exit date of last closed named position</value>
    <comment>Дата выхода последней закрытой позиции по имени</comment>
  </data>
  <data name="LastClosedNamePositionExitTime.Name" xml:space="preserve">
    <value>Exit time of last closed named position</value>
    <comment>Время выхода последней закрытой позиции по имени</comment>
  </data>
  <data name="LastClosedNamePositionExitPrice.Name" xml:space="preserve">
    <value>Exit price of last closed named position</value>
  </data>
  <data name="LastClosedPositionDate.Name" xml:space="preserve">
    <value>Date of last closed position</value>
    <comment>Дата последней закрытой позиции</comment>
  </data>
  <data name="LastClosedPositionExitDate.Name" xml:space="preserve">
    <value>Exit date of last closed position</value>
    <comment>Дата выхода последней закрытой позиции</comment>
  </data>
  <data name="LastClosedPositionExitTime.Name" xml:space="preserve">
    <value>Exit time of last closed position</value>
    <comment>Время выхода последней закрытой позиции</comment>
  </data>
  <data name="LastClosedPositionTime.Name" xml:space="preserve">
    <value>Time of last closed position</value>
    <comment>Время последней закрытой позиции</comment>
  </data>
  <data name="PosActiveNameExit.Name" xml:space="preserve">
    <value>Last exit has such name</value>
    <comment>Последний выход имеет такое имя</comment>
  </data>
  <data name="LastExitPrice.Name" xml:space="preserve">
    <value>Last exit price</value>
    <comment>ok Цена последнего выхода</comment>
  </data>
  <data name="LastClosedIsLong.Name" xml:space="preserve">
    <value>Last position has been closed and it was long</value>
    <comment>Посл. поз. закрыта и длинная</comment>
  </data>
  <data name="LastClosedIsShort.Name" xml:space="preserve">
    <value>Last position has been closed and it was short</value>
    <comment>Посл. поз. закрыта и короткая</comment>
  </data>
  <data name="Long.Name" xml:space="preserve">
    <value>Buy</value>
    <comment>Покупка</comment>
  </data>
  <data name="Low.Name" xml:space="preserve">
    <value>Low</value>
    <comment>Минимум</comment>
  </data>
  <data name="Lowest.Name" xml:space="preserve">
    <value>Lowest for</value>
    <comment>Минимум за</comment>
  </data>
  <data name="MarginPct.Name" xml:space="preserve">
    <value>Money value%</value>
    <comment>Стоимость денег %</comment>
  </data>
  <data name="Max.Name" xml:space="preserve">
    <value>Max</value>
    <comment>ok Max</comment>
  </data>
  <data name="Method.Name" xml:space="preserve">
    <value>Method</value>
    <comment>Метод</comment>
  </data>
  <data name="Min.Name" xml:space="preserve">
    <value>Min</value>
    <comment>ok Min</comment>
  </data>
  <data name="MinimalCommission.Name" xml:space="preserve">
    <value>Minimum comission</value>
    <comment>Минимум комиссии</comment>
  </data>
  <data name="MinutesInPosition.Name" xml:space="preserve">
    <value>Minutes in position</value>
    <comment>Минут в позиции</comment>
  </data>
  <data name="SecMultiply.Name" xml:space="preserve">
    <value>Multiply (CB) by</value>
    <comment>Умножить (ЦБ) на</comment>
  </data>
  <data name="Multiply.Name" xml:space="preserve">
    <value>Multiply by</value>
    <comment>Умножить на</comment>
  </data>
  <data name="SecMultiplyWith.Name" xml:space="preserve">
    <value>Multiply by</value>
    <comment>Перемножить с</comment>
  </data>
  <data name="NotClear.Name" xml:space="preserve">
    <value>Do not clear</value>
    <comment>Не очищать</comment>
  </data>
  <data name="NotTradableOption.Name" xml:space="preserve">
    <value>Not tradable source (Option)</value>
  </data>
  <data name="NotTradableSecurity.Name" xml:space="preserve">
    <value>Not tradable source (instrument)</value>
  </data>
  <data name="NumDaysProfit.Name" xml:space="preserve">
    <value>Profit (in N days)</value>
    <comment>Доход (за N дней)</comment>
  </data>
  <data name="NumMinutesProfit.Name" xml:space="preserve">
    <value>Profit (in N minutes)</value>
    <comment>Доход (за N минут)</comment>
  </data>
  <data name="NumPositionsProfit.Name" xml:space="preserve">
    <value>Profit (in N positions)</value>
    <comment>Доход (за N позиций)</comment>
  </data>
  <data name="Open.Name" xml:space="preserve">
    <value>Open</value>
    <comment>ok Открытие</comment>
  </data>
  <data name="Period.Name" xml:space="preserve">
    <value>Period</value>
    <comment>Период</comment>
  </data>
  <data name="Period1.Name" xml:space="preserve">
    <value>Period1</value>
    <comment>Период1</comment>
  </data>
  <data name="Period2.Name" xml:space="preserve">
    <value>Period2</value>
    <comment>Период2</comment>
  </data>
  <data name="ProfitPct.Name" xml:space="preserve">
    <value>Profit %</value>
    <comment>Доход %</comment>
  </data>
  <data name="Profit.Name" xml:space="preserve">
    <value>Profit</value>
    <comment>ok Доход</comment>
  </data>
  <data name="Relative.Name" xml:space="preserve">
    <value>Relative</value>
    <comment>Относительный</comment>
  </data>
  <data name="RelativeForPeriod.Name" xml:space="preserve">
    <value>Relative for period</value>
  </data>
  <data name="RelativeCommission.Name" xml:space="preserve">
    <value>Relative comission</value>
    <comment>Относительная комиссия</comment>
  </data>
  <data name="RelativeCommisionWithMinimal.Name" xml:space="preserve">
    <value>Relative comission with minimum</value>
    <comment>Относ. комиссия с минимумом</comment>
  </data>
  <data name="PositionSharesByBar.Name" xml:space="preserve">
    <value>Quantity</value>
    <comment>ok Количество</comment>
  </data>
  <data name="PositionShares.Name" xml:space="preserve">
    <value>Position size (initial)</value>
    <comment>ok Количество</comment>
  </data>
  <data name="Shift.Name" xml:space="preserve">
    <value>Shift</value>
    <comment>Сдвиг</comment>
  </data>
  <data name="Slippage.Name" xml:space="preserve">
    <value>Slippage </value>
    <comment>ok Проскальзывание</comment>
  </data>
  <data name="SlowLimit.Name" xml:space="preserve">
    <value>Slow limit </value>
    <comment>Медленный лимит</comment>
  </data>
  <data name="StartFrom.Name" xml:space="preserve">
    <value>Initial   </value>
    <comment>ok Начальное</comment>
  </data>
  <data name="StartIndex.Name" xml:space="preserve">
    <value>Begin with</value>
    <comment>Начинать с</comment>
  </data>
  <data name="StepPrice.Name" xml:space="preserve">
    <value>Step price</value>
    <comment>ok Стоимость шага цены</comment>
  </data>
  <data name="StopLoss.Name" xml:space="preserve">
    <value>Stop loss</value>
    <comment>Стоп лосс</comment>
  </data>
  <data name="Sub.Name1" xml:space="preserve">
    <value>Subtract</value>
    <comment>Вычесть</comment>
  </data>
  <data name="SummFor.Name" xml:space="preserve">
    <value>Sum in</value>
    <comment>Сумма за</comment>
  </data>
  <data name="SumForTimeFrameHandler.Name" xml:space="preserve">
    <value>Sum for time frame</value>
  </data>
  <data name="Time.Name" xml:space="preserve">
    <value>Time</value>
    <comment>ok Время</comment>
  </data>
  <data name="TimeInMins.Name" xml:space="preserve">
    <value>Time in minutes</value>
    <comment>ok Время в минутах</comment>
  </data>
  <data name="TradableOption.Name" xml:space="preserve">
    <value>Tradable source (Option)</value>
  </data>
  <data name="TradableSecurity.Name" xml:space="preserve">
    <value>Tradable source (instrument)</value>
  </data>
  <data name="TrailEnable.Name" xml:space="preserve">
    <value>Enable the trail</value>
    <comment>Вкл. трейл</comment>
  </data>
  <data name="TrailLoss.Name" xml:space="preserve">
    <value>Trail loss</value>
    <comment>Трейл лосс</comment>
  </data>
  <data name="TrailStop.Name" xml:space="preserve">
    <value>Trail stop</value>
    <comment>Трейл Стоп</comment>
  </data>
  <data name="TrailStopAbs.Name" xml:space="preserve">
    <value>Trail stop absolute</value>
    <comment>Трейл Стоп Абс.</comment>
  </data>
  <data name="Unknown.Name" xml:space="preserve">
    <value>Unknow</value>
    <comment>Неизвестно</comment>
  </data>
  <data name="Updater.Name" xml:space="preserve">
    <value>Updatable value</value>
    <comment>Обновляемое значение</comment>
  </data>
  <data name="UseCalcPrice.Name" xml:space="preserve">
    <value>Use estimated price</value>
    <comment>Исп. расч. цену</comment>
  </data>
  <data name="Value.Name" xml:space="preserve">
    <value>Value</value>
    <comment>ok Значение</comment>
  </data>
  <data name="Volume.Name" xml:space="preserve">
    <value>Volume</value>
    <comment>Объем</comment>
  </data>
  <data name="WholeDayProfit.Name" xml:space="preserve">
    <value>Profit (one day period)</value>
    <comment>Доход (за день)</comment>
  </data>
  <data name="WholeTimeProfit.Name" xml:space="preserve">
    <value>Profit (whole period)</value>
    <comment>Доход (за все время)</comment>
  </data>
  <data name="PositionsManager.AgregatePositions.Name" xml:space="preserve">
    <value>Agregate positions</value>
  </data>
  <data name="PositionsManager.AgregatePositions.Description" xml:space="preserve">
    <value>When true it will agregate positions of similar directions in one</value>
  </data>
  <data name="TimeToExpiry2.Name" xml:space="preserve">
    <value>Time to expiry</value>
  </data>
  <data name="TimeToExpiry2.Description" xml:space="preserve">
    <value>Time to expiry in year fractions. Various algorithms are applied (fixed time, plain calendar time, plain calendar time including days off and so on).</value>
  </data>
  <data name="TimeToExpiry2.CurDateMode.Name" xml:space="preserve">
    <value>Current date algo</value>
  </data>
  <data name="TimeToExpiry2.CurDateMode.Description" xml:space="preserve">
    <value>Current date algorythm</value>
  </data>
  <data name="TimeToExpiry2.ExpirationMode.Name" xml:space="preserve">
    <value>Expiration algo</value>
  </data>
  <data name="TimeToExpiry2.ExpirationMode.Description" xml:space="preserve">
    <value>Algorythm to determine expiration date</value>
  </data>
  <data name="TimeToExpiry2.DistanceMode.Name" xml:space="preserve">
    <value>Estimation algo</value>
  </data>
  <data name="TimeToExpiry2.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="TimeToExpiry2.Expiry.Name" xml:space="preserve">
    <value>Expiry</value>
  </data>
  <data name="TimeToExpiry2.Expiry.Description" xml:space="preserve">
    <value>Expiration datetime (including time of a day) for algorythm FixedExpiry</value>
  </data>
  <data name="TimeToExpiry2.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry time</value>
  </data>
  <data name="TimeToExpiry2.ExpiryTime.Description" xml:space="preserve">
    <value>Expiration time (including time of a day) for algorythms except FixedExpiry</value>
  </data>
  <data name="TimeToExpiry2.FixedDate.Name" xml:space="preserve">
    <value>Frozen 'today'</value>
  </data>
  <data name="TimeToExpiry2.FixedDate.Description" xml:space="preserve">
    <value>Today datetime (including time of a day) for algorythm FixedDate</value>
  </data>
  <data name="TimeToExpiry2.UseDays.Name" xml:space="preserve">
    <value>Use days</value>
  </data>
  <data name="TimeToExpiry2.UseDays.Description" xml:space="preserve">
    <value>When true, handler calculates time to expiry as days</value>
  </data>
  <data name="TimeToExpiry2.SeriesIndex.Name" xml:space="preserve">
    <value>Series index</value>
  </data>
  <data name="TimeToExpiry2.SeriesIndex.Description" xml:space="preserve">
    <value>Series index (only alive series) for algorythm ExpiryByNumber</value>
  </data>
  <data name="TimeToExpiry2.Time.Name" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="TimeToExpiry2.Time.Description" xml:space="preserve">
    <value>Time to expiry (just to show it on ControlPane)</value>
  </data>
  <data name="TimeToExpiry2.CurrentDateShift.Name" xml:space="preserve">
    <value>Current date shift</value>
    <comment>Сдвиг текущей даты</comment>
  </data>
  <data name="TimeToExpiry2.CurrentDateShift.Description" xml:space="preserve">
    <value>Shift current date by calendar time interval</value>
    <comment>Сдвинуть текущую дату на указанный интервал календарного времени</comment>
  </data>
  <data name="CombinePricesCount.Name" xml:space="preserve">
    <value>Combine prices</value>
  </data>
  <data name="TimeFrame.Name" xml:space="preserve">
    <value>Time frame</value>
  </data>
  <data name="TimeFrameUnit.Name" xml:space="preserve">
    <value>Time frame unit</value>
  </data>
  <data name="TimeFrameShift.Name" xml:space="preserve">
    <value>Time frame shift</value>
  </data>
  <data name="TimeFrameShiftUnit.Name" xml:space="preserve">
    <value>Time frame shift unit</value>
  </data>
  <data name="CentralStrike.ShiftStrike.Name" xml:space="preserve">
    <value>Shift strike</value>
  </data>
  <data name="CentralStrike.ShiftStrike.Description" xml:space="preserve">
    <value>Shift central strike (number of strikes)</value>
  </data>
  <data name="IvOnFAllSeries.RescaleTime.Name" xml:space="preserve">
    <value>Rescale Time</value>
  </data>
  <data name="IvOnFAllSeries.RescaleTime.Description" xml:space="preserve">
    <value>Rescale time-to-expiry to our internal?</value>
  </data>
  <data name="IvOnFAllSeries.DistanceMode.Name" xml:space="preserve">
    <value>Estimation Algo</value>
  </data>
  <data name="IvOnFAllSeries.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="IvOnFAllSeries.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry Time</value>
  </data>
  <data name="IvOnFAllSeries.ExpiryTime.Description" xml:space="preserve">
    <value>Exact expiration time of day (HH:mm)</value>
  </data>
  <data name="SingleSeriesNumericalDelta.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalDelta.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalGamma.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalGamma.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalTheta.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalTheta.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalVega.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalVega.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionCommissions.Name" xml:space="preserve">
    <value>Single Series Position Commission</value>
  </data>
  <data name="SingleSeriesPositionCommissions.Description" xml:space="preserve">
    <value>Grid of entire option position commissions</value>
  </data>
  <data name="SingleSeriesPositionCommissions.LongPositions.Name" xml:space="preserve">
    <value>Long positions</value>
  </data>
  <data name="SingleSeriesPositionCommissions.LongPositions.Description" xml:space="preserve">
    <value>Prices of long positions</value>
  </data>
  <data name="SingleSeriesPositionCommissions.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="SingleSeriesPositionCommissions.OptionType.Description" xml:space="preserve">
    <value>Option type to be used by handler (call, put, sum of both)</value>
  </data>
  <data name="SingleSeriesPositionCommissions.CountFutures.Name" xml:space="preserve">
    <value>Count Futures</value>
  </data>
  <data name="SingleSeriesPositionCommissions.CountFutures.Description" xml:space="preserve">
    <value>Count base asset</value>
  </data>
  <data name="SingleSeriesPositionCommissions.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesPositionCommissions.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesPositionCommissions.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionCommissions.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionCommissions.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesPositionCommissions.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesPositionPrices.Name" xml:space="preserve">
    <value>Single Series Position Prices</value>
  </data>
  <data name="SingleSeriesPositionPrices.Description" xml:space="preserve">
    <value>Grid of average position prices (single option series)</value>
  </data>
  <data name="SingleSeriesPositionPrices.LongPositions.Name" xml:space="preserve">
    <value>Long positions</value>
  </data>
  <data name="SingleSeriesPositionPrices.LongPositions.Description" xml:space="preserve">
    <value>Prices of long positions</value>
  </data>
  <data name="SingleSeriesPositionPrices.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="SingleSeriesPositionPrices.OptionType.Description" xml:space="preserve">
    <value>Option type to be used by handler (call, put, sum of both)</value>
  </data>
  <data name="SingleSeriesPositionPrices.CountFutures.Name" xml:space="preserve">
    <value>Count Futures</value>
  </data>
  <data name="SingleSeriesPositionPrices.CountFutures.Description" xml:space="preserve">
    <value>Count base asset</value>
  </data>
  <data name="SingleSeriesPositionPrices.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesPositionPrices.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesPositionPrices.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionPrices.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionPrices.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesPositionPrices.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="ContractsCount.Name" xml:space="preserve">
    <value>Contracts count</value>
  </data>
  <data name="Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="SetViewport.ManageXGridStep.Name" xml:space="preserve">
    <value>Manage X grid step</value>
  </data>
  <data name="SetViewport.ManageXGridStep.Description" xml:space="preserve">
    <value>Manage horizontal axis grid step</value>
  </data>
  <data name="SetViewport.XAxisStep.Name" xml:space="preserve">
    <value>X axis step</value>
  </data>
  <data name="SetViewport.XAxisStep.Description" xml:space="preserve">
    <value>X axis grid step</value>
  </data>
  <data name="SetViewport.XAxisDivisor.Name" xml:space="preserve">
    <value>X axis divisor</value>
  </data>
  <data name="SetViewport.XAxisDivisor.Description" xml:space="preserve">
    <value>X axis divisor</value>
  </data>
  <data name="DIM.Name" xml:space="preserve">
    <value>-DI</value>
  </data>
  <data name="DIP.Name" xml:space="preserve">
    <value>+DI</value>
  </data>
  <data name="ADX.Name" xml:space="preserve">
    <value>ADX (Old)</value>
  </data>
  <data name="ADXFull.Name" xml:space="preserve">
    <value>ADX</value>
  </data>
  <data name="AroonDown.Name" xml:space="preserve">
    <value>Aroon-</value>
  </data>
  <data name="AroonUp.Name" xml:space="preserve">
    <value>Aroon+</value>
  </data>
  <data name="BollingerBands1.Name" xml:space="preserve">
    <value>Bollinger Bands (+)</value>
  </data>
  <data name="BollingerBands2.Name" xml:space="preserve">
    <value>Bollinger Bands (-)</value>
  </data>
  <data name="CCI.Name" xml:space="preserve">
    <value>CCI</value>
  </data>
  <data name="CuttlerRSI.Name" xml:space="preserve">
    <value>Cutler's RSI</value>
  </data>
  <data name="MACDEx.Name" xml:space="preserve">
    <value>MACD Ext</value>
  </data>
  <data name="MACDSig.Name" xml:space="preserve">
    <value>MACD Signal</value>
  </data>
  <data name="MedianPrice.Name" xml:space="preserve">
    <value>Median Price</value>
  </data>
  <data name="ParabolicSAR" xml:space="preserve">
    <value>Parabolic SAR</value>
  </data>
  <data name="TrueRange.Name" xml:space="preserve">
    <value>TR</value>
  </data>
  <data name="TypicalPrice.Name" xml:space="preserve">
    <value>Typical Price</value>
  </data>
  <data name="BoolBreaker.Name" xml:space="preserve">
    <value>Boolean Breaker</value>
  </data>
  <data name="BoolConst.Name" xml:space="preserve">
    <value>Boolean Constant</value>
  </data>
<data name="StringConst.Name" xml:space="preserve">
    <value>String Constant</value>
  </data>
  <data name="MomentumOsc.Name" xml:space="preserve">
    <value>Chande Momentum Oscillator</value>
  </data>
  <data name="MomentumPct.Name" xml:space="preserve">
    <value>Momentum %</value>
  </data>
  <data name="OpenInterest.Name" xml:space="preserve">
    <value>Open Interest</value>
  </data>
  <data name="OptVolatility.Name" xml:space="preserve">
    <value>Option Volatility</value>
  </data>
  <data name="TheoreticalPrice.Name" xml:space="preserve">
    <value>Theoretical price</value>
  </data>
  <data name="ZeroLagTEMA.Name" xml:space="preserve">
    <value>TEMA (Zero Lag)</value>
  </data>
  <data name="MAEPct.Name" xml:space="preserve">
    <value>MAE %</value>
  </data>
  <data name="MFEPct.Name" xml:space="preserve">
    <value>MFE %</value>
  </data>
  <data name="StochRSI.Name" xml:space="preserve">
    <value>Stoch RSI</value>
  </data>
  <data name="BidAskMarketPosition.Name" xml:space="preserve">
    <value>Buy/Sell cluster(view only)</value>
    <comment>Кластер пок./прод.</comment>
  </data>
  <data name="DeltaMarketPosition.Name" xml:space="preserve">
    <value>Delta cluster(view only)</value>
    <comment>Дельта кластер</comment>
  </data>
  <data name="AllTimeTradeStatisticsHandler.Name" xml:space="preserve">
    <value>All Time Trade Statistics</value>
    <comment>Торговая статистика за всё время</comment>
  </data>
  <data name="LastContractsTradeStatisticsHandler.Name" xml:space="preserve">
    <value>Last Contracts Trade Statistics</value>
    <comment>Торговая статистика последних контрактов</comment>
  </data>
  <data name="LastTradeStatisticsHandler.Name" xml:space="preserve">
    <value>Last Trade Statistics</value>
    <comment>Последняя торговая статистика</comment>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.Name" xml:space="preserve">
    <value>Trade Statistics Extremum Price</value>
    <comment>Экстремальная цена торговой статистики</comment>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler.Name" xml:space="preserve">
    <value>Trade Statistics Extended Extremum Price 1</value>
    <comment>Расширенная экстремальная цена торговой статистики 1</comment>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler2.Name" xml:space="preserve">
    <value>Trade Statistics Extended Extremum Price 2</value>
    <comment>Расширенная экстремальная цена торговой статистики 2</comment>
  </data>
  <data name="TradeStatisticsExtremumValueHandler.Name" xml:space="preserve">
    <value>Trade Statistics Extremum Value</value>
    <comment>Экстремальное значение торговой статистики</comment>
  </data>
  <data name="TradeStatisticsHandler.Name" xml:space="preserve">
    <value>Trade Statistics</value>
    <comment>Торговая статистика</comment>
  </data>
  <data name="TradeStatisticsCombineHandler.Name" xml:space="preserve">
    <value>Stacked Trading Statistics</value>
    <comment>Сложенная Торговая статистика</comment>
  </data>
  <data name="TradeStatisticsLowerEdgeHandler.Name" xml:space="preserve">
    <value>Trade Statistics Lower Level</value>
    <comment>Нижний уровень торговой статистики</comment>
  </data>
  <data name="TradeStatisticsUpperEdgeHandler.Name" xml:space="preserve">
    <value>Trade Statistics Upper Level</value>
    <comment>Верхний уровень торговой статистики</comment>
  </data>
  <data name="TradeStatisticsBarsCountHandler.Name" xml:space="preserve">
    <value>Trade Statistics Strings Count</value>
    <comment>Количество строк торговой статистики</comment>
  </data>
  <data name="TradeStatisticsBarsSumHandler.Name" xml:space="preserve">
    <value>Trade Statistics Strings Sum</value>
    <comment>Сумма строк торговой статистики</comment>
  </data>
  <data name="TradeStatisticsExtendedBarsCountHandler.Name" xml:space="preserve">
    <value>Trade Statistics Extended Strings Count 1</value>
    <comment>Расширенное количество строк торговой статистики 1</comment>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler.Name" xml:space="preserve">
    <value>Trade Statistics Extended Strings Sum 1</value>
    <comment>Расширенная сумма строк торговой статистики 1</comment>
  </data>
  <data name="TradeStatisticsExtendedBarsCountHandler2.Name" xml:space="preserve">
    <value>Trade Statistics Extended Strings Count 2</value>
    <comment>Расширенное количество строк торговой статистики 2</comment>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler2.Name" xml:space="preserve">
    <value>Trade Statistics Extended Strings Sum 2</value>
    <comment>Расширенная сумма строк торговой статистики 1</comment>
  </data>
  <data name="TradeStatisticsPriceValueHandler.Name" xml:space="preserve">
    <value>Trade Statistics Price Value</value>
    <comment>Значение цены торговой статистики</comment>
  </data>
  <data name="VolumeForPeriodHandler.Name" xml:space="preserve">
    <value>Volume for period</value>
  </data>
  <data name="AlignedSecurityHandler.Name" xml:space="preserve">
    <value>Aligned instrument</value>
    <comment>Выровненный инструмент</comment>
  </data>
  <data name="BuysHandler.Name" xml:space="preserve">
    <value>Buys</value>
  </data>
  <data name="SellsHandler.Name" xml:space="preserve">
    <value>Sells</value>
  </data>
  <data name="BuysMinusSellsHandler.Name" xml:space="preserve">
    <value>Buys Minus Sells</value>
  </data>
  <data name="VolumeMarketPosition.Name" xml:space="preserve">
    <value>Volume cluster(view only)</value>
  </data>
  <data name="MessageHandler.Name" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="AutoHedger.BuyShift.Name" xml:space="preserve">
    <value>Buy shift</value>
  </data>
  <data name="AutoHedger.BuyShift.Description" xml:space="preserve">
    <value>Buy shift (price steps)</value>
  </data>
  <data name="AutoHedger.SellShift.Name" xml:space="preserve">
    <value>Sell shift</value>
  </data>
  <data name="AutoHedger.SellShift.Description" xml:space="preserve">
    <value>Sell shift (price steps)</value>
  </data>
  <data name="TextHandler.Name" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="IvOnF.RescaleTime.Name" xml:space="preserve">
    <value>Rescale Time</value>
  </data>
  <data name="IvOnF.RescaleTime.Description" xml:space="preserve">
    <value>Rescale time-to-expiry to our internal?</value>
  </data>
  <data name="IvOnF.DistanceMode.Name" xml:space="preserve">
    <value>Estimation Algo</value>
  </data>
  <data name="IvOnF.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="IvOnF.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry Time</value>
  </data>
  <data name="IvOnF.ExpiryTime.Description" xml:space="preserve">
    <value>Exact expiration time of day (HH:mm)</value>
  </data>
  <data name="IvOnF2.RescaleTime.Name" xml:space="preserve">
    <value>Rescale Time</value>
  </data>
  <data name="IvOnF2.RescaleTime.Description" xml:space="preserve">
    <value>Rescale time-to-expiry to our internal?</value>
  </data>
  <data name="IvOnF2.DistanceMode.Name" xml:space="preserve">
    <value>Estimation Algo</value>
  </data>
  <data name="IvOnF2.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="IvOnF2.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry Time</value>
  </data>
  <data name="IvOnF2.ExpiryTime.Description" xml:space="preserve">
    <value>Exact expiration time of day (HH:mm)</value>
  </data>
  <data name="TotalProfit.ProfitAlgo.Name" xml:space="preserve">
    <value>Profit algo</value>
  </data>
  <data name="TotalProfit.ProfitAlgo.Description" xml:space="preserve">
    <value>Profit calculation algorytm</value>
  </data>
  <data name="Momentum" xml:space="preserve">
    <value>Momentum</value>
  </data>
  <data name="SelectStrike.Name" xml:space="preserve">
    <value>Select strike</value>
  </data>
  <data name="SelectStrike.Description" xml:space="preserve">
    <value>Use drop-down control to select single strike from option series. To use it link 'Strike' property to Control pane.</value>
  </data>
  <data name="SelectStrike.Strike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="SelectStrike.Strike.Description" xml:space="preserve">
    <value>Option strike</value>
  </data>
  <data name="BasePx.RepeatLastPx.Name" xml:space="preserve">
    <value>Repeat Last Px</value>
  </data>
  <data name="BasePx.RepeatLastPx.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="SelectStrike.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SelectStrike.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract most important options</value>
  </data>
  <data name="BasePx2.RepeatLastPx.Name" xml:space="preserve">
    <value>Repeat Last Px</value>
  </data>
  <data name="BasePx2.RepeatLastPx.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="ConstSmileLevel2.Name" xml:space="preserve">
    <value>Horizontal line</value>
  </data>
  <data name="ConstSmileLevel2.Description" xml:space="preserve">
    <value>Horizontal line at smile chart. Position is defined by 'Value' parameter.</value>
  </data>
  <data name="ConstSmileLevel2.ValuePct.Name" xml:space="preserve">
    <value>Value, %</value>
  </data>
  <data name="ConstSmileLevel2.ValuePct.Description" xml:space="preserve">
    <value>Value (percents)</value>
  </data>
  <data name="ConstSmileLevel2.ShowEdgeLabels.Name" xml:space="preserve">
    <value>Show edge labels</value>
  </data>
  <data name="ConstSmileLevel2.ShowEdgeLabels.Description" xml:space="preserve">
    <value>Show edge labels</value>
  </data>
  <data name="ConstSmileLevel2.SigmaPct.Name" xml:space="preserve">
    <value>Sigma, %</value>
  </data>
  <data name="ConstSmileLevel2.SigmaPct.Description" xml:space="preserve">
    <value>Volatility (percents)</value>
  </data>
  <data name="ConstSmileLevel2.Label.Name" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="ConstSmileLevel2.Label.Description" xml:space="preserve">
    <value>Label to mark a nodes</value>
  </data>
  <data name="ConstSmileLevel2.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ConstSmileLevel2.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ConstSmileLevel2.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="ConstSmileLevel2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="LastValueToParameter.Name" xml:space="preserve">
    <value>Last Value</value>
  </data>
  <data name="LastValueToParameter.Description" xml:space="preserve">
    <value>Convert last value in series to parameter</value>
  </data>
  <data name="LastValueToParameter.Result.Name" xml:space="preserve">
    <value>Display value</value>
  </data>
  <data name="LastValueToParameter.Result.Description" xml:space="preserve">
    <value>Display value (just to show it on ControlPane)</value>
  </data>
  <data name="OptionsBoardNumericalDelta.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="OptionsBoardNumericalDelta.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="OptionsBoardNumericalDelta.GreekAlgo.Name" xml:space="preserve">
    <value>Greek algo</value>
  </data>
  <data name="OptionsBoardNumericalDelta.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="OptionsBoardNumericalDelta.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip format</value>
  </data>
  <data name="OptionsBoardNumericalDelta.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="OptionsBoardNumericalDelta.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="OptionsBoardNumericalDelta.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="OptionsBoardNumericalDelta.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="OptionsBoardNumericalDelta.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="OptionsBoardNumericalGamma.Name" xml:space="preserve">
    <value>Options board numerical gamma</value>
  </data>
  <data name="OptionsBoardNumericalGamma.Description" xml:space="preserve">
    <value>Estimate gamma as function of strikes with numerical differentiation</value>
  </data>
  <data name="OptionsBoardNumericalGamma.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="OptionsBoardNumericalGamma.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="OptionsBoardNumericalGamma.GreekAlgo.Name" xml:space="preserve">
    <value>Greek algo</value>
  </data>
  <data name="OptionsBoardNumericalGamma.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="OptionsBoardNumericalGamma.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip format</value>
  </data>
  <data name="OptionsBoardNumericalGamma.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="OptionsBoardNumericalGamma.SigmaMult.Name" xml:space="preserve">
    <value>Width Multiplier</value>
  </data>
  <data name="OptionsBoardNumericalGamma.SigmaMult.Description" xml:space="preserve">
    <value>Width Multiplier</value>
  </data>
  <data name="OptionsBoardNumericalGamma.ShowNodes.Name" xml:space="preserve">
    <value>Show Nodes</value>
  </data>
  <data name="OptionsBoardNumericalGamma.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SmileSelector.Name" xml:space="preserve">
    <value>Select smile</value>
  </data>
  <data name="SmileSelector.Description" xml:space="preserve">
    <value>Select one of several available smiles using handler parameter</value>
  </data>
  <data name="SmileSelector.SmileIndex.Name" xml:space="preserve">
    <value>Input index</value>
  </data>
  <data name="SmileSelector.SmileIndex.Description" xml:space="preserve">
    <value>Input index (start from 1)</value>
  </data>
  <data name="LastValueToParameter.LastValue.Name" xml:space="preserve">
    <value>Last value</value>
  </data>
  <data name="LastValueToParameter.LastValue.Description" xml:space="preserve">
    <value>Last value</value>
  </data>
  <data name="QuoteIv.Name" xml:space="preserve">
    <value>Quote volatility</value>
  </data>
  <data name="QuoteIv.Description" xml:space="preserve">
    <value>Quote volatility</value>
  </data>
  <data name="QuoteIv.Strike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="QuoteIv.Strike.Description" xml:space="preserve">
    <value>Option strike</value>
  </data>
  <data name="QuoteIv.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="QuoteIv.OptionType.Description" xml:space="preserve">
    <value>Option type (when Any, the handler will choose out-of-the-money security)</value>
  </data>
  <data name="QuoteIv.ExecuteCommand.Name" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="QuoteIv.ExecuteCommand.Description" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="QuoteIv.CancelAllLong.Name" xml:space="preserve">
    <value>Cancel all long</value>
  </data>
  <data name="QuoteIv.CancelAllLong.Description" xml:space="preserve">
    <value>Cancel long quotes in all strikes</value>
  </data>
  <data name="QuoteIv.CancelAllShort.Name" xml:space="preserve">
    <value>Cancel all short</value>
  </data>
  <data name="QuoteIv.CancelAllShort.Description" xml:space="preserve">
    <value>Cancel short quotes in all strikes</value>
  </data>
  <data name="QuoteIv.Qty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="QuoteIv.Qty.Description" xml:space="preserve">
    <value>Trade quantity. Negative value reverts the signal.</value>
  </data>
  <data name="QuoteIv.ShiftIvPct.Name" xml:space="preserve">
    <value>Shift IV</value>
  </data>
  <data name="QuoteIv.ShiftIvPct.Description" xml:space="preserve">
    <value>Shift quote relative to the smile (in percents of volatility)</value>
  </data>
  <data name="QuoteIv.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="QuoteIv.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract most important options</value>
  </data>
  <data name="QuoteIv.ShiftPrice.Name" xml:space="preserve">
    <value>Shift price</value>
  </data>
  <data name="QuoteIv.ShiftPrice.Description" xml:space="preserve">
    <value>Shift quote relative to the shifted smile (in price steps)</value>
  </data>
  <data name="ShowIvTargets.Name" xml:space="preserve">
    <value>Show IV Targets</value>
  </data>
  <data name="ShowIvTargets.Description" xml:space="preserve">
    <value>Show volatility limit orders</value>
  </data>
  <data name="ShowIvTargets.IsLong.Name" xml:space="preserve">
    <value>Long</value>
  </data>
  <data name="ShowIvTargets.IsLong.Description" xml:space="preserve">
    <value>Show long orders</value>
  </data>
  <data name="SingleSeriesPositionPrices.CountQty.Name" xml:space="preserve">
    <value>Count lot size</value>
  </data>
  <data name="SingleSeriesPositionPrices.CountQty.Description" xml:space="preserve">
    <value>Count lot size</value>
  </data>
  <data name="BalancedPrice.Name" xml:space="preserve">
    <value>Average entry price</value>
    <comment>средняя цена входа</comment>
  </data>
  <data name="PositionsManager.CheckSecurityTime.Name" xml:space="preserve">
    <value>Check security time</value>
  </data>
  <data name="PositionsManager.CheckSecurityTime.Description" xml:space="preserve">
    <value>When true it will validate security time before sending order to market</value>
  </data>
  <data name="Ask.Name" xml:space="preserve">
    <value>Ask</value>
  </data>
  <data name="AskQty.Name" xml:space="preserve">
    <value>Total offer</value>
  </data>
  <data name="Bid.Name" xml:space="preserve">
    <value>Bid</value>
  </data>
  <data name="BidQty.Name" xml:space="preserve">
    <value>Total demand</value>
  </data>
  <data name="BarNumber.Name" xml:space="preserve">
    <value>Bar number</value>
  </data>
  <data name="HoldSignalForNBars.Name" xml:space="preserve">
    <value>Hold signal for N bars</value>
  </data>
  <data name="IsItLossAtLastPosition.Name" xml:space="preserve">
    <value>Last closed position was unprofitable</value>
  </data>
  <data name="PositionChangeEntryBarNumber.Name" xml:space="preserve">
    <value>Changed Position Entry Bar Number</value>
  </data>
  <data name="PositionChangeExitBarNumber.Name" xml:space="preserve">
    <value>Changed Position Exit Bar Number</value>
  </data>
  <data name="PositionEntryBarNumber.Name" xml:space="preserve">
    <value>Position Entry Bar Number</value>
  </data>
  <data name="PositionExitBarNumber.Name" xml:space="preserve">
    <value>Position Exit Bar Number</value>
  </data>
  <data name="PositionChangeEntryPrice.Name" xml:space="preserve">
    <value>Changed Position Entry Price</value>
  </data>
  <data name="PositionChangeExitPrice.Name" xml:space="preserve">
    <value>Changed Position Exit Price</value>
  </data>
  <data name="PositionIsVirtualHandler.Name" xml:space="preserve">
    <value>Position Is Virtual</value>
  </data>
  <data name="PositionIsVirtualClosedHandler.Name" xml:space="preserve">
    <value>Position Is Virtually Closed</value>
  </data>
  <data name="Median.Name" xml:space="preserve">
    <value>Equity Drawdown</value>
  </data>
  <data name="BuyCount.Name" xml:space="preserve">
    <value>Number of purchases</value>
  </data>
  <data name="SellCount.Name" xml:space="preserve">
    <value>Number of sales</value>
  </data>
  <data name="BuyDeposit.Name" xml:space="preserve">
    <value>Buy Deposit</value>
  </data>
  <data name="SellDeposit.Name" xml:space="preserve">
    <value>Sell Deposit</value>
  </data>
  <data name="HighestPos.Name" xml:space="preserve">
    <value>Bars since last high</value>
  </data>
  <data name="LowestPos.Name" xml:space="preserve">
    <value>Bars since last low</value>
  </data>
  <data name="SessionClose.Name" xml:space="preserve">
    <value>Session close</value>
  </data>
  <data name="SessionHeld.Name" xml:space="preserve">
    <value>Current Session Bar</value>
  </data>
  <data name="SessionHigh.Name" xml:space="preserve">
    <value>Session high</value>
  </data>
  <data name="SessionLow.Name" xml:space="preserve">
    <value>Session low</value>
  </data>
  <data name="SessionOpen.Name" xml:space="preserve">
    <value>Session open</value>
  </data>
  <data name="HoldSignalForNBars.NBars.Name" xml:space="preserve">
    <value>Bars count</value>
  </data>
  <data name="PrepareLineForCanvasPane.Name" xml:space="preserve">
    <value>Prepare line</value>
  </data>
  <data name="PrepareLineForCanvasPane.Description" xml:space="preserve">
    <value>Merge two series of numbers to InteractiveSeries</value>
  </data>
  <data name="ControlledBoolConst.Name" xml:space="preserve">
    <value>Controlled Boolean Constant</value>
  </data>
  <data name="ResettableControlledBoolConst.Name" xml:space="preserve">
    <value>Resettable Controlled Boolean Constant</value>
  </data>
  <data name="BarsConstructorHandler.Name" xml:space="preserve">
    <value>Bars Constructor</value>
  </data>
  <data name="Input.BarsConstructorHandler.1" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Input.BarsConstructorHandler.2" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Input.BarsConstructorHandler.3" xml:space="preserve">
    <value>Maximum</value>
  </data>
  <data name="Input.BarsConstructorHandler.4" xml:space="preserve">
    <value>Mimimum</value>
  </data>
  <data name="Input.BarsConstructorHandler.5" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="TimeFrameKind.Name" xml:space="preserve">
    <value>Time frame kind</value>
  </data>
  <data name="TopTimeFrame.Name" xml:space="preserve">
    <value>Top time frame</value>
  </data>
  <data name="TopTimeFrameUnit.Name" xml:space="preserve">
    <value>Top time frame unit</value>
  </data>
  <data name="PriceMode.Name" xml:space="preserve">
    <value>Price mode</value>
  </data>
  <data name="TrimLevelPercent.Name" xml:space="preserve">
    <value>Trim level, %</value>
  </data>
  <data name="TrimValueMode.Name" xml:space="preserve">
    <value>Trim value mode</value>
  </data>
  <data name="TrimValue.Name" xml:space="preserve">
    <value>Trim value</value>
  </data>
  <data name="TrimComparisonMode.Name" xml:space="preserve">
    <value>Trim comparison mode</value>
  </data>
  <data name="TrimAskQuantity.Name" xml:space="preserve">
    <value>Trim ask quantity</value>
  </data>
  <data name="TrimBidQuantity.Name" xml:space="preserve">
    <value>Trim bid quantity</value>
  </data>
  <data name="TrimDeltaAskBidQuantity.Name" xml:space="preserve">
    <value>Trim delta ask bid quantity</value>
  </data>
  <data name="TrimRelativeDeltaAskBidQuantityPercent.Name" xml:space="preserve">
    <value>Trim relative delta ask bid quantity, %</value>
  </data>
  <data name="TrimQuantity.Name" xml:space="preserve">
    <value>Trim quantity</value>
  </data>
  <data name="TrimTradesCount.Name" xml:space="preserve">
    <value>Trim trades count</value>
  </data>
  <data name="UseTrimAskQuantity.Name" xml:space="preserve">
    <value>Use trim ask quantity</value>
  </data>
  <data name="UseTrimBidQuantity.Name" xml:space="preserve">
    <value>Use trim bid quantity</value>
  </data>
  <data name="UseTrimDeltaAskBidQuantity.Name" xml:space="preserve">
    <value>Use trim delta ask bid quantity</value>
  </data>
  <data name="UseTrimRelativeDeltaAskBidQuantityPercent.Name" xml:space="preserve">
    <value>Use trim relative delta ask bid quantity, %</value>
  </data>
  <data name="UseTrimQuantity.Name" xml:space="preserve">
    <value>Use trim quantity</value>
  </data>
  <data name="UseTrimTradesCount.Name" xml:space="preserve">
    <value>Use trim trades count</value>
  </data>
  <data name="TrimTradesCountComparisonMode.Name" xml:space="preserve">
    <value>Trim trades count comparison mode</value>
  </data>
  <data name="TrimQuantityComparisonMode.Name" xml:space="preserve">
    <value>Trim quantity comparison mode</value>
  </data>
  <data name="TrimAskQuantityComparisonMode.Name" xml:space="preserve">
    <value>Trim ask quantity comparison mode</value>
  </data>
  <data name="TrimBidQuantityComparisonMode.Name" xml:space="preserve">
    <value>Trim bid quantity comparison mode</value>
  </data>
  <data name="TrimDeltaAskBidQuantityComparisonMode.Name" xml:space="preserve">
    <value>Trim delta ask bid quantity comparison mode</value>
  </data>
  <data name="TrimRelativeDeltaAskBidQuantityPercentComparisonMode.Name" xml:space="preserve">
    <value>Trim relative delta ask bid quantity comparison mode, %</value>
  </data>
  <data name="ProfitKind.Name" xml:space="preserve">
    <value>Profit kind</value>
  </data>
  <data name="SessionStart.Name" xml:space="preserve">
    <value>Session start</value>
  </data>
  <data name="Message.Name" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="SaveToGlobalCache.Name" xml:space="preserve">
    <value>Save to Global Cache</value>
    <comment>Сохранить в Глобальный Кеш</comment>
  </data>
  <data name="SaveToGlobalCache.Description" xml:space="preserve">
    <value>Save any indicator to Global Cache</value>
    <comment>Сохранить значение любого индикатора в Глобальный Кеш</comment>
  </data>
  <data name="SaveToGlobalCache.RepeatLastValue.Name" xml:space="preserve">
    <value>Repeat last value</value>
    <comment>Повтор значения</comment>
  </data>
  <data name="SaveToGlobalCache.RepeatLastValue.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
    <comment>При true будет находить и использовать последнее известное значение</comment>
  </data>
  <data name="SaveToGlobalCache.MaxValues.Name" xml:space="preserve">
    <value>Maximum numbers</value>
  </data>
  <data name="SaveToGlobalCache.MaxValues.Description" xml:space="preserve">
    <value>Maximum number of stored values. If 0, then it will be limited by the number of bars</value>
  </data>
  <data name="SaveToGlobalCache.SaveToStorage.Name" xml:space="preserve">
    <value>Save to disk</value>
    <comment>Сохранять на диск</comment>
  </data>
  <data name="SaveToGlobalCache.SaveToStorage.Description" xml:space="preserve">
    <value>Save to HDD to use indicator values across different program sessions</value>
    <comment>Сохранять значения в файл на диске для повторного использования между перезапусками программы</comment>
  </data>
  <data name="SaveToGlobalCache.ValuesName.Name" xml:space="preserve">
    <value>Values name</value>
    <comment>Название значений</comment>
  </data>
  <data name="SaveToGlobalCache.ValuesName.Description" xml:space="preserve">
    <value>Unique indicator name to be used to store values in Global Cache</value>
    <comment>Уникальное название индикатора для целей сохранения в Глобальный Кеш</comment>
  </data>
  <data name="LoadFromGlobalCache.Name" xml:space="preserve">
    <value>Load from Global Cache</value>
    <comment>Загрузить из Глобального Кеша</comment>
  </data>
  <data name="LoadFromGlobalCache.Description" xml:space="preserve">
    <value>Load indicator from Global Cache</value>
    <comment>Загрузить значение индикатора из Глобального Кеша</comment>
  </data>
  <data name="LoadFromGlobalCache.RepeatLastValue.Name" xml:space="preserve">
    <value>Repeat last value</value>
    <comment>Повтор значения</comment>
  </data>
  <data name="LoadFromGlobalCache.RepeatLastValue.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
    <comment>При true будет находить и использовать последнее известное значение</comment>
  </data>
  <data name="LoadFromGlobalCache.LoadFromStorage.Name" xml:space="preserve">
    <value>Load from disk</value>
    <comment>Загружать с диска</comment>
  </data>
  <data name="LoadFromGlobalCache.LoadFromStorage.Description" xml:space="preserve">
    <value>Load from HDD to use indicator values across different program sessions</value>
    <comment>Загружать значения из файла на диске для повторного использования между перезапусками программы</comment>
  </data>
  <data name="LoadFromGlobalCache.AgentName.Name" xml:space="preserve">
    <value>Agent name</value>
    <comment>Имя агента</comment>
  </data>
  <data name="LoadFromGlobalCache.AgentName.Description" xml:space="preserve">
    <value>Name of the agent that writes to Global Cache</value>
    <comment>Имя агента, который пишет в Глобальный Кеш</comment>
  </data>
  <data name="LoadFromGlobalCache.ValuesName.Name" xml:space="preserve">
    <value>Values name</value>
    <comment>Название значений</comment>
  </data>
  <data name="LoadFromGlobalCache.ValuesName.Description" xml:space="preserve">
    <value>Unique indicator name to be used to store values in Global Cache</value>
    <comment>Уникальное название индикатора для целей сохранения в Глобальный Кеш</comment>
  </data>
  <data name="LoadFromGlobalCache.OverrideSymbol.Name" xml:space="preserve">
    <value>Override security</value>
    <comment>Переопределить инструмент</comment>
  </data>
  <data name="LoadFromGlobalCache.OverrideSymbol.Description" xml:space="preserve">
    <value>Override security (use this ticker instead of handler's input)</value>
    <comment>Переопределить инструмент (использовать это значение вместо полученного на входе блока)</comment>
  </data>
  <data name="GlobalSkewOnF.RepeatLastSkew.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="GlobalSkewOnF.SkewMode.Name" xml:space="preserve">
    <value>Skew mode</value>
  </data>
  <data name="GlobalSkewOnF.SkewMode.Description" xml:space="preserve">
    <value>Algorythm to get smile skew</value>
  </data>
  <data name="ShowTrades.Name" xml:space="preserve">
    <value>Show all trades</value>
  </data>
  <data name="ShowTrades.Description" xml:space="preserve">
    <value>Show all security trades on the Chart Pane</value>
  </data>
  <data name="BlackScholesGreeks.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="BlackScholesGreeks.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="OptionsBoardNumericalDelta.FixedQty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="OptionsBoardNumericalDelta.FixedQty.Description" xml:space="preserve">
    <value>Entry size of this virtual position</value>
  </data>
  <data name="OwnOrders.ShowLongOrders.Name" xml:space="preserve">
    <value>Show long</value>
  </data>
  <data name="OwnOrders.ShowLongOrders.Description" xml:space="preserve">
    <value>Show long or short orders</value>
  </data>
  <data name="OwnPositionIv.DisplayIv.Name" xml:space="preserve">
    <value>Display IV</value>
  </data>
  <data name="OwnPositionIv.DisplayIv.Description" xml:space="preserve">
    <value>Effective position volatility (only to display at UI)</value>
  </data>
  <data name="OwnPositionIvLine.DisplayIv.Name" xml:space="preserve">
    <value>Display IV</value>
  </data>
  <data name="OwnPositionIvLine.DisplayIv.Description" xml:space="preserve">
    <value>Effective position volatility (only to display at UI)</value>
  </data>
  <data name="PositionsManagerSingle.Name" xml:space="preserve">
    <value>Positions Manager (single security)</value>
  </data>
  <data name="PositionsManagerSingle.Description" xml:space="preserve">
    <value>Manager for virtual and real positions (single security)</value>
  </data>
  <data name="PositionsManagerSingle.BlockTrading.Name" xml:space="preserve">
    <value>Block Trading</value>
  </data>
  <data name="PositionsManagerSingle.BlockTrading.Description" xml:space="preserve">
    <value>When true trading is completely blocked to avoid user misclick errors</value>
  </data>
  <data name="PositionsManagerSingle.UseVirtualPositions.Name" xml:space="preserve">
    <value>Virtual Positions</value>
  </data>
  <data name="PositionsManagerSingle.UseVirtualPositions.Description" xml:space="preserve">
    <value>When true it will create only virtual positions without sending orders in market</value>
  </data>
  <data name="PositionsManagerSingle.AgregatePositions.Name" xml:space="preserve">
    <value>Agregate positions</value>
  </data>
  <data name="PositionsManagerSingle.AgregatePositions.Description" xml:space="preserve">
    <value>When true it will agregate positions of similar directions in one</value>
  </data>
  <data name="PositionsManagerSingle.DropVirtualPos.Name" xml:space="preserve">
    <value>Drop Virtual Positions</value>
  </data>
  <data name="PositionsManagerSingle.DropVirtualPos.Description" xml:space="preserve">
    <value>Drop virtual positions</value>
  </data>
  <data name="PositionsManagerSingle.ImportRealPos.Name" xml:space="preserve">
    <value>Import Real Pos</value>
  </data>
  <data name="PositionsManagerSingle.ImportRealPos.Description" xml:space="preserve">
    <value>Button to import real positions</value>
  </data>
  <data name="PositionsManagerSingle.UseGlobalCache.Name" xml:space="preserve">
    <value>Use Global Cache</value>
  </data>
  <data name="PositionsManagerSingle.UseGlobalCache.Description" xml:space="preserve">
    <value>Use global cache</value>
  </data>
  <data name="PositionsManagerSingle.CheckSecurityTime.Name" xml:space="preserve">
    <value>Check security time</value>
  </data>
  <data name="PositionsManagerSingle.CheckSecurityTime.Description" xml:space="preserve">
    <value>When true it will validate security time before sending order to market</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.Name" xml:space="preserve">
    <value>Single Series Numerical Speed</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.Description" xml:space="preserve">
    <value>Estimate 'Speed' profile with numerical differentiation</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="Add.Description" xml:space="preserve">
    <value>Sum a few input values (from 2 to 6 inputs)</value>
  </data>
  <data name="And.Description" xml:space="preserve">
    <value>Logical conjunction of a few input values (from 2 to 30 inputs). Output is TRUE only if all inputs are TRUE at the same time.</value>
  </data>
  <data name="Ask.Description" xml:space="preserve">
    <value>Best sell price recorded at the end of every bar (if available).</value>
  </data>
  <data name="AskQty.Description" xml:space="preserve">
    <value>Total offer size recorded at the end of every bar (if available)</value>
  </data>
  <data name="BarNumber.Description" xml:space="preserve">
    <value>An index of an element in a list of bars or numeric values.</value>
  </data>
  <data name="BarsConstructorHandler.Description" xml:space="preserve">
    <value>Handler converts 5 input numeric series to a synthetic security with bars. Inputs are: open, close, high, low, volume.</value>
  </data>
  <data name="Bid.Description" xml:space="preserve">
    <value>Best buy price recorded at the end of every bar (if available).</value>
  </data>
  <data name="BidQty.Description" xml:space="preserve">
    <value>Total demand size recorded at the end of every bar (if available)</value>
  </data>
  <data name="BoolBreaker.Description" xml:space="preserve">
    <value>Sets a FALSE value at every candle except the last one. For the last value sets a selected TRUE/FALSE value. This block is used together with the control pane buttons.</value>
  </data>
  <data name="BoolConst.Description" xml:space="preserve">
    <value>This block sets a fixed boolean value for every bar.</value>
  </data>
  <data name="StringConst.Description" xml:space="preserve">
    <value>This block sets a fixed string value for every bar.</value>
  </data>
  <data name="BuyCount.Description" xml:space="preserve">
    <value>Shows the number of purchases (bids). This value is shown also in 'Quotes' table.</value>
  </data>
  <data name="Close.Description" xml:space="preserve">
    <value>Closing price of the bar.</value>
  </data>
  <data name="Compress.Description" xml:space="preserve">
    <value>Compresses current bars time range (minutes into minutes, days into days) into a longer one. Only divisible ranges can be used. For example, 15 minutes can be compressed into 15, 30, 45, 60 minutes and so on.</value>
  </data>
  <data name="CompressAdvanced.Description" xml:space="preserve">
    <value>Compresses a current bars time range (minutes into minutes, days into days) of bars into a longer one. Only divisible ranges can be used. For example, 15 minutes can be compressed into 15, 30, 45, 60 minutes and so on.</value>
  </data>
  <data name="CompressToSeconds.Description" xml:space="preserve">
    <value>Compresses current time range of bars into a longer one. Only divisible ranges can be used. For example, 1 minute can be compressed into 60, 120, 180, 240 seconds and so on.</value>
  </data>
  <data name="ConstGen.Description" xml:space="preserve">
    <value>A constant value.</value>
  </data>
  <data name="ConstGen.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ConstGen.Value.Description" xml:space="preserve">
    <value>A value to return as output of a handler</value>
  </data>
  <data name="ControlledBoolConst.Description" xml:space="preserve">
    <value>Controlled boolean constant (switch). If input is TRUE the result is taken from a field 'Value', otherwise the result is taken from a field 'Default value'.</value>
  </data>
  <data name="ControlledBoolConst.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ControlledBoolConst.Value.Description" xml:space="preserve">
    <value>A value to return as output of a handler when input is true</value>
  </data>
  <data name="ControlledBoolConst.DefaultValue.Name" xml:space="preserve">
    <value>Default value</value>
  </data>
  <data name="ControlledBoolConst.DefaultValue.Description" xml:space="preserve">
    <value>A value to return as output of a handler when input is false</value>
  </data>
  <data name="ValueReceiverHandler.DefaultValue.Name" xml:space="preserve">
    <value>Default value</value>
  </data>
  <data name="ValueReceiverHandler.DefaultValue.Description" xml:space="preserve">
    <value>A value to return as output of a handler when can't load from server</value>
  </data>
<data name="BoolReceiverHandler.DefaultValue.Name" xml:space="preserve">
    <value>Default value</value>
  </data>
<data name="BoolReceiverHandler.DefaultValue.Description" xml:space="preserve">
    <value>A value to return as output of a handler when can't load from server</value>
  </data>
  <data name="CrossOver.Description" xml:space="preserve">
    <value>Handler returns true, if second input (signal) crosses down a reference line (first input).</value>
  </data>
  <data name="CrossUnder.Description" xml:space="preserve">
    <value>Handler returns true, if second input (signal) crosses up a reference line (first input).</value>
  </data>
  <data name="Cutter.Description" xml:space="preserve">
    <value>Cuts High and Low up to a selected value.</value>
  </data>
  <data name="Cutter.Decimals.Name" xml:space="preserve">
    <value>Decimals</value>
  </data>
  <data name="Cutter.Decimals.Description" xml:space="preserve">
    <value>Decimals for ceiling</value>
  </data>
  <data name="Date.Description" xml:space="preserve">
    <value>Date of every bar is converted to number as yymmdd. I.e. date 12.31.2018 converts to a number 181231.</value>
  </data>
  <data name="DayOfMonth.Description" xml:space="preserve">
    <value>Handler accepts an instrument at the entry and returns a month day as number from 1 31.</value>
  </data>
  <data name="DayOfWeek.Description" xml:space="preserve">
    <value>Handler accepts an instrument at the entry and returns a week day as number from 1 (Monday) to 7 (Sunday).</value>
  </data>
  <data name="Decompres.Description" xml:space="preserve">
    <value>Decompresses calculated numeric data to be used further with other data in authentic range. The Decompress block should be connected to a block being compressed and to the Compress block linked to a block being decompressed. [br]TSLab has three decompression methods. [br]Attention! The 2nd method cannot be applied to offline data testing, as it results in looking into the future and, as a result, corrupts results significantly.</value>
  </data>
  <data name="DecompresBool.Description" xml:space="preserve">
    <value>Decompresses Boolean data which have been calculated in compressed range to be used further with other data in authentic range. The Decompress block should be connected to a block being decompressed and with the Compress block, linked to a block being decompressed.</value>
  </data>
  <data name="EqualHandler.Description" xml:space="preserve">
    <value>Handler returns true, if input values are equal (with respect to double values precision)</value>
  </data>
  <data name="Flip.Description" xml:space="preserve">
    <value>Imitates a trigger with 2 entries, when True appears at the first entry, an outgoing value becomes True, until True appears at the second entry. When True appears at the second entry, an indicator value becomes False, until True appears at the first entry. If True appears at two entries simultaneously, then an indicator valye is False, so it means that the first entry is ignored.</value>
  </data>
  <data name="GreaterHandler.Description" xml:space="preserve">
    <value>Handler returns true, if the first input is strictly greater than the second input.</value>
  </data>
  <data name="GreaterOrEqualHandler.Description" xml:space="preserve">
    <value>Handler returns true, if the first input is greater or equal than the second input.</value>
  </data>
  <data name="High.Description" xml:space="preserve">
    <value>A maximum price of a bar.</value>
  </data>
  <data name="HighestPos.Description" xml:space="preserve">
    <value>The number of bars since the latest high.</value>
  </data>
  <data name="HighestPos.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="HighestPos.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="Hold.Description" xml:space="preserve">
    <value>Holds an incoming Boolean signal during N candles (the Period parameter). So, if an incoming candle value becomes True, it will be duplicated for N candles.</value>
  </data>
  <data name="Hold.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="Hold.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="LessHandler.Description" xml:space="preserve">
    <value>Handler returns true, if the first input is strictly less than the second input.</value>
  </data>
  <data name="LessOrEqualHandler.Description" xml:space="preserve">
    <value>Handler returns true, if the first input is less or equal than the second input.</value>
  </data>
  <data name="Ln.Name" xml:space="preserve">
    <value>Ln</value>
  </data>
  <data name="Ln.Description" xml:space="preserve">
    <value>A natural logarithm (Ln) for a values series.</value>
  </data>
  <data name="Low.Description" xml:space="preserve">
    <value>A minimum price of a bar.</value>
  </data>
  <data name="LowestPos.Description" xml:space="preserve">
    <value>The number of bars since the latest low.</value>
  </data>
  <data name="LowestPos.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="LowestPos.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="Max.Description" xml:space="preserve">
    <value>Maximum of a few input values (from 2 to 6 inputs)</value>
  </data>
  <data name="Min.Description" xml:space="preserve">
    <value>Minimum of a few input values (from 2 to 6 inputs)</value>
  </data>
  <data name="Multiply.Description" xml:space="preserve">
    <value>Multiplies each item of input by a constant factor.</value>
  </data>
  <data name="Not.Description" xml:space="preserve">
    <value>Negation. Incoming logical value is changed to the opposite. TRUE changes to FALSE, FALSE changes to TRUE.</value>
  </data>
  <data name="Open.Description" xml:space="preserve">
    <value>Opening price of the bar.</value>
  </data>
  <data name="OpenInterest.Description" xml:space="preserve">
    <value>Open interest as recieved from data feed. This value is shown also in 'Quotes' table.</value>
  </data>
  <data name="OptVolatility.Description" xml:space="preserve">
    <value>Theoretical option volatility received from the Exchange. This value is also shown at the Quotes window.</value>
  </data>
  <data name="Or.Description" xml:space="preserve">
    <value>Logical disjunction of a few input values (from 2 to 30 inputs). Output is TRUE if at least one input is TRUE.</value>
  </data>
  <data name="ResettableControlledBoolConst.Description" xml:space="preserve">
    <value>Resettable controlled boolean constant (switch). If input is TRUE the result is taken from a field 'Value', otherwise the result is taken from a field 'Default value'. Second input determines 'Value'. If it contains more TRUE, then 'Value' is set to 'Default value'.</value>
  </data>
  <data name="ResettableControlledBoolConst.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ResettableControlledBoolConst.Value.Description" xml:space="preserve">
    <value>A value to return as output of a handler when input is true</value>
  </data>
  <data name="ResettableControlledBoolConst.DefaultValue.Name" xml:space="preserve">
    <value>Default value</value>
  </data>
  <data name="ResettableControlledBoolConst.DefaultValue.Description" xml:space="preserve">
    <value>A value to return as output of a handler when input is false</value>
  </data>
  <data name="SecDivideWith.Description" xml:space="preserve">
    <value>Handler converts bars of an input to a synthetic security (each incoming bar is divided by an individual weight from a second input).</value>
  </data>
  <data name="SecDivideWith.Decimals.Name" xml:space="preserve">
    <value>Decimals</value>
  </data>
  <data name="SecDivideWith.Decimals.Description" xml:space="preserve">
    <value>Decimals for ceiling</value>
  </data>
  <data name="SecMultiply.Description" xml:space="preserve">
    <value>Handler converts bars of an input to a synthetic security (all prices of incoming bars are multiplied by a given coefficient). </value>
  </data>
  <data name="SecMultiplyWith.Description" xml:space="preserve">
    <value>Handler converts bars of an input to a synthetic security (each incoming bar is multiplied by an individual weight from a second input).</value>
  </data>
  <data name="SecMultiplyWith.Decimals.Name" xml:space="preserve">
    <value>Decimals</value>
  </data>
  <data name="SecMultiplyWith.Decimals.Description" xml:space="preserve">
    <value>Decimals for ceiling</value>
  </data>
  <data name="SellCount.Description" xml:space="preserve">
    <value>Shows the number of sales (asks). This value is shown also in 'Quotes' table.</value>
  </data>
  <data name="SessionClose.Description" xml:space="preserve">
    <value>Shows a session close trade price.</value>
  </data>
  <data name="SessionHeld.Description" xml:space="preserve">
    <value>A current bar index from start of current trading day.</value>
  </data>
  <data name="SessionHigh.Description" xml:space="preserve">
    <value>Shows the session highest trade price.</value>
  </data>
  <data name="SessionLow.Description" xml:space="preserve">
    <value>Shows the session lowest trade price.</value>
  </data>
  <data name="SessionOpen.Description" xml:space="preserve">
    <value>Shows a session opening trade price.</value>
  </data>
  <data name="Shift.Description" xml:space="preserve">
    <value>Moves values for N candles to the right.</value>
  </data>
  <data name="Shift.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="Shift.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="PrevValue.Name" xml:space="preserve">
    <value>Previous value</value>
  </data>
  <data name="PrevValue.Description" xml:space="preserve">
    <value>Returns the previous value N steps back.</value>
  </data>
  <data name="PrevValue.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="StepPrice.Description" xml:space="preserve">
    <value>A step price recorded at the end of every bar (if available).</value>
  </data>
  <data name="TheoreticalPrice.Description" xml:space="preserve">
    <value>Theoretical instrument price received from the Exchange. This value is also shown at the Quotes window.</value>
  </data>
  <data name="Tick.Name" xml:space="preserve">
    <value>Price step</value>
  </data>
  <data name="Tick.Description" xml:space="preserve">
    <value>Price step of a security. This value is shown also in 'Quotes' table.</value>
  </data>
  <data name="Time.Description" xml:space="preserve">
    <value>Time of every bar is converted to number as hhmmss.</value>
  </data>
  <data name="TimeInMins.Description" xml:space="preserve">
    <value>Time of the bar from midnight in minutes. I.e. time 10:31 converts to a number 631.</value>
  </data>
  <data name="Volume.Description" xml:space="preserve">
    <value>Volume of the bar</value>
  </data>
  <data name="AbsolutCommission.Name" xml:space="preserve">
    <value>Absolute comission</value>
  </data>
  <data name="AbsolutCommission.Description" xml:space="preserve">
    <value>Absolute commission for one trade (long or short)</value>
  </data>
  <data name="RelativeCommisionWithMinimal.Description" xml:space="preserve">
    <value>Relative commission for one trade (long or short) as percents. Minumum absolute comission for a trade is additionally applied.</value>
  </data>
  <data name="RelativeCommission.Description" xml:space="preserve">
    <value>Relative commission for one trade (long or short) as percents. Cost of money: is used to get a price of a borrowed funds.</value>
  </data>
  <data name="TextHandler.Description" xml:space="preserve">
    <value>This block has no entries. It has an editable text parameter which returns as a result of its work.</value>
  </data>
  <data name="BoolBreaker.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="BoolBreaker.Value.Description" xml:space="preserve">
    <value>A value to return as output of a handler</value>
  </data>
  <data name="BoolConst.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="BoolConst.Value.Description" xml:space="preserve">
    <value>A value to return as output of a handler</value>
  </data>
  <data name="IvSmileRescaled2.OptPxMode.Name" xml:space="preserve">
    <value>Price mode</value>
  </data>
  <data name="IvSmileRescaled2.OptPxMode.Description" xml:space="preserve">
    <value>Algorythm to get option price</value>
  </data>
  <data name="IvSmileRescaled2.OptionType.Name" xml:space="preserve">
    <value>Option type</value>
  </data>
  <data name="IvSmileRescaled2.OptionType.Description" xml:space="preserve">
    <value>Option type to be used by handler (call, put, best volatility)</value>
  </data>
  <data name="IvSmileRescaled2.ShiftBid.Name" xml:space="preserve">
    <value>Shift Bid</value>
  </data>
  <data name="IvSmileRescaled2.ShiftBid.Description" xml:space="preserve">
    <value>Shift Bids down (price steps)</value>
  </data>
  <data name="IvSmileRescaled2.ShiftAsk.Name" xml:space="preserve">
    <value>Shift Ask</value>
  </data>
  <data name="IvSmileRescaled2.ShiftAsk.Description" xml:space="preserve">
    <value>Shift Asks up (price steps)</value>
  </data>
  <data name="IvSmileRescaled2.MaxSigmaPct.Name" xml:space="preserve">
    <value>Max sigma, %</value>
  </data>
  <data name="IvSmileRescaled2.MaxSigmaPct.Description" xml:space="preserve">
    <value>Maximum volatility (percents)</value>
  </data>
  <data name="QuoteIvDeribit.Name" xml:space="preserve">
    <value>Quote volatility (Deribit)</value>
  </data>
  <data name="QuoteIvDeribit.Description" xml:space="preserve">
    <value>Quote volatility (special for Deribit)</value>
  </data>
  <data name="QuoteIvDeribit.Strike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="QuoteIvDeribit.Strike.Description" xml:space="preserve">
    <value>Option strike</value>
  </data>
  <data name="QuoteIvDeribit.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="QuoteIvDeribit.OptionType.Description" xml:space="preserve">
    <value>Option type (when Any, the handler will choose out-of-the-money security)</value>
  </data>
  <data name="QuoteIvDeribit.ExecuteCommand.Name" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="QuoteIvDeribit.ExecuteCommand.Description" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="QuoteIvDeribit.CancelAllLong.Name" xml:space="preserve">
    <value>Cancel all long</value>
  </data>
  <data name="QuoteIvDeribit.CancelAllLong.Description" xml:space="preserve">
    <value>Cancel long quotes in all strikes</value>
  </data>
  <data name="QuoteIvDeribit.CancelAllShort.Name" xml:space="preserve">
    <value>Cancel all short</value>
  </data>
  <data name="QuoteIvDeribit.CancelAllShort.Description" xml:space="preserve">
    <value>Cancel short quotes in all strikes</value>
  </data>
  <data name="QuoteIvDeribit.Qty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="QuoteIvDeribit.Qty.Description" xml:space="preserve">
    <value>Trade quantity. Negative value reverts the signal.</value>
  </data>
  <data name="QuoteIvDeribit.ShiftIvPct.Name" xml:space="preserve">
    <value>Shift IV</value>
  </data>
  <data name="QuoteIvDeribit.ShiftIvPct.Description" xml:space="preserve">
    <value>Shift quote relative to the smile (in percents of volatility)</value>
  </data>
  <data name="QuoteIvDeribit.ShiftPrice.Name" xml:space="preserve">
    <value>Shift price</value>
  </data>
  <data name="QuoteIvDeribit.ShiftPrice.Description" xml:space="preserve">
    <value>Shift quote relative to the shifted smile (in price steps)</value>
  </data>
  <data name="QuoteIvDeribit.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="QuoteIvDeribit.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract most important options</value>
  </data>
  <data name="ShowIvTargetsDeribit.Name" xml:space="preserve">
    <value>Show IV Targets (Deribit)</value>
  </data>
  <data name="ShowIvTargetsDeribit.Description" xml:space="preserve">
    <value>Show volatility limit orders (special for Deribit)</value>
  </data>
  <data name="ShowIvTargetsDeribit.IsLong.Name" xml:space="preserve">
    <value>Long</value>
  </data>
  <data name="ShowIvTargetsDeribit.IsLong.Description" xml:space="preserve">
    <value>Show long orders</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.Name" xml:space="preserve">
    <value>Numerical delta Deribit (IntSer)</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.Description" xml:space="preserve">
    <value>Estimates a delta using a position profile</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.FutNominal.Name" xml:space="preserve">
    <value>Futures nominal</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.FutNominal.Description" xml:space="preserve">
    <value>Nominal value of Deribit futures (by default is 10 USD)</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.ProfileAsBtc.Name" xml:space="preserve">
    <value>Profile in BTC?</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.ProfileAsBtc.Description" xml:space="preserve">
    <value>Calculate profile as bitcoins</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesProfileDeribit.Name" xml:space="preserve">
    <value>Single series profile (Deribit)</value>
  </data>
  <data name="SingleSeriesProfileDeribit.Description" xml:space="preserve">
    <value>A single series position profile (change of currency rate is not included) as a function of BA price (special for Deribit)</value>
  </data>
  <data name="SingleSeriesProfileDeribit.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesProfileDeribit.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SingleSeriesProfileDeribit.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesProfileDeribit.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesProfileDeribit.TwoSideDelta.Name" xml:space="preserve">
    <value>Two side delta</value>
  </data>
  <data name="SingleSeriesProfileDeribit.TwoSideDelta.Description" xml:space="preserve">
    <value>Calculate delta to the left and to the right from the strike</value>
  </data>
  <data name="SingleSeriesProfileDeribit.FutNominal.Name" xml:space="preserve">
    <value>Futures nominal</value>
  </data>
  <data name="SingleSeriesProfileDeribit.FutNominal.Description" xml:space="preserve">
    <value>Nominal value of Deribit futures (by default is 10 USD)</value>
  </data>
  <data name="SingleSeriesProfileDeribit.ProfileAsBtc.Name" xml:space="preserve">
    <value>Profile in BTC?</value>
  </data>
  <data name="SingleSeriesProfileDeribit.ProfileAsBtc.Description" xml:space="preserve">
    <value>Calculate profile as bitcoins</value>
  </data>
  <data name="SingleSeriesProfileDeribit.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesProfileDeribit.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesProfileDeribit.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesProfileDeribit.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SmileImitationDeribit5.Name" xml:space="preserve">
    <value>Smile Imitation v5 (Deribit)</value>
  </data>
  <data name="SmileImitationDeribit5.Description" xml:space="preserve">
    <value>Smile imitation using application-wide user function in Global Cache</value>
  </data>
  <data name="SmileImitationDeribit5.SetIvByHands.Name" xml:space="preserve">
    <value>Set IV</value>
  </data>
  <data name="SmileImitationDeribit5.SetIvByHands.Description" xml:space="preserve">
    <value>Set IV manually</value>
  </data>
  <data name="SmileImitationDeribit5.SetSlopeByHands.Name" xml:space="preserve">
    <value>Set Skew Manually</value>
  </data>
  <data name="SmileImitationDeribit5.SetSlopeByHands.Description" xml:space="preserve">
    <value>Set skew manually</value>
  </data>
  <data name="SmileImitationDeribit5.SetShapeByHands.Name" xml:space="preserve">
    <value>Set Shape Manually</value>
  </data>
  <data name="SmileImitationDeribit5.SetShapeByHands.Description" xml:space="preserve">
    <value>Set shape manually</value>
  </data>
  <data name="SmileImitationDeribit5.GenerateTails.Name" xml:space="preserve">
    <value>Generate Tails</value>
  </data>
  <data name="SmileImitationDeribit5.GenerateTails.Description" xml:space="preserve">
    <value>Generate invisible tails</value>
  </data>
  <data name="SmileImitationDeribit5.UseLocalTemplate.Name" xml:space="preserve">
    <value>Use Local Template</value>
  </data>
  <data name="SmileImitationDeribit5.UseLocalTemplate.Description" xml:space="preserve">
    <value>Use template from global or from local cache</value>
  </data>
  <data name="SmileImitationDeribit5.IvAtmPct.Name" xml:space="preserve">
    <value>IV ATM, %</value>
  </data>
  <data name="SmileImitationDeribit5.IvAtmPct.Description" xml:space="preserve">
    <value>IV ATM (percents)</value>
  </data>
  <data name="SmileImitationDeribit5.SlopePct.Name" xml:space="preserve">
    <value>Skew, %</value>
  </data>
  <data name="SmileImitationDeribit5.SlopePct.Description" xml:space="preserve">
    <value>Skew (percents)</value>
  </data>
  <data name="SmileImitationDeribit5.ShapePct.Name" xml:space="preserve">
    <value>Shape, %</value>
  </data>
  <data name="SmileImitationDeribit5.ShapePct.Description" xml:space="preserve">
    <value>Shape (percents)</value>
  </data>
  <data name="SmileImitationDeribit5.FrozenSmileID.Name" xml:space="preserve">
    <value>Frozen Smile ID</value>
  </data>
  <data name="SmileImitationDeribit5.FrozenSmileID.Description" xml:space="preserve">
    <value>Smile ID to be used with Local Cache</value>
  </data>
  <data name="SmileImitationDeribit5.GlobalSmileID.Name" xml:space="preserve">
    <value>Global Smile ID</value>
  </data>
  <data name="SmileImitationDeribit5.GlobalSmileID.Description" xml:space="preserve">
    <value>Smile ID to be used with Global Cache</value>
  </data>
  <data name="SmileImitationDeribit5.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SmileImitationDeribit5.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SmileImitationDeribit5.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitationDeribit5.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="InteractiveConstGen.Description" xml:space="preserve">
    <value>Creates an interactive constant on a chart pane (a horizontal line).</value>
  </data>
  <data name="InteractiveLineGen.Description" xml:space="preserve">
    <value>Creates an interactive line on a chart pane.</value>
  </data>
  <data name="Ln.Mult.Name" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="Ln.Mult.Description" xml:space="preserve">
    <value>A result of logarithm may be multiplied by this coefficient ( Mult*LN(x) + Add )</value>
  </data>
  <data name="Ln.Add.Name" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Ln.Add.Description" xml:space="preserve">
    <value>A result of logarithm (after multiplication) may be shifted by this value ( Mult*LN(x) + Add )</value>
  </data>
  <data name="Multiply.Coef.Name" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="Multiply.Coef.Description" xml:space="preserve">
    <value>Every item of input is multiplied by this coefficient ( Mult*x )</value>
  </data>
  <data name="SecDivideWith.Coef.Name" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="SecDivideWith.Coef.Description" xml:space="preserve">
    <value>Every bar of input is multiplied by this coefficient ( Mult * x / Source2 )</value>
  </data>
  <data name="SecMultiply.Coef.Name" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="SecMultiply.Coef.Description" xml:space="preserve">
    <value>Every bar of input is multiplied by this coefficient ( Mult*x )</value>
  </data>
  <data name="SecMultiplyWith.Coef.Name" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="SecMultiplyWith.Coef.Description" xml:space="preserve">
    <value>Every bar of input is multiplied by this coefficient ( Mult * Source2 * x )</value>
  </data>
  <data name="AbsolutCommission.Commission.Name" xml:space="preserve">
    <value>Comission</value>
  </data>
  <data name="AbsolutCommission.Commission.Description" xml:space="preserve">
    <value>Absolute comission per 1 lot of a security</value>
  </data>
  <data name="RelativeCommisionWithMinimal.MinimalCommission.Name" xml:space="preserve">
    <value>Minimal comission</value>
  </data>
  <data name="RelativeCommisionWithMinimal.MinimalCommission.Description" xml:space="preserve">
    <value>Minimal absolute comission for a trade</value>
  </data>
  <data name="RelativeCommisionWithMinimal.CommissionPct.Name" xml:space="preserve">
    <value>Comission, %</value>
  </data>
  <data name="RelativeCommisionWithMinimal.CommissionPct.Description" xml:space="preserve">
    <value>Сomission as a percent of a volume</value>
  </data>
  <data name="RelativeCommission.CommissionPct.Name" xml:space="preserve">
    <value>Comission, %</value>
  </data>
  <data name="RelativeCommission.CommissionPct.Description" xml:space="preserve">
    <value>Сomission as a percent of a volume</value>
  </data>
  <data name="TextHandler.Text.Name" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="TextHandler.Text.Description" xml:space="preserve">
    <value>Text (string)</value>
  </data>
  <data name="AlignedSecurityHandler.Description" xml:space="preserve">
    <value>The 'Aligned Instrument’ block allows to display the same width histograms regardless of the actual number of candles in the chart.</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.Description" xml:space="preserve">
    <value>The 'All Time Trade Statistics' block creates a histogram based on the entire available time interval. [br]The histogram can be built on the number of trades, the volume of trades, the buy quantity, the sell quantity, the difference between the buy and sell quantity and the relative difference between the buy and sell quantity, % (see the 'View' parameter).</value>
  </data>
  <data name="BidAskMarketPosition.Description" xml:space="preserve">
    <value>Bid/Ask footprint shows the number of purchases and sales separately for every price step or price range, depending on value of a 'Combine Steps' parameter. If there are more purchases, the line turns green, if less, the line turns red. In case the numbers of purchases and sales are equal, the line turns yellow.</value>
  </data>
  <data name="BuysHandler.Description" xml:space="preserve">
    <value>A handler calculates statistics (amount or total volume) of a long trades</value>
  </data>
  <data name="BuysMinusSellsHandler.Description" xml:space="preserve">
    <value>A handler calculates statistics difference (amount or total volume) of a long and short trades</value>
  </data>
  <data name="DeltaMarketPosition.Description" xml:space="preserve">
    <value>Delta Footprint shows difference in the number of purchases and sales separately for every price step or price range, depending on value of a 'Combine Steps' parameter. If there are more purchases, the line turns green, if less, the line turns red. In case the numbers of sales and purchases are equal, the line turns yellow.</value>
  </data>
  <data name="InteractiveSeriesHandler.Name" xml:space="preserve">
    <value>InteractiveSeriesHandler</value>
  </data>
  <data name="InteractiveSeriesHandler.Description" xml:space="preserve">
    <value>БЕЗ ОПИСАНИЯ (кубик виден только в девелоперской версии)</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.Description" xml:space="preserve">
    <value>The 'Last Contracts Trade Statistics' block creates a histogram for the specified number of -last contracts.</value>
  </data>
  <data name="LastTradeStatisticsHandler.Description" xml:space="preserve">
    <value>The 'Latest Trade Statistics' block creates a histogram for the specified time interval.</value>
  </data>
  <data name="SellsHandler.Description" xml:space="preserve">
    <value>A handler calculates statistics (amount or total volume) of a short trades</value>
  </data>
  <data name="TradeStatisticsBarsCountHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Strings Count' block gives the number of lines of trade statistics corresponding to the selected filter.</value>
  </data>
  <data name="TradeStatisticsBarsSumHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Strings Sum' block gives a value based on the sum of the values of rows of trade statistics.</value>
  </data>
  <data name="TradeStatisticsExtendedBarsCountHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extended Strings Count 1' block displays the number of lines of trade statistics corresponding to the selected filter.</value>
  </data>
  <data name="TradeStatisticsExtendedBarsCountHandler2.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extended Strings Count 2' block displays the number of lines of trade statistics corresponding to the selected filter.</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extended Strings Sum 1' block gives a value based on the sum of the values of lines of trade statistics.</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler2.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extended Strings Sum 2' block gives a value based on the sum of the values of lines of trade statistics.</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extended Extremum Price 1' block shows the maximum value of trade statistics at the extremum price.</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler2.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extended Extremum Price 2' block shows the price at which the maximum value of the histogram was reached.</value>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extremum Price' block shows the price at which the maximum value of the histogram was reached.</value>
  </data>
  <data name="TradeStatisticsExtremumValueHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extremum Value' block shows the maximum value of trade statistics at an extreme price.</value>
  </data>
  <data name="TradeStatisticsHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics' block creates a histogram for the selected timeframe (time interval). [br]The histogram can be built on the number of trades , the volume of trades, the buy quantity, the sell quantity, the difference between the buy and sell quantity and the relative difference between the buy and sell quantity, % (see the 'View' parameter).</value>
  </data>
  <data name="TradeStatisticsCombineHandler.Description" xml:space="preserve">
    <value>The 'Stacked Trade Statistics' block summarizes the last N histograms submitted to input.</value>
  </data>
  <data name="TradeStatisticsLowerEdgeHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Lower Level' block allows you to set the cut-off data percentage for the lower level. This block is connected to the block 'Trading statistics'.</value>
  </data>
  <data name="TradeStatisticsPriceValueHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Price Value' block creates a histogram based on the selected price. Used in conjunction with the block 'Trading statistics'.</value>
  </data>
  <data name="TradeStatisticsUpperEdgeHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Upper Level' block allows you to set the percentage of data cutoff at the upper level. This block is connected to the block 'Trading statistics'.</value>
  </data>
  <data name="VolumeForPeriodHandler.Description" xml:space="preserve">
    <value>Volume for period (total or average)</value>
  </data>
  <data name="VolumeMarketPosition.Description" xml:space="preserve">
    <value>Volume footprint shows the sum of purchases and sales for every price step or price range, depending on value of a 'Combine Steps' parameter.</value>
  </data>
  <data name="ADX.Description" xml:space="preserve">
    <value>Old algo to calculate ADX: EMA of (Input1-Input2)/(Input1+Input2)</value>
  </data>
  <data name="ADX.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="ADX.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="ADXFull.Description" xml:space="preserve">
    <value>An indicator of the Average Directional Movement Index (ADX). Helps to define a possible trend direction.</value>
  </data>
  <data name="ADXFull.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="ADXFull.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="AMA.Name" xml:space="preserve">
    <value>AMA</value>
  </data>
  <data name="AMA.Description" xml:space="preserve">
    <value>The Adaptive Moving Average.</value>
  </data>
  <data name="AMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="AMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="AroonDown.Description" xml:space="preserve">
    <value>The Aroon- indicator.</value>
  </data>
  <data name="AroonDown.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="AroonDown.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="AroonUp.Description" xml:space="preserve">
    <value>The Aroon+ indicator.</value>
  </data>
  <data name="AroonUp.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="AroonUp.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="AverageTrueRange.Name" xml:space="preserve">
    <value>ATR (Old)</value>
  </data>
  <data name="AverageTrueRange.Description" xml:space="preserve">
    <value>Old algo to calculate ATR. This indicator shows a exponentially moving average value of the True Range values (TR).</value>
  </data>
  <data name="AverageTrueRange.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="AverageTrueRange.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="AverageTrueRangeNew.Name" xml:space="preserve">
    <value>ATR</value>
  </data>
  <data name="AverageTrueRangeNew.Description" xml:space="preserve">
    <value>The average True Range (ATR). This indicator shows a moving average value of the True Range values (TR).</value>
  </data>
  <data name="AverageTrueRangeNew.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="AverageTrueRangeNew.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="BollingerBands1.Description" xml:space="preserve">
    <value>The upper Bollinger band.</value>
  </data>
  <data name="BollingerBands1.Coef.Name" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="BollingerBands1.Coef.Description" xml:space="preserve">
    <value>Width of a Bollinger band</value>
  </data>
  <data name="BollingerBands1.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="BollingerBands1.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="BollingerBands2.Description" xml:space="preserve">
    <value>The lower Bollinger band.</value>
  </data>
  <data name="BollingerBands2.Coef.Name" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="BollingerBands2.Coef.Description" xml:space="preserve">
    <value>Width of a Bollinger band</value>
  </data>
  <data name="BollingerBands2.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="BollingerBands2.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="CCI.Description" xml:space="preserve">
    <value>The Commodity Channel Index (CCI) measures deviation of instrument price from its average price.</value>
  </data>
  <data name="CCI.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="CCI.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="Compress.Interval.Name" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="Compress.Interval.Description" xml:space="preserve">
    <value>Target interval in units of security timeframe. I.e. Interval=5 for timeframe H1 results in bars in timeframe H5. But Interval=4 for timeframe M2 results in timeframe M4.</value>
  </data>
  <data name="CompressAdvanced.IntervalBase.Name" xml:space="preserve">
    <value>Interval base</value>
  </data>
  <data name="CompressAdvanced.IntervalBase.Description" xml:space="preserve">
    <value>Target timeframe base (DAYS, MINUTE, SECONDS, TICK, VOLUME, PRICERANGE).</value>
  </data>
  <data name="CompressAdvanced.Interval.Name" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="CompressAdvanced.Interval.Description" xml:space="preserve">
    <value>Target interval in units of parameter 'Interval base'.</value>
  </data>
  <data name="CompressToSeconds.Interval.Name" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="CompressToSeconds.Interval.Description" xml:space="preserve">
    <value>Target interval in seconds. I.e. Interval=16 results in timeframe S16. The source must be compatible with a target timeframe.</value>
  </data>
  <data name="CuttlerRSI.Description" xml:space="preserve">
    <value>A variation called the Cutler's RSI, based on a simple moving average. This is a momentum oscillator, measuring velocity and magnitude of directional price movements.</value>
  </data>
  <data name="CuttlerRSI.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="CuttlerRSI.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="DEMA.Name" xml:space="preserve">
    <value>DEMA</value>
  </data>
  <data name="DEMA.Description" xml:space="preserve">
    <value>The Double Exponential Moving Average.</value>
  </data>
  <data name="DEMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="DEMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="DIM.Description" xml:space="preserve">
    <value>A negative direction indicator of the Average Directional Movement Index.</value>
  </data>
  <data name="DIM.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="DIM.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="DIP.Description" xml:space="preserve">
    <value>A positive direction indicator of the Average Directional Movement Index.</value>
  </data>
  <data name="DIP.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="DIP.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="EMA.Name" xml:space="preserve">
    <value>EMA</value>
  </data>
  <data name="EMA.Description" xml:space="preserve">
    <value>The Exponential Moving Average. Calculated by summing up a previous moving average value and some part of a current closing price.</value>
  </data>
  <data name="EMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="EMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="FAMA.Name" xml:space="preserve">
    <value>FAMA</value>
  </data>
  <data name="FAMA.Description" xml:space="preserve">
    <value>The Fractal Adaptive Moving Average.</value>
  </data>
  <data name="Highest.Description" xml:space="preserve">
    <value>The highest price of an instrument in a period.</value>
  </data>
  <data name="Highest.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="Highest.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="Lowest.Description" xml:space="preserve">
    <value>The lowest price of an instrument in a period.</value>
  </data>
  <data name="Lowest.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="Lowest.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="LWMA.Name" xml:space="preserve">
    <value>LWMA</value>
  </data>
  <data name="LWMA.Description" xml:space="preserve">
    <value>The Linear-Weighted Moving Average</value>
  </data>
  <data name="LWMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="LWMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="MACD.Name" xml:space="preserve">
    <value>MACD</value>
  </data>
  <data name="MACD.Description" xml:space="preserve">
    <value>The Moving Average Convergence/Divergence. This indicator spots trend changes. Shows a ratio of two moving average values of price. Parameters of movings are hardcoded (12 and 26).</value>
  </data>
  <data name="MACDEx.Description" xml:space="preserve">
    <value>The Moving Average Convergence/Divergence with calculation periods unlocked for optimization (First EMA - Second EMA).</value>
  </data>
  <data name="MACDSig.Description" xml:space="preserve">
    <value>The MACD signal line.</value>
  </data>
  <data name="MAMA.Name" xml:space="preserve">
    <value>MAMA</value>
  </data>
  <data name="MAMA.Description" xml:space="preserve">
    <value>The Mesa Adaptive Moving Average.</value>
  </data>
  <data name="MedianPrice.Description" xml:space="preserve">
    <value>This function sums up values of High and Low in the bar, and then divides this sum by 2. This value is the middle of the bar.</value>
  </data>
  <data name="Momentum.Name" xml:space="preserve">
    <value>Momentum</value>
  </data>
  <data name="Momentum.Description" xml:space="preserve">
    <value>The Momentum indicator. Calculated as Momentum Simple = C[0] - C[n], C[0] - a current period closing price. С[n] - a closing price as it was N periods ago.</value>
  </data>
  <data name="Momentum.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="Momentum.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="MomentumOsc.Description" xml:space="preserve">
    <value>The Chande Momentum Oscillator.</value>
  </data>
  <data name="MomentumOsc.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="MomentumOsc.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="MomentumPct.Description" xml:space="preserve">
    <value>The Momentum indicator, also known as Rate Of Change (ROC). Does not accept any negative values, calculated in percents as MOMENTUM = CLOSE[i] / CLOSE[i - n] * 100)</value>
  </data>
  <data name="MomentumPct.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="MomentumPct.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="ParabolicSAR.Name" xml:space="preserve">
    <value>Parabolic SAR</value>
  </data>
  <data name="ParabolicSAR.Description" xml:space="preserve">
    <value>The Parabolic Time/Price System.</value>
  </data>
  <data name="Relative.Description" xml:space="preserve">
    <value>Relative change of price starting from the beginning of some period applied in the chart. The first bar closing price is considered to be one unit and other values are based on this unit. Indicator values are presented as percents.</value>
  </data>
  <data name="RelativeForPeriod.Description" xml:space="preserve">
    <value>Relative change of price starting from the beginning of configured timeframe. Indicator values are presented as percents.</value>
  </data>
  <data name="RSI.Name" xml:space="preserve">
    <value>RSI</value>
  </data>
  <data name="RSI.Description" xml:space="preserve">
    <value>The Relative Strength Index is a momentum oscillator, measuring velocity and magnitude of directional price movements.</value>
  </data>
  <data name="RSI.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="RSI.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="SMA.Name" xml:space="preserve">
    <value>SMA</value>
  </data>
  <data name="SMA.Description" xml:space="preserve">
    <value>The Simple Moving Average is calculated by summing up incoming values, for example, instrument close prices of some period. The result is divided by a period value.</value>
  </data>
  <data name="SMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="SMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="SMMA.Name" xml:space="preserve">
    <value>SMMA</value>
  </data>
  <data name="SMMA.Description" xml:space="preserve">
    <value>The Smoothed Moving Average.</value>
  </data>
  <data name="SMMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="SMMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="StDev.Name" xml:space="preserve">
    <value>StDev</value>
  </data>
  <data name="StDev.Description" xml:space="preserve">
    <value>The Standard Deviation indicator (RMS deviation).</value>
  </data>
  <data name="StDev.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="StDev.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="StochK.Name" xml:space="preserve">
    <value>StochK</value>
  </data>
  <data name="StochK.Description" xml:space="preserve">
    <value>The Stochastic Oscillator = (Current bar closing price - Period minimum value calculated on bar minimum) / (Bar maximum value calculated on bar maximum - Bar minimum value based on bar minimum) * 100. This indicator shows how close price is to its upper and lower borders.The indicator varies in the range from 0 to 100.</value>
  </data>
  <data name="StochK.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="StochK.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="StochRSI.Description" xml:space="preserve">
    <value>Stochastics based on relative strength index. StochRSI = (Current RSI - period minimum RSI) / (Period maximum RSI - period minimum RSI) * 100.</value>
  </data>
  <data name="StochRSI.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="StochRSI.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="SumForTimeFrameHandler.Description" xml:space="preserve">
    <value>Sum for time frame</value>
  </data>
  <data name="SummFor.Description" xml:space="preserve">
    <value>Sums up incoming values, for example, this indicator can sum up instrument close prices in some period.</value>
  </data>
  <data name="SummFor.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="SummFor.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="TEMA.Name" xml:space="preserve">
    <value>TEMA</value>
  </data>
  <data name="TEMA.Description" xml:space="preserve">
    <value>The Triple Exponential Moving Average.</value>
  </data>
  <data name="TEMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="TEMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="TestCanvasPaneHandler.Name" xml:space="preserve">
    <value>Test Canvas Pane Handler</value>
  </data>
  <data name="TestCanvasPaneHandler.Description" xml:space="preserve">
    <value>Test handler to check interaction with a CanvasPane. It is visible in developer build only.</value>
  </data>
  <data name="TRIX.Name" xml:space="preserve">
    <value>TRIX</value>
  </data>
  <data name="TRIX.Description" xml:space="preserve">
    <value>The Triple Exponential Average.</value>
  </data>
  <data name="TRIX.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="TRIX.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="TrueRange.Description" xml:space="preserve">
    <value>The True Range (TR) is the biggest one from these three values: difference between current maximum and minimum; difference between a previous closing price and a current maximum; difference between a previous closing price and a current minimum.</value>
  </data>
  <data name="TypicalPrice.Description" xml:space="preserve">
    <value>The Typical Price is an average price based on High, Low and Close. The result is called an average or typical price.</value>
  </data>
  <data name="Volatility.Name" xml:space="preserve">
    <value>Variation</value>
  </data>
  <data name="Volatility.Description" xml:space="preserve">
    <value>Variation: average of squared difference of values and corresponding SMA.</value>
  </data>
  <data name="Volatility.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="Volatility.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="ZeroLagTEMA.Description" xml:space="preserve">
    <value>The Triple Exponential Moving Average with a limited lag. </value>
  </data>
  <data name="ZeroLagTEMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="ZeroLagTEMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="AgentCurrentPosition.Description" xml:space="preserve">
    <value>This block shows a calculated position of an agent.</value>
  </data>
  <data name="CurrentPosition.Description" xml:space="preserve">
    <value>Shows a total position involving an instrument. In laboratory mode this block shows a calculated position of a script. In agent mode this block shows a value of the Current column(in the Positions window) for tradable sources.</value>
  </data>
  <data name="EstimatedMoney.Description" xml:space="preserve">
    <value>Shows your portfolio estimation. In agent mode portfolio estimation is received from your account. In laboratory mode portfolio estimation is calculated according the following formula: Portfolio Estimation = money + positions.</value>
  </data>
  <data name="FreeMoney.Description" xml:space="preserve">
    <value>Shows free money in your account. In agent mode information about free money is received from your account. In laboratory mode information about free money is calculated according to the following formula: Free Money = money - (minus)positions - (minus)money blocked in orders.</value>
  </data>
  <data name="NumDaysProfit.Description" xml:space="preserve">
    <value>Calculates profit involving an instrument received during a specified number of days.</value>
  </data>
  <data name="NumDaysProfit.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="NumDaysProfit.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="NumMinutesProfit.Description" xml:space="preserve">
    <value>Calculates profit involving an instrument received during a specified number of minutes.</value>
  </data>
  <data name="NumMinutesProfit.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="NumMinutesProfit.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="NumPositionsProfit.Description" xml:space="preserve">
    <value>Calculates profit involving an instrument received during a specified number of positions.</value>
  </data>
  <data name="NumPositionsProfit.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="NumPositionsProfit.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="WholeDayProfit.Description" xml:space="preserve">
    <value>Calculates profit involving an instrument received in all trades of the day.</value>
  </data>
  <data name="WholeTimeProfit.Description" xml:space="preserve">
    <value>Calculates profit involving an instrument received in all trades of the whole period.</value>
  </data>
  <data name="HoldSignalForNBars.Description" xml:space="preserve">
    <value>Holds a signal TRUE for some number of bars.</value>
  </data>
  <data name="HoldSignalForNBars.NBars.Description" xml:space="preserve">
    <value>Hold signal for N bars</value>
  </data>
  <data name="InteractiveConstGen.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="InteractiveConstGen.Value.Description" xml:space="preserve">
    <value>Value of a constant</value>
  </data>
  <data name="InteractiveConstGen.PaneSide.Name" xml:space="preserve">
    <value>Pane side</value>
  </data>
  <data name="InteractiveConstGen.PaneSide.Description" xml:space="preserve">
    <value>Pane side (vertical axis)</value>
  </data>
  <data name="InteractiveConstGen.Color.Name" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="InteractiveConstGen.Color.Description" xml:space="preserve">
    <value>Color in hexadecimal RGB format (i.e. #ff0000 - red, #00ff00 - green, #0000ff - blue)</value>
  </data>
  <data name="InteractiveConstGen.Thickness.Name" xml:space="preserve">
    <value>Thickness</value>
  </data>
  <data name="InteractiveConstGen.Thickness.Description" xml:space="preserve">
    <value>Thickness of a line</value>
  </data>
  <data name="InteractiveLineGen.PaneSide.Name" xml:space="preserve">
    <value>Pane side</value>
  </data>
  <data name="InteractiveLineGen.PaneSide.Description" xml:space="preserve">
    <value>Pane side (vertical axis)</value>
  </data>
  <data name="InteractiveLineGen.Color.Name" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="InteractiveLineGen.Color.Description" xml:space="preserve">
    <value>Color in hexadecimal RGB format (i.e. #ff0000 - red, #00ff00 - green, #0000ff - blue)</value>
  </data>
  <data name="InteractiveLineGen.Thickness.Name" xml:space="preserve">
    <value>Thickness</value>
  </data>
  <data name="InteractiveLineGen.Thickness.Description" xml:space="preserve">
    <value>Thickness of a line</value>
  </data>
  <data name="InteractiveLineGen.FirstValue.Name" xml:space="preserve">
    <value>First value</value>
  </data>
  <data name="InteractiveLineGen.FirstValue.Description" xml:space="preserve">
    <value>Y value of a first point</value>
  </data>
  <data name="InteractiveLineGen.SecondValue.Name" xml:space="preserve">
    <value>Second value</value>
  </data>
  <data name="InteractiveLineGen.SecondValue.Description" xml:space="preserve">
    <value>Y value of a second point</value>
  </data>
  <data name="MessageHandler.Description" xml:space="preserve">
    <value>When input becomes TRUE a handler sends user message to a TSLab log.</value>
  </data>
  <data name="TestCanvasPaneHandler.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="TestCanvasPaneHandler.Value.Description" xml:space="preserve">
    <value>Value of a constant</value>
  </data>
  <data name="BalancedPrice.Description" xml:space="preserve">
    <value>An average position entry price.</value>
  </data>
  <data name="BarsHeld.Description" xml:space="preserve">
    <value>Returns the number of bars to hold the position.</value>
  </data>
  <data name="CalcEntryPrice.Description" xml:space="preserve">
    <value>The calculated price of the trade at which the position was opened. In the laboratory mode it is equal to the opening price of the bar following the signal.</value>
  </data>
  <data name="DaysInPosition.Description" xml:space="preserve">
    <value>The number of days in position.</value>
  </data>
  <data name="DrowdownCount.Description" xml:space="preserve">
    <value>Calculates the number of consecutive loss positions.</value>
  </data>
  <data name="EntryDate.Description" xml:space="preserve">
    <value>A date of position entry presented as number in YYMMDD format.</value>
  </data>
  <data name="EntryPrice.Description" xml:space="preserve">
    <value>In the laboratory mode, the price of the deal at which the position was opened.
In real trading mode, the average price of transactions for the placed order.
If the transaction prices are unknown, the price is taken from the order. If the order was placed with the "by market" type, then the price of 0 or the price of the upper or lower limit (for futures) for the instrument is taken.</value>
  </data>
  <data name="EntryTime.Description" xml:space="preserve">
    <value>Time of  position entry presented as number in HHMMSS format.</value>
  </data>
  <data name="HasLongPositionActive.Description" xml:space="preserve">
    <value>The Boolean function verifying if there is an active long position.</value>
  </data>
  <data name="HasPositionActive.Description" xml:space="preserve">
    <value>The Boolean function verifying that there is an active position.</value>
  </data>
  <data name="HasShortPositionActive.Description" xml:space="preserve">
    <value>The Boolean function verifying that there is an active short position.</value>
  </data>
  <data name="HasTwoLoss.Description" xml:space="preserve">
    <value>2 or more consecutive loss positions.</value>
  </data>
  <data name="IsItLossAtLastPosition.Description" xml:space="preserve">
    <value>Check if a closed position was unprofitable.</value>
  </data>
  <data name="LastClosedIsLong.Description" xml:space="preserve">
    <value>The latest position has been closed and it was long.</value>
  </data>
  <data name="LastClosedIsLong2.Description" xml:space="preserve">
    <value>The Boolean function verifying that the latest closed position was long.</value>
  </data>
  <data name="LastClosedIsShort.Description" xml:space="preserve">
    <value>The latest position has been closed and it was short.</value>
  </data>
  <data name="LastClosedIsShort2.Description" xml:space="preserve">
    <value>The Boolean function verifying that the latest closed position was short.</value>
  </data>
  <data name="LastClosedNamePositionExitDate.Description" xml:space="preserve">
    <value>The exit date of the latest closed named position (a number with format YYMMDD).</value>
  </data>
  <data name="LastClosedNamePositionExitDate.Name.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LastClosedNamePositionExitDate.Name.Description" xml:space="preserve">
    <value>Close signal name</value>
  </data>
  <data name="LastClosedNamePositionExitTime.Description" xml:space="preserve">
    <value>The exit time of the latest closed named position (a number with format HHMMSS).</value>
  </data>
  <data name="LastClosedNamePositionExitTime.Name.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LastClosedNamePositionExitTime.Name.Description" xml:space="preserve">
    <value>Close signal name</value>
  </data>
  <data name="LastClosedNamePositionExitPrice.Description" xml:space="preserve">
    <value>The exit price of the latest closed named position.</value>
  </data>
  <data name="LastClosedNamePositionExitPrice.Name.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LastClosedNamePositionExitPrice.Name.Description" xml:space="preserve">
    <value>Close signal name</value>
  </data>
  <data name="LastClosedPositionDate.Description" xml:space="preserve">
    <value>The date of the latest closed position (a number with format YYMMDD).</value>
  </data>
  <data name="LastClosedPositionExitDate.Description" xml:space="preserve">
    <value>The exit date of the latest closed position (a number with format YYMMDD).</value>
  </data>
  <data name="LastClosedPositionExitTime.Description" xml:space="preserve">
    <value>The exit time of the latest closed position (a number with format HHMMSS).</value>
  </data>
  <data name="LastClosedPositionTime.Description" xml:space="preserve">
    <value>The time of the latest closed position (a number with format HHMMSS).</value>
  </data>
  <data name="LastExitPrice.Description" xml:space="preserve">
    <value>The price of the latest exit.</value>
  </data>
  <data name="MAE.Name" xml:space="preserve">
    <value>MAE</value>
  </data>
  <data name="MAE.Description" xml:space="preserve">
    <value>Maximum Adverse Excursion per one contract/lot.</value>
  </data>
  <data name="MAEPct.Description" xml:space="preserve">
    <value>Maximum Adverse Excursion per one contract/lot (as percents).</value>
  </data>
  <data name="Median.Description" xml:space="preserve">
    <value>Shows deviation of the income curved line from the median.</value>
  </data>
  <data name="MFE.Name" xml:space="preserve">
    <value>MFE</value>
  </data>
  <data name="MFE.Description" xml:space="preserve">
    <value>Maximum Favorable Excursion per one contract/lot.</value>
  </data>
  <data name="MFEPct.Description" xml:space="preserve">
    <value>Maximum Favorable Excursion per one contract/lot (as percents).</value>
  </data>
  <data name="MinutesInPosition.Description" xml:space="preserve">
    <value>The number of minutes in position.</value>
  </data>
  <data name="PosActiveNameExit.Description" xml:space="preserve">
    <value>The parameter allows to give name the block Position Close. The value of this block is true if the last close for the instrument had this name.</value>
  </data>
  <data name="PosActiveNameExit.Name.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PosActiveNameExit.Name.Description" xml:space="preserve">
    <value>Close signal name</value>
  </data>
  <data name="PositionChangeEntryBarNumber.Description" xml:space="preserve">
    <value>Shows entry bar number of a changed complex position.</value>
  </data>
  <data name="PositionChangeEntryPrice.Description" xml:space="preserve">
    <value>Shows last entry price of a changed complex position. If none handler returns zero.</value>
  </data>
  <data name="PositionChangeExitBarNumber.Description" xml:space="preserve">
    <value>Shows exit bar number of a changed complex position.</value>
  </data>
  <data name="PositionChangeExitPrice.Description" xml:space="preserve">
    <value>Shows last exit price of a changed complex position. If none handler returns zero.</value>
  </data>
  <data name="PositionEntryBarNumber.Description" xml:space="preserve">
    <value>Shows a complex position entry bar number.</value>
  </data>
  <data name="PositionExitBarNumber.Description" xml:space="preserve">
    <value>Shows a complex position exit bar number.</value>
  </data>
  <data name="PositionIsVirtualClosedHandler.Description" xml:space="preserve">
    <value>Is position has virtual close (calculated only)?</value>
  </data>
  <data name="PositionIsVirtualHandler.Description" xml:space="preserve">
    <value>A handler returns TRUE if input position is virtual.</value>
  </data>
  <data name="PositionShares.Description" xml:space="preserve">
    <value>Returns initial position size</value>
  </data>
  <data name="PositionSharesByBar.Description" xml:space="preserve">
    <value>Returns current size of position in lots at every bar.</value>
  </data>
  <data name="Profit.Description" xml:space="preserve">
    <value>Profit (loss) given by the position in absolute values. Calculated per one contract/lot.</value>
  </data>
  <data name="ProfitPct.Description" xml:space="preserve">
    <value>Profit (loss) given by the position in percentage valu.Calculated per one contract/lot.</value>
  </data>
  <data name="TrailStop.Description" xml:space="preserve">
    <value>This block is identical to 'Trailing stop absolute', but its parameters are in the percentage value.</value>
  </data>
  <data name="TrailStopAbs.Description" xml:space="preserve">
    <value>The trailing stop, the values are given in absolute numbers. The block has 3 parameters describing 2 modes of functioning. [br]The 1st mode: Stop-loss is described as stop-loss, which sets the maximum fall (in case of short - growth) of the price you can accept. This fall is set in numbers. [br]The 2nd mode is selected if the price grows (in case of short the price falls) according to the value set in the parameter 'Enable Trail'. In other word he profit is being trailed. [br]The parameter 'Use the Calculated Price' allows to calculate Stop from the calculated opening price. In the Laboratory mode this is the opening price of the bar following the signal. In the real trade mode this is the price of position opening. Disabling this parameter causes using the real price received during the trading session. [br]The calculated price cannot be calculated if the box 'By Market at Fixed Price' is selected and slippage higher than 0 is set.</value>
  </data>
  <data name="BuysHandler.QuantityMode.Name" xml:space="preserve">
    <value>Quantity units</value>
  </data>
  <data name="BuysHandler.QuantityMode.Description" xml:space="preserve">
    <value>Market volume quantity units (shares, lots, trades count)</value>
  </data>
  <data name="BuysMinusSellsHandler.QuantityMode.Name" xml:space="preserve">
    <value>Quantity units</value>
  </data>
  <data name="BuysMinusSellsHandler.QuantityMode.Description" xml:space="preserve">
    <value>Market volume quantity units (shares, lots, trades count)</value>
  </data>
  <data name="Compress.Shift.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="Compress.Shift.Description" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="CompressAdvanced.Shift.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="CompressAdvanced.Shift.Description" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="Decompres.Method.Name" xml:space="preserve">
    <value>Decompress algorythm</value>
  </data>
  <data name="Decompres.Method.Description" xml:space="preserve">
    <value>Decompress algorythm</value>
  </data>
  <data name="DecompresBool.Method.Name" xml:space="preserve">
    <value>Decompress algorythm</value>
  </data>
  <data name="DecompresBool.Method.Description" xml:space="preserve">
    <value>Decompress algorythm</value>
  </data>
  <data name="FAMA.FastLimit.Name" xml:space="preserve">
    <value>Fast limit</value>
  </data>
  <data name="FAMA.FastLimit.Description" xml:space="preserve">
    <value>Fast limit parameter</value>
  </data>
  <data name="FAMA.SlowLimit.Name" xml:space="preserve">
    <value>Slow limit</value>
  </data>
  <data name="FAMA.SlowLimit.Description" xml:space="preserve">
    <value>Slow limit parameter</value>
  </data>
  <data name="InteractiveConstGen.IsNeedRecalculate.Name" xml:space="preserve">
    <value>Recalculate agent?</value>
  </data>
  <data name="InteractiveConstGen.IsNeedRecalculate.Description" xml:space="preserve">
    <value>Recalculate agent when line changes its parameters</value>
  </data>
  <data name="InteractiveLineGen.Mode.Name" xml:space="preserve">
    <value>Line type</value>
  </data>
  <data name="InteractiveLineGen.Mode.Description" xml:space="preserve">
    <value>Line type (finit, infinit, ray)</value>
  </data>
  <data name="InteractiveLineGen.FirstDateTime.Name" xml:space="preserve">
    <value>First date</value>
  </data>
  <data name="InteractiveLineGen.FirstDateTime.Description" xml:space="preserve">
    <value>Date of a first point</value>
  </data>
  <data name="InteractiveLineGen.SecondDateTime.Name" xml:space="preserve">
    <value>Second date</value>
  </data>
  <data name="InteractiveLineGen.SecondDateTime.Description" xml:space="preserve">
    <value>Date of a second point</value>
  </data>
  <data name="InteractiveLineGen.IsNeedRecalculate.Name" xml:space="preserve">
    <value>Recalculate agent?</value>
  </data>
  <data name="InteractiveLineGen.IsNeedRecalculate.Description" xml:space="preserve">
    <value>Recalculate agent when line changes its parameters</value>
  </data>
  <data name="MACDEx.Period1.Name" xml:space="preserve">
    <value>First period</value>
  </data>
  <data name="MACDEx.Period1.Description" xml:space="preserve">
    <value>First EMA period</value>
  </data>
  <data name="MACDEx.Period2.Name" xml:space="preserve">
    <value>Second period</value>
  </data>
  <data name="MACDEx.Period2.Description" xml:space="preserve">
    <value>Second EMA period</value>
  </data>
  <data name="MACDSig.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="MACDSig.Period.Description" xml:space="preserve">
    <value>Signal EMA period</value>
  </data>
  <data name="MAMA.FastLimit.Name" xml:space="preserve">
    <value>Fast limit</value>
  </data>
  <data name="MAMA.FastLimit.Description" xml:space="preserve">
    <value>Fast limit parameter</value>
  </data>
  <data name="MAMA.SlowLimit.Name" xml:space="preserve">
    <value>Slow limit</value>
  </data>
  <data name="MAMA.SlowLimit.Description" xml:space="preserve">
    <value>Slow limit parameter</value>
  </data>
  <data name="MessageHandler.Message.Name" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="MessageHandler.Message.Description" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="MessageHandler.Tag.Name" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="MessageHandler.Tag.Description" xml:space="preserve">
    <value>Additional user tag</value>
  </data>
  <data name="MessageHandler.Type.Name" xml:space="preserve">
    <value>Importance</value>
  </data>
  <data name="MessageHandler.Type.Description" xml:space="preserve">
    <value>Message importance (Info, Warning, Error)</value>
  </data>
  <data name="ParabolicSAR.AccelerationStart.Name" xml:space="preserve">
    <value>Acceleration start</value>
  </data>
  <data name="ParabolicSAR.AccelerationStart.Description" xml:space="preserve">
    <value>Initial acceleration</value>
  </data>
  <data name="ParabolicSAR.AccelerationStep.Name" xml:space="preserve">
    <value>Acceleration step</value>
  </data>
  <data name="ParabolicSAR.AccelerationStep.Description" xml:space="preserve">
    <value>Step to increase acceleration</value>
  </data>
  <data name="ParabolicSAR.AccelerationMax.Name" xml:space="preserve">
    <value>Acceleration max</value>
  </data>
  <data name="ParabolicSAR.AccelerationMax.Description" xml:space="preserve">
    <value>Acceleration limit</value>
  </data>
  <data name="RelativeForPeriod.TimeFrame.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="RelativeForPeriod.TimeFrame.Description" xml:space="preserve">
    <value>Timeframe (format D.HH:MM:SS)</value>
  </data>
  <data name="SellsHandler.QuantityMode.Name" xml:space="preserve">
    <value>Quantity units</value>
  </data>
  <data name="SellsHandler.QuantityMode.Description" xml:space="preserve">
    <value>Market volume quantity units (shares, lots, trades count)</value>
  </data>
  <data name="SessionClose.Session.Name" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionClose.Session.Description" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionHigh.Session.Name" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionHigh.Session.Description" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionLow.Session.Name" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionLow.Session.Description" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionOpen.Session.Name" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionOpen.Session.Description" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SMMA.Shift.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="SMMA.Shift.Description" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="SumForTimeFrameHandler.TimeFrame.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="SumForTimeFrameHandler.TimeFrame.Description" xml:space="preserve">
    <value>Timeframe (format D.HH:MM:SS)</value>
  </data>
  <data name="VolumeForPeriodHandler.TimeFrame.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="VolumeForPeriodHandler.TimeFrame.Description" xml:space="preserve">
    <value>Timeframe (integer value in units of parameter 'Timeframe units')</value>
  </data>
  <data name="VolumeForPeriodHandler.TimeFrameUnit.Name" xml:space="preserve">
    <value>Timeframe units</value>
  </data>
  <data name="VolumeForPeriodHandler.TimeFrameUnit.Description" xml:space="preserve">
    <value>Timeframe units (second, minute, hour, day)</value>
  </data>
  <data name="VolumeForPeriodHandler.ValueMode.Name" xml:space="preserve">
    <value>Processing algo</value>
  </data>
  <data name="VolumeForPeriodHandler.ValueMode.Description" xml:space="preserve">
    <value>Processing algo (sum or average)</value>
  </data>
  <data name="NumDaysProfit.ProfitKind.Name" xml:space="preserve">
    <value>Profit kind</value>
  </data>
  <data name="NumDaysProfit.ProfitKind.Description" xml:space="preserve">
    <value>Profit kind (fixed or unfixed)</value>
  </data>
  <data name="NumMinutesProfit.ProfitKind.Name" xml:space="preserve">
    <value>Profit kind</value>
  </data>
  <data name="NumMinutesProfit.ProfitKind.Description" xml:space="preserve">
    <value>Profit kind (fixed or unfixed)</value>
  </data>
  <data name="NumPositionsProfit.ProfitKind.Name" xml:space="preserve">
    <value>Profit kind</value>
  </data>
  <data name="NumPositionsProfit.ProfitKind.Description" xml:space="preserve">
    <value>Profit kind (fixed or unfixed)</value>
  </data>
  <data name="RelativeCommisionWithMinimal.MarginPct.Name" xml:space="preserve">
    <value>Margin, %</value>
  </data>
  <data name="RelativeCommisionWithMinimal.MarginPct.Description" xml:space="preserve">
    <value>Margin to open or to keep position (as percents)</value>
  </data>
  <data name="RelativeCommission.MarginPct.Name" xml:space="preserve">
    <value>Margin, %</value>
  </data>
  <data name="RelativeCommission.MarginPct.Description" xml:space="preserve">
    <value>Margin to open or to keep position (as percents)</value>
  </data>
  <data name="WholeDayProfit.SessionStart.Name" xml:space="preserve">
    <value>Session start</value>
  </data>
  <data name="WholeDayProfit.SessionStart.Description" xml:space="preserve">
    <value>Trading session start (format HH:MM:SS)</value>
  </data>
  <data name="WholeDayProfit.ProfitKind.Name" xml:space="preserve">
    <value>Profit kind</value>
  </data>
  <data name="WholeDayProfit.ProfitKind.Description" xml:space="preserve">
    <value>Profit kind (fixed or unfixed)</value>
  </data>
  <data name="WholeTimeProfit.ProfitKind.Name" xml:space="preserve">
    <value>Profit kind</value>
  </data>
  <data name="WholeTimeProfit.ProfitKind.Description" xml:space="preserve">
    <value>Profit kind (fixed or unfixed)</value>
  </data>
  <data name="TrailStop.StopLoss.Name" xml:space="preserve">
    <value>Stop loss</value>
  </data>
  <data name="TrailStop.StopLoss.Description" xml:space="preserve">
    <value>Initial stop loss</value>
  </data>
  <data name="TrailStop.TrailEnable.Name" xml:space="preserve">
    <value>Trail enable</value>
  </data>
  <data name="TrailStop.TrailEnable.Description" xml:space="preserve">
    <value>Where to start actual trailing</value>
  </data>
  <data name="TrailStop.TrailLoss.Name" xml:space="preserve">
    <value>Trail loss</value>
  </data>
  <data name="TrailStop.TrailLoss.Description" xml:space="preserve">
    <value>Trail loss</value>
  </data>
  <data name="TrailStop.UseCalcPrice.Name" xml:space="preserve">
    <value>Use calc price</value>
  </data>
  <data name="TrailStop.UseCalcPrice.Description" xml:space="preserve">
    <value>Use calculated price</value>
  </data>
  <data name="TrailStopAbs.StopLoss.Name" xml:space="preserve">
    <value>Stop loss</value>
  </data>
  <data name="TrailStopAbs.StopLoss.Description" xml:space="preserve">
    <value>Initial stop loss</value>
  </data>
  <data name="TrailStopAbs.TrailEnable.Name" xml:space="preserve">
    <value>Trail enable</value>
  </data>
  <data name="TrailStopAbs.TrailEnable.Description" xml:space="preserve">
    <value>Where to start actual trailing</value>
  </data>
  <data name="TrailStopAbs.TrailLoss.Name" xml:space="preserve">
    <value>Trail loss</value>
  </data>
  <data name="TrailStopAbs.TrailLoss.Description" xml:space="preserve">
    <value>Trail loss</value>
  </data>
  <data name="TrailStopAbs.UseCalcPrice.Name" xml:space="preserve">
    <value>Use calc price</value>
  </data>
  <data name="TrailStopAbs.UseCalcPrice.Description" xml:space="preserve">
    <value>Use calculated price</value>
  </data>
  <data name="TemplateLibrary.Pane" xml:space="preserve">
    <value>Chart pane</value>
    <comment>ok Панель графика</comment>
  </data>
  <data name="AlignedSecurityHandler.TimeFrame.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="AlignedSecurityHandler.TimeFrame.Description" xml:space="preserve">
    <value>Timeframe (integer value in units of parameter 'Timeframe units')</value>
  </data>
  <data name="AlignedSecurityHandler.TimeFrameUnit.Name" xml:space="preserve">
    <value>Timeframe units</value>
  </data>
  <data name="AlignedSecurityHandler.TimeFrameUnit.Description" xml:space="preserve">
    <value>Timeframe units (second, minute, hour, day)</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.WidthPercent.Name" xml:space="preserve">
    <value>Width, %</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.WidthPercent.Description" xml:space="preserve">
    <value>A width of a hystogram relative to a width of a chart pane.</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.CombinePricesCount.Name" xml:space="preserve">
    <value>Combine price steps</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.CombinePricesCount.Description" xml:space="preserve">
    <value>How many price steps should be grouped together.</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.Kind.Description" xml:space="preserve">
    <value>Kind of a trade statistics (trades count, trade volume, buy count, sell count, buy and sell difference, relative buy and sell difference).</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.ContractsCount.Name" xml:space="preserve">
    <value>Contracts count</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.ContractsCount.Description" xml:space="preserve">
    <value>A parameter to set contracts count to be used for trade statistics.</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.CombinePricesCount.Name" xml:space="preserve">
    <value>Combine price steps</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.CombinePricesCount.Description" xml:space="preserve">
    <value>How many price steps should be grouped together.</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.Kind.Description" xml:space="preserve">
    <value>Kind of a trade statistics (trades count, trade volume, buy count, sell count, buy and sell difference, relative buy and sell difference).</value>
  </data>
  <data name="LastTradeStatisticsHandler.TimeFrame.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="LastTradeStatisticsHandler.TimeFrame.Description" xml:space="preserve">
    <value>Timeframe (integer value in units of parameter 'Timeframe units')</value>
  </data>
  <data name="LastTradeStatisticsHandler.TimeFrameUnit.Name" xml:space="preserve">
    <value>Timeframe units</value>
  </data>
  <data name="LastTradeStatisticsHandler.TimeFrameUnit.Description" xml:space="preserve">
    <value>Timeframe units (second, minute, hour, day)</value>
  </data>
  <data name="LastTradeStatisticsHandler.CombinePricesCount.Name" xml:space="preserve">
    <value>Combine price steps</value>
  </data>
  <data name="LastTradeStatisticsHandler.CombinePricesCount.Description" xml:space="preserve">
    <value>How many price steps should be grouped together.</value>
  </data>
  <data name="LastTradeStatisticsHandler.Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="LastTradeStatisticsHandler.Kind.Description" xml:space="preserve">
    <value>Kind of a trade statistics (trades count, trade volume, buy count, sell count, buy and sell difference, relative buy and sell difference).</value>
  </data>
  <data name="TradeStatisticsBarsCountHandler.TrimValue.Name" xml:space="preserve">
    <value>Trim value</value>
  </data>
  <data name="TradeStatisticsBarsCountHandler.TrimValue.Description" xml:space="preserve">
    <value>Trim value.</value>
  </data>
  <data name="TradeStatisticsBarsCountHandler.TrimComparisonMode.Name" xml:space="preserve">
    <value>Comparison operator</value>
  </data>
  <data name="TradeStatisticsBarsCountHandler.TrimComparisonMode.Description" xml:space="preserve">
    <value>Comparison operator for trimming (greater, greater or equal, less, less or equal, equal, not equal).</value>
  </data>
  <data name="TradeStatisticsBarsSumHandler.TrimValue.Name" xml:space="preserve">
    <value>Trim value</value>
  </data>
  <data name="TradeStatisticsBarsSumHandler.TrimValue.Description" xml:space="preserve">
    <value>Trim value.</value>
  </data>
  <data name="TradeStatisticsBarsSumHandler.TrimComparisonMode.Name" xml:space="preserve">
    <value>Comparison operator</value>
  </data>
  <data name="TradeStatisticsBarsSumHandler.TrimComparisonMode.Description" xml:space="preserve">
    <value>Comparison operator for trimming (greater, greater or equal, less, less or equal, equal, not equal).</value>
  </data>
  <data name="TradeStatisticsExtendedBarsCountHandler.TrimComparisonMode.Name" xml:space="preserve">
    <value>Comparison operator</value>
  </data>
  <data name="TradeStatisticsExtendedBarsCountHandler.TrimComparisonMode.Description" xml:space="preserve">
    <value>Comparison operator for trimming (greater, greater or equal, less, less or equal, equal, not equal).</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler.Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler.Kind.Description" xml:space="preserve">
    <value>Kind of a trade statistics (trades count, trade volume, buy count, sell count, buy and sell difference, relative buy and sell difference).</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler.TrimComparisonMode.Name" xml:space="preserve">
    <value>Comparison operator</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler.TrimComparisonMode.Description" xml:space="preserve">
    <value>Comparison operator for trimming (greater, greater or equal, less, less or equal, equal, not equal).</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler2.Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler2.Kind.Description" xml:space="preserve">
    <value>Kind of a trade statistics (trades count, trade volume, buy count, sell count, buy and sell difference, relative buy and sell difference).</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler.PriceMode.Name" xml:space="preserve">
    <value>Extremum kind</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler.PriceMode.Description" xml:space="preserve">
    <value>Extremum kind (minimum, maximum).</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler2.PriceMode.Name" xml:space="preserve">
    <value>Extremum kind</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler2.PriceMode.Description" xml:space="preserve">
    <value>Extremum kind (minimum, maximum).</value>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.TrimValueMode.Name" xml:space="preserve">
    <value>Trim value mode</value>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.TrimValueMode.Description" xml:space="preserve">
    <value />
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.TrimValue.Name" xml:space="preserve">
    <value>Trim value</value>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.TrimValue.Description" xml:space="preserve">
    <value>Trim value.</value>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.PriceMode.Name" xml:space="preserve">
    <value>Extremum kind</value>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.PriceMode.Description" xml:space="preserve">
    <value>Extremum kind (minimum, maximum).</value>
  </data>
  <data name="TradeStatisticsHandler.TimeFrameKind.Name" xml:space="preserve">
    <value>Time frame kind</value>
  </data>
  <data name="TradeStatisticsHandler.TimeFrameKind.Description" xml:space="preserve">
    <value>Time frame kind (from now to past, from midnight to now).</value>
  </data>
  <data name="TradeStatisticsHandler.StartTime.Name" xml:space="preserve">
    <value>Start time</value>
  </data>
  <data name="TradeStatisticsHandler.StartTime.Description" xml:space="preserve">
    <value>Start building a profile.</value>
  </data>
  <data name="TradeStatisticsHandler.TimeFrame.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="TradeStatisticsHandler.TimeFrame.Description" xml:space="preserve">
    <value>Timeframe (integer value in units of parameter 'Timeframe units')</value>
  </data>
  <data name="TradeStatisticsHandler.TimeFrameUnit.Name" xml:space="preserve">
    <value>Timeframe units</value>
  </data>
  <data name="TradeStatisticsHandler.TimeFrameUnit.Description" xml:space="preserve">
    <value>Timeframe units (second, minute, hour, day)</value>
  </data>
  <data name="TradeStatisticsHandler.CombinePricesCount.Name" xml:space="preserve">
    <value>Combine price steps</value>
  </data>
  <data name="TradeStatisticsHandler.CombinePricesCount.Description" xml:space="preserve">
    <value>How many price steps should be grouped together.</value>
  </data>
  <data name="TradeStatisticsHandler.Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="TradeStatisticsHandler.Kind.Description" xml:space="preserve">
    <value>Kind of a trade statistics (trades count, trade volume, buy count, sell count, buy and sell difference, relative buy and sell difference).</value>
  </data>
  <data name="TradeStatisticsLowerEdgeHandler.TrimLevelPercent.Name" xml:space="preserve">
    <value>Trim level, %</value>
  </data>
  <data name="TradeStatisticsLowerEdgeHandler.TrimLevelPercent.Description" xml:space="preserve">
    <value>Trim level (as percents).</value>
  </data>
  <data name="TradeStatisticsUpperEdgeHandler.TrimLevelPercent.Name" xml:space="preserve">
    <value>Trim level, %</value>
  </data>
  <data name="TradeStatisticsUpperEdgeHandler.TrimLevelPercent.Description" xml:space="preserve">
    <value>Trim level (as percents).</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.WidthPercent.Name" xml:space="preserve">
    <value>Width, %</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.WidthPercent.Description" xml:space="preserve">
    <value>A width of a hystogram relative to a width of a chart pane.</value>
  </data>
  <data name="LastTradeStatisticsHandler.WidthPercent.Name" xml:space="preserve">
    <value>Width, %</value>
  </data>
  <data name="LastTradeStatisticsHandler.WidthPercent.Description" xml:space="preserve">
    <value>A width of a hystogram relative to a width of a chart pane.</value>
  </data>
  <data name="TradeStatisticsHandler.WidthPercent.Name" xml:space="preserve">
    <value>Width, %</value>
  </data>
  <data name="TradeStatisticsHandler.WidthPercent.Description" xml:space="preserve">
    <value>A width of a hystogram relative to a width of a chart pane.</value>
  </data>
  <data name="Quantity.Name" xml:space="preserve">
    <value>Position size</value>
  </data>
  <data name="Direction.Name" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="SpecifiedQuantityPriceAtTradeHandler.Name" xml:space="preserve">
    <value>Specified quantity price at trade</value>
  </data>
  <data name="SpecifiedQuantityPriceAtTradeHandler.Description" xml:space="preserve">
    <value>Specified quantity price at trade</value>
  </data>
  <data name="SpecifiedQuantityPriceAtTradeHandler.Quantity.Name" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="SpecifiedQuantityPriceAtTradeHandler.Quantity.Description" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="SpecifiedQuantityPriceAtTradeHandler.Direction.Name" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="SpecifiedQuantityPriceAtTradeHandler.Direction.Description" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="BarsCountForValuesSumHandler.Name" xml:space="preserve">
    <value>Number of bars for the sum of values</value>
  </data>
  <data name="BarsCountForValuesSumHandler.Description" xml:space="preserve">
    <value>Number of bars for the sum of values</value>
  </data>
  <data name="BarsCountForValuesSumHandler.ValuesSum.Name" xml:space="preserve">
    <value>Values sum</value>
  </data>
  <data name="BarsCountForValuesSumHandler.ValuesSum.Description" xml:space="preserve">
    <value>Indicator values sum</value>
  </data>
  <data name="ControlMessageHandler.Name" xml:space="preserve">
    <value>Control message</value>
  </data>
  <data name="ControlMessageHandler.Description" xml:space="preserve">
    <value>Outputs control message</value>
  </data>
  <data name="ControlMessageHandler.TrueMessage.Name" xml:space="preserve">
    <value>True message</value>
  </data>
  <data name="ControlMessageHandler.TrueMessage.Description" xml:space="preserve">
    <value>True message</value>
  </data>
  <data name="ControlMessageHandler.FalseMessage.Name" xml:space="preserve">
    <value>False message</value>
  </data>
  <data name="ControlMessageHandler.FalseMessage.Description" xml:space="preserve">
    <value>False message</value>
  </data>
  <data name="ControlMessageHandler.Message.Name" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="ControlMessageHandler.Message.Description" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="ExportValuesHandler.Name" xml:space="preserve">
    <value>Export values</value>
  </data>
  <data name="ImportBoolValuesHandler.Name" xml:space="preserve">
    <value>Import bool values</value>
  </data>
  <data name="ImportDoubleValuesHandler.Name" xml:space="preserve">
    <value>Import double values</value>
  </data>
  <data name="ImportIntValuesHandler.Name" xml:space="preserve">
    <value>Import int values</value>
  </data>
  <data name="TimestampHandler.Name" xml:space="preserve">
    <value>Timestamp</value>
  </data>
  <data name="LastClosedPositionExitBarNumber.Name" xml:space="preserve">
    <value>Exit bar number of last closed position</value>
  </data>
  <data name="LastClosedPositionExitBarNumber.Description" xml:space="preserve">
    <value>The exit bar number of the latest closed position.</value>
  </data>
  <data name="OrderBookPrice.Name" xml:space="preserve">
    <value>Order book, price</value>
  </data>
  <data name="OrderBookPrice.Description" xml:space="preserve">
    <value>Price value from a row of the order book.</value>
  </data>
  <data name="OrderBookPrice.Buy.Name" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="OrderBookPrice.Buy.Description" xml:space="preserve">
    <value>On - Buy, Off - Sell</value>
  </data>
  <data name="OrderBookPrice.Index.Name" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="OrderBookPrice.Index.Description" xml:space="preserve">
    <value>Index of row starting at 0, from the middle of the order book.</value>
  </data>
  <data name="OrderBookQty.Name" xml:space="preserve">
    <value>Order book, quantity</value>
  </data>
  <data name="OrderBookQty.Description" xml:space="preserve">
    <value>Quantity value from a row of the order book.</value>
  </data>
  <data name="OrderBookQty.Buy.Name" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="OrderBookQty.Buy.Description" xml:space="preserve">
    <value>On - Buy, Off - Sell</value>
  </data>
  <data name="OrderBookQty.Index.Name" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="OrderBookQty.Index.Description" xml:space="preserve">
    <value>Index of row starting at 0, from the middle of the order book.</value>
  </data>
  <data name="OrderBookTotal.Name" xml:space="preserve">
    <value>Order book, total</value>
  </data>
  <data name="OrderBookTotal.Description" xml:space="preserve">
    <value>Total ask/bid for the depth of the order book.</value>
  </data>
  <data name="OrderBookTotal.Buy.Name" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="OrderBookTotal.Buy.Description" xml:space="preserve">
    <value>On - Buy, Off - Sell</value>
  </data>
  <data name="OrderBookTotal.NumberRows.Name" xml:space="preserve">
    <value>Number of rows</value>
  </data>
  <data name="OrderBookTotal.NumberRows.Description" xml:space="preserve">
    <value>Number of rows from the middle of the order book for which the total</value>
  </data>
  <data name="ResultForOptimization.Name" xml:space="preserve">
    <value>Result for optimization</value>
  </data>
  <data name="ResultForOptimization.Description" xml:space="preserve">
    <value>Value for showing in the "Result from script" column in the optimization results grid.</value>
  </data>
  <data name="ControlledBoolBreaker.Name" xml:space="preserve">
    <value>Controlled Boolean Breaker</value>
  </data>
  <data name="ControlledBoolBreaker.Description" xml:space="preserve">
    <value>Sets a FALSE value at every candle except the last one. For the last value sets a selected TRUE/FALSE value. This block is used together with the control pane buttons. When signaled, the Value parameter reset automatically.</value>
  </data>
  <data name="ControlledBoolBreaker.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ControlledBoolBreaker.Value.Description" xml:space="preserve">
    <value>Set true for waiting a signal. Reset automatically when signaled.</value>
  </data>
  <data name="RecalcScheduler.Name" xml:space="preserve">
    <value>Recalc Scheduler</value>
  </data>
  <data name="RecalcScheduler.Description" xml:space="preserve">
    <value>Execute a script by schedule.</value>
  </data>
  <data name="RecalcScheduler.RecalcTime.Name" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="RecalcScheduler.RecalcTime.Description" xml:space="preserve">
    <value>Executing time.</value>
  </data>
  <data name="MaxCount.Name" xml:space="preserve">
    <value>Max count</value>
  </data>
  <data name="Index.Name" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="UseLastIndex.Name" xml:space="preserve">
    <value>Use last index</value>
  </data>
  <data name="ExecutionOrder.Name" xml:space="preserve">
    <value>Execution order</value>
  </data>
  <data name="EventKindHandler.Name" xml:space="preserve">
    <value>Event</value>
  </data>
  <data name="EventKindHandler.Description" xml:space="preserve">
    <value>During the next recalculation, if the specified event is executed, the Event block will return the value true. This value can be used in the algorithm. [br]The block can be used many times in the editor. The block connects to the source, returns an event for the tool.</value>
  </data>
  <data name="EventKindHandler.EventKind.Name" xml:space="preserve">
    <value>Event kind</value>
  </data>
  <data name="EventKindHandler.EventKind.Description" xml:space="preserve">
    <value>Event type: None, Order rejected, Order filled, Position opening, Position closing, Order quantity changed, Trading is started, Trading is stopped, Order canceled, Pretrade limitation.</value>
  </data>
  <data name="EventKind.Name" xml:space="preserve">
    <value>Event kind</value>
  </data>
  <data name="RandomHandler.Name" xml:space="preserve">
    <value>Random number</value>
  </data>
  <data name="RandomHandler.Description" xml:space="preserve">
    <value>Random number in the specified range.</value>
  </data>
  <data name="RandomHandler.MinValue.Name" xml:space="preserve">
    <value>Min value</value>
  </data>
  <data name="RandomHandler.MaxValue.Name" xml:space="preserve">
    <value>Max value</value>
  </data>
  <data name="RandomHandler.Precision.Name" xml:space="preserve">
    <value>Precision</value>
  </data>
  <data name="RandomHandler.Precision.Description" xml:space="preserve">
    <value>The number of decimal places.</value>
  </data>
  <data name="RandomHandler.Seed.Name" xml:space="preserve">
    <value>Seed</value>
  </data>
  <data name="RandomHandler.Seed.Description" xml:space="preserve">
    <value>A number used to calculate a starting value for the pseudo-random number sequence. (0 - not set).</value>
  </data>
  <data name="RandomHandler.SaveHistory.Name" xml:space="preserve">
    <value>Save history</value>
  </data>
  <data name="PositionByName.Name" xml:space="preserve">
    <value>Position by name</value>
  </data>
  <data name="PositionByName.Description" xml:space="preserve">
    <value>Get the position value from the Positions table.</value>
  </data>
  <data name="PositionByName.Symbol.Name" xml:space="preserve">
    <value>Symbol</value>
  </data>
  <data name="PositionByName.Symbol.Description" xml:space="preserve">
    <value>Symbol from the position table.</value>
  </data>
  <data name="PositionByName.Account.Name" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="PositionByName.Account.Description" xml:space="preserve">
    <value>Account name (optional).</value>
  </data>
  <data name="PositionByName.PositionField.Name" xml:space="preserve">
    <value>Position field</value>
  </data>
  <data name="PositionByName.PositionField.Description" xml:space="preserve">
    <value>Output position field.</value>
  </data>
  <data name="NetValueByAccount.Name" xml:space="preserve">
    <value>Net value by account</value>
  </data>
  <data name="NetValueByAccount.Description" xml:space="preserve">
    <value>Get the total net value of the account. If the account is not specified, the account name is taken from the agent (only in agent mode).</value>
  </data>
  <data name="NetValueByAccount.Account.Name" xml:space="preserve">
    <value>Account</value>
  </data>
    <data name="NetValueByAccount.Account.Description" xml:space="preserve">
    <value>Account name (optional).</value>
  </data>
  <data name="LastExitAvgPrice.Name" xml:space="preserve">
    <value>Average exit price last position</value>
  </data>
  <data name="LastExitAvgPrice.Description" xml:space="preserve">
    <value>Average exit price last position.</value>
  </data>
  <data name="LastClosedNamePositionAvgExitPrice.Name" xml:space="preserve">
    <value>Average exit price last position by name</value>
  </data>
  <data name="LastClosedNamePositionAvgExitPrice.Description" xml:space="preserve">
    <value>Average exit price last position by name.</value>
  </data>
  <data name="LastClosedNamePositionAvgExitPrice.Name.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LastClosedNamePositionAvgExitPrice.Name.Description" xml:space="preserve">
    <value>Close signal name</value>
  </data>
  <data name="ChannelHandler.ChannelApiKey.Description" xml:space="preserve">
    <value>The key that determines which TSChannel the values will be transmitted to. Copy the API Key value from the "Transmitter" of the corresponding channel in your account on signal.tslab.pro</value>
  </data>
  <data name="ChannelHandler.ChannelApiKey.Name" xml:space="preserve">
    <value>Api Key</value>
  </data>
  <data name="ChannelHandler.Name" xml:space="preserve">
    <value>Transmitter‌</value>
  </data>
  <data name="ParameterSenderHandler.Name" xml:space="preserve">
    <value>Parameter Encoder</value>
  </data>
  <data name="ReceiverHandler.Name" xml:space="preserve">
    <value>Receiver</value>
  </data>
  <data name="ReceiverHandler.ReceiverApiKey.Description" xml:space="preserve">
    <value>The key that determines which TSChannel values will be taken from. Copy the API Key value from the "Receiver" of the corresponding channel in your account on signal.tslab.pro</value>
  </data>
  <data name="ReceiverHandler.ReceiverApiKey.Name" xml:space="preserve">
    <value>Api Key</value>
  </data>
  <data name="ValueReceiverHandler.Name" xml:space="preserve">
    <value>Value Decoder</value>
  </data>
  <data name="ValueReceiverHandler.Value.Description" xml:space="preserve">
    <value>Extracts the value corresponding to the desired key from the received data packet and makes it available for further calculations.</value>
  </data>
  <data name="ValueReceiverHandler.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ValueSenderHandler.Name" xml:space="preserve">
    <value>Value Encoder</value>
  </data>
<data name="BoolReceiverHandler.Name" xml:space="preserve">
    <value>Boolean Decoder</value>
  </data>
<data name="BoolReceiverHandler.Value.Description" xml:space="preserve">
    <value>Extracts the value corresponding to the desired key from the received data packet and makes it available for further calculations.</value>
  </data>
<data name="BoolReceiverHandler.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="AddPositionHandler.Name" xml:space="preserve">
    <value>Add position in cycle</value>
  </data>
  <data name="AddPositionHandler.UseVirtualClosing.Name" xml:space="preserve">
    <value>Use "Virtual Closing"</value>
  </data>
  <data name="AddPositionHandler.Description" xml:space="preserve">
    <value>A pass on the bar is performed for all iteration cycles. During the passage, the positions that need to be opened are calculated. As many positions is added, as many iterations returned the result true.</value>
  </data>
  <data name="AddPositionHandler.UseVirtualClosing.Description" xml:space="preserve">
    <value>This parameter is necessary for cases when the position closing signal is missed, so that there are no new gaps. It says that the position signal was issued by the script, but the real application has not yet passed. For example, auto-closing is expected. If the option is enabled, the Cycle will move to the next free iteration, if it is disabled, there will be no new position openings.</value>
  </data>
  <data name="CycleAndHandler.Description" xml:space="preserve">
    <value>If the Boolean values take the value true on all iterations, then, at the output of the block, the value true is returned on the bar (on recalculation). If one of the Logical Values takes the value false, the value false is returned at the output of the block.</value>
  </data>
  <data name="CycleAndHandler.Name" xml:space="preserve">
    <value>Cycle End</value>
  </data>
  <data name="CycleBoolResultHandler.Description" xml:space="preserve">
    <value>Outputs a logical value from the loop to the bar by the iteration number.</value>
  </data>
  <data name="CycleBoolResultHandler.Index.Description" xml:space="preserve">
    <value>a logical result based on the iteration number of the cycle</value>
  </data>
  <data name="CycleBoolResultHandler.Index.Name" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="CycleBoolResultHandler.Name" xml:space="preserve">
    <value>Cycle logic result</value>
  </data>
  <data name="CycleBoolResultHandler.UseLastIndex.Description" xml:space="preserve">
    <value>always use the last iteration number of the cycle</value>
  </data>
  <data name="CycleBoolResultHandler.UseLastIndex.Name" xml:space="preserve">
    <value>Use last index</value>
  </data>
  <data name="CycleBoolResultsHandler.Description" xml:space="preserve">
    <value>Can be displayed on the chart. The chart will display all the iterations of the cycle. The block results can be passed to another Cycle, with the same number of iterations supported. Nested cycles are not supported.</value>
  </data>
  <data name="CycleBoolResultsHandler.Name" xml:space="preserve">
    <value>Cycle logic results</value>
  </data>
  <data name="CycleHandler.Description" xml:space="preserve">
    <value>At the top of the Cycle block there is a service connector for communication with the blocks of opening positions or updated values (simple and updatable cycle value). Thus, the entry into the cycle is indicated (the beginning of the calculation of the cycle). If this connector is not connected to anything, then the first formula (or logical formula) for which the output from the Cycle block is submitted and in which there is an appeal to the Cycle block by its name is considered to be the beginning of the calculation of the cycle.[br]All the blocks that are connected between the beginning of the cycle and the end of the cycle participate in the calculation of the results of the cycle. All the blocks that are connected between the beginning of the cycle and the end of the cycle participate in the calculation of the results of the cycle and they can't be tied to another cycle.</value>
  </data>
  <data name="CycleHandler.MaxCount.Description" xml:space="preserve">
    <value>specifies the maximum number of iterations.</value>
  </data>
  <data name="CycleHandler.MaxCount.Name" xml:space="preserve">
    <value>Maximum number</value>
  </data>
  <data name="CycleHandler.Name" xml:space="preserve">
    <value>Cycle</value>
  </data>
  <data name="CycleOrHandler.Description" xml:space="preserve">
    <value>If in one of the iterations the logical value takes the value true, then the block output returns the value true on the bar (on recalculation), otherwise the value false is returned. At the input, the results of the logical values of the cycle work, for example, a logical formula.</value>
  </data>
  <data name="CycleOrHandler.Name" xml:space="preserve">
    <value>Cycle Or</value>
  </data>
  <data name="CycleDoubleResultHandler.Description" xml:space="preserve">
    <value>Returns the value by the iteration number, and outputs the value to the bar.</value>
  </data>
  <data name="CycleDoubleResultHandler.Index.Description" xml:space="preserve">
    <value>indicates from which iteration it is necessary to copy the real value to output it to the bar.</value>
  </data>
  <data name="CycleDoubleResultHandler.Index.Name" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="CycleDoubleResultHandler.Name" xml:space="preserve">
    <value>Cycle result</value>
  </data>
  <data name="CycleDoubleResultHandler.UseLastIndex.Name" xml:space="preserve">
    <value>Use latest index</value>
  </data>
  <data name="CycleDoubleResultsHandler.Description" xml:space="preserve">
    <value>Can be displayed on a chart. It can be passed to another cycle, with the same number of iterations supported. Nested cycles are not supported. A service connector for displaying the parameter to the control panel.</value>
  </data>
  <data name="CycleDoubleResultsHandler.Name" xml:space="preserve">
    <value>Cycle results</value>
  </data>
  <data name="CycleDoubleSumHandler.Description" xml:space="preserve">
    <value>The result is the sum of the values of all iterations of the cycle.</value>
  </data>
  <data name="CycleDoubleSumHandler.Name" xml:space="preserve">
    <value>Cycle Sum</value>
  </data>
  <data name="CycleValueUpdaterHandler.Description" xml:space="preserve">
    <value>The usual updated value in the cycle moves from the old iteration to the value of the new iteration. The updated cycle value works with an array of iteration values. The output is a list of real values. For each iteration of the cycle, its own separate, independently updated value is maintained.</value>
  </data>
  <data name="CycleValueUpdaterHandler.ExecutionOrder.Description" xml:space="preserve">
    <value>Determines the queue for calculating the Updated value in the algorithm, in the general order (by default), at the end of the algorithm (in the queue of this calculation branch) or after leaving the position.</value>
  </data>
  <data name="CycleValueUpdaterHandler.ExecutionOrder.Name" xml:space="preserve">
    <value>Execution order</value>
  </data>
  <data name="CycleValueUpdaterHandler.Name" xml:space="preserve">
    <value>Cycle updatable value</value>
  </data>
  <data name="CycleValueUpdaterHandler.StartFrom.Description" xml:space="preserve">
    <value>The initial value of the block.</value>
  </data>
  <data name="CycleValueUpdaterHandler.StartFrom.Name" xml:space="preserve">
    <value>Initial</value>
  </data>
  <data name="ExportValuesHandler.Description" xml:space="preserve">
    <value>Passes the value by the identifier set by the user.</value>
  </data>
  <data name="ExportValuesHandler.Id.Name" xml:space="preserve">
    <value>Identifier</value>
  </data>
  <data name="ImportBoolValuesHandler.Description" xml:space="preserve">
    <value>Returns a Boolean value, according to the identifier set in the Export values block.</value>
  </data>
  <data name="ImportBoolValuesHandler.Id.Name" xml:space="preserve">
    <value>Identifier</value>
  </data>
  <data name="ImportDoubleValuesHandler.Description" xml:space="preserve">
    <value>Returns a Double value, according to the identifier set in the Export values block.</value>
  </data>
  <data name="ImportDoubleValuesHandler.Id.Name" xml:space="preserve">
    <value>Identifier</value>
  </data>
  <data name="ImportIntValuesHandler.Description" xml:space="preserve">
    <value>Returns an integer, according to the Identifier set in the Export values block.</value>
  </data>
  <data name="ImportIntValuesHandler.Id.Name" xml:space="preserve">
    <value>Identifier</value>
  </data>
  <data name="TimestampHandler.Description" xml:space="preserve">
    <value>Time in Unix Time Stamp format with milliseconds. [br]Feature: the block returns a number without conversions, regardless of the "Local Time" settings in the data provider. The block gives the corresponding UTC time/date in the UTS format on the bar.</value>
  </data>
  <data name="ChannelHandler.Description" xml:space="preserve">
    <value>Transmits all the “key: value” pairs formed by packer blocks to the TSChannel server. The transfer of a batch of values occurs at the time of recalculation of the script.</value>
  </data>
  <data name="ParameterSenderHandler.Description" xml:space="preserve">
    <value>Generates a “Key/Value” pair based on a parameter of another block, for example, an indicator. [br]Block’s Name defines the key (name) of the value passed to the channel. When it is received in another script, it will be possible to identify the value by this name.</value>
  </data>
  <data name="ReceiverHandler.Description" xml:space="preserve">
    <value>Receives data packets from the TSChannel. A new data packet is received when the script is being recalculated.</value>
  </data>
  <data name="ValueReceiverHandler.Description" xml:space="preserve">
    <value>Receives data packets from the TSChannel. A new data packet is received when the script is being recalculated.</value>
  </data>
  <data name="ValueSenderHandler.Description" xml:space="preserve">
    <value>Generates a “Key/Value” pair based on the value calculated in the script. [br]Block’s Name defines the key (name) of the value passed to the channel. When it is received in another script, it will be possible to identify the value by this name.</value>
  </data>
  <data name="LotSize.Name" xml:space="preserve">
    <value>Lot size</value>
  </data>
  <data name="LotSize.Description" xml:space="preserve">
    <value>Lot size of a security. The block returns the number of shares in one lot. This value is shown also in 'Quotes' table.</value>
  </data>
</root>