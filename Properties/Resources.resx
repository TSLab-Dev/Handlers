<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnySecurity" xml:space="preserve">
    <value>Any Security</value>
  </data>
  <data name="DeltaProfile" xml:space="preserve">
    <value>Delta Profile</value>
  </data>
  <data name="FutPx" xml:space="preserve">
    <value>Base Asset Price</value>
  </data>
  <data name="RiskFreeRate" xml:space="preserve">
    <value>Risk-free rate %</value>
  </data>
  <data name="SECURITYSource" xml:space="preserve">
    <value>Instrument</value>
  </data>
  <data name="POSITIONSource" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="OPTIONSource" xml:space="preserve">
    <value>Option source</value>
  </data>
  <data name="PositionProfile" xml:space="preserve">
    <value>Position profile</value>
  </data>
  <data name="ReferenceLine" xml:space="preserve">
    <value>Reference line</value>
  </data>
  <data name="Series1" xml:space="preserve">
    <value>Series 1</value>
  </data>
  <data name="Series2" xml:space="preserve">
    <value>Series 2</value>
  </data>
  <data name="Sub.Name" xml:space="preserve">
    <value>Subtract</value>
  </data>
  <data name="Sub.Description" xml:space="preserve">
    <value>Subtract second number from the first one</value>
  </data>
  <data name="Heartbeat.Name" xml:space="preserve">
    <value>Heartbeat</value>
  </data>
  <data name="Heartbeat.Description" xml:space="preserve">
    <value>Recalculate script by timer</value>
  </data>
  <data name="HeartbeatHandler.Name" xml:space="preserve">
    <value>Heartbeat 2</value>
  </data>
  <data name="HeartbeatHandler.Description" xml:space="preserve">
    <value>Automatic forced recalculation of the script after a specified period of time. The forced recalculation is started via the Recalc() method in the API. By default, protection is enabled so that the recalculation does not start more often than 300ms.</value>
  </data>
  <data name="MarketMaker.Name" xml:space="preserve">
    <value>Market Maker</value>
  </data>
  <data name="MarketMaker.Description" xml:space="preserve">
    <value>Market-maker. It can repeat quotes from one market to another</value>
  </data>
  <data name="Heartbeat.DelayMs.Name" xml:space="preserve">
    <value>Delay</value>
  </data>
  <data name="Heartbeat.DelayMs.Description" xml:space="preserve">
    <value>Delay between calls (ms)</value>
  </data>
  <data name="Heartbeat.OnlyAtTradingSession.Name" xml:space="preserve">
    <value>Trading session only</value>
  </data>
  <data name="Heartbeat.OnlyAtTradingSession.Description" xml:space="preserve">
    <value>If the flag is set, handler initiates execution only in agent mode at trading time when data provider is connected to market and the instrument is actually traded.</value>
  </data>
  <data name="HeartbeatHandler.Interval.Name" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="HeartbeatHandler.Interval.Description" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="AnyOption" xml:space="preserve">
    <value>Security or Option Series or OPTION</value>
  </data>
  <data name="InteractiveConstGen.Name" xml:space="preserve">
    <value>Interactive constant</value>
  </data>
  <data name="InteractiveLineGen.Name" xml:space="preserve">
    <value>Interactive line</value>
  </data>
  <data name="Smile" xml:space="preserve">
    <value>Smile</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="AbsolutCommission" xml:space="preserve">
    <value>Absolute comission</value>
  </data>
  <data name="Add.Name" xml:space="preserve">
    <value>Sum up</value>
  </data>
  <data name="AdjShift.Name" xml:space="preserve">
    <value>Adjustment shift</value>
  </data>
  <data name="Adjustment.Name" xml:space="preserve">
    <value>Adjustment</value>
  </data>
  <data name="Not.Name" xml:space="preserve">
    <value>Not</value>
  </data>
  <data name="And.Name" xml:space="preserve">
    <value>And</value>
  </data>
  <data name="Or.Name" xml:space="preserve">
    <value>Or</value>
  </data>
  <data name="BarsHeld.Name" xml:space="preserve">
    <value>Bars held</value>
  </data>
  <data name="BOOL.Name" xml:space="preserve">
    <value>Source (boolean, stream)</value>
  </data>
  <data name="BooleanExpression.Name" xml:space="preserve">
    <value>Boolean expression</value>
  </data>
  <data name="BoolValue.Name" xml:space="preserve">
    <value>Source (boolean, not stream)</value>
  </data>
  <data name="Close.Name" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Coef.Name" xml:space="preserve">
    <value>Factor </value>
  </data>
  <data name="ColorPower.Name" xml:space="preserve">
    <value>Color filling coefficient</value>
  </data>
  <data name="CombineSteps.Name" xml:space="preserve">
    <value>Combine steps</value>
  </data>
  <data name="Commission.Name" xml:space="preserve">
    <value>Commission</value>
  </data>
  <data name="CommissionPct.Name" xml:space="preserve">
    <value>Commission %</value>
  </data>
  <data name="CompressAdvanced.Name" xml:space="preserve">
    <value>Compress (Advanced)</value>
  </data>
  <data name="Compress.Name" xml:space="preserve">
    <value>Compress</value>
  </data>
  <data name="CompressToSeconds.Name" xml:space="preserve">
    <value>Compress into seconds</value>
  </data>
  <data name="ConstGen.Name" xml:space="preserve">
    <value>Constant</value>
  </data>
  <data name="CrossOver.Name" xml:space="preserve">
    <value>Cross over</value>
  </data>
  <data name="CrossUnder.Name" xml:space="preserve">
    <value>Cross under</value>
  </data>
  <data name="EqualHandler.Name" xml:space="preserve">
    <value>Equal</value>
  </data>
  <data name="GreaterHandler.Name" xml:space="preserve">
    <value>Greater</value>
  </data>
  <data name="LessHandler.Name" xml:space="preserve">
    <value>Less</value>
  </data>
  <data name="GreaterOrEqualHandler.Name" xml:space="preserve">
    <value>Greater or equal</value>
  </data>
  <data name="LessOrEqualHandler.Name" xml:space="preserve">
    <value>Less or equal</value>
  </data>
  <data name="CurrentPosition.Name" xml:space="preserve">
    <value>Current position</value>
  </data>
  <data name="AgentCurrentPosition.Name" xml:space="preserve">
    <value>Agent current position</value>
  </data>
  <data name="Cutter.Name" xml:space="preserve">
    <value>Cut off</value>
  </data>
  <data name="Date.Name" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DayOfMonth.Name" xml:space="preserve">
    <value>Day of month</value>
  </data>
  <data name="DayOfWeek.Name" xml:space="preserve">
    <value>Day of week</value>
  </data>
  <data name="DaysInPosition.Name" xml:space="preserve">
    <value>Days in position</value>
  </data>
  <data name="Decimals.Name" xml:space="preserve">
    <value>Symbols</value>
  </data>
  <data name="Decompres.Name" xml:space="preserve">
    <value>Decompress</value>
  </data>
  <data name="DecompresBool.Name" xml:space="preserve">
    <value>Decompress boolean</value>
  </data>
  <data name="SecDivideWith.Name" xml:space="preserve">
    <value>Divide with</value>
  </data>
  <data name="DOUBLE.Name" xml:space="preserve">
    <value>Source (numbers)</value>
  </data>
  <data name="DoubleExpression.Name" xml:space="preserve">
    <value>Formula</value>
  </data>
  <data name="DoubleValue.Name" xml:space="preserve">
    <value>Source (numbers, not stream)</value>
  </data>
  <data name="DrowdownCount.Name" xml:space="preserve">
    <value>Losses running</value>
  </data>
  <data name="ProfitsCount.Name" xml:space="preserve">
    <value>Profits running</value>
  </data>
  <data name="EntryDate.Name" xml:space="preserve">
    <value>Entry date</value>
  </data>
  <data name="CalcEntryPrice.Name" xml:space="preserve">
    <value>Entry price (estimated)</value>
  </data>
  <data name="EntryPrice.Name" xml:space="preserve">
    <value>Entry price</value>
  </data>
  <data name="EntryTime.Name" xml:space="preserve">
    <value>Entry time</value>
  </data>
  <data name="EstimatedMoney.Name" xml:space="preserve">
    <value>Portfolio estimation</value>
  </data>
  <data name="Expression.Name" xml:space="preserve">
    <value>Expression</value>
  </data>
  <data name="FastLimit.Name" xml:space="preserve">
    <value>Fast limit</value>
  </data>
  <data name="Flip.Name" xml:space="preserve">
    <value>Flip</value>
  </data>
  <data name="FreeMoney.Name" xml:space="preserve">
    <value>Free money</value>
  </data>
  <data name="Handler.Name" xml:space="preserve">
    <value>Handler</value>
  </data>
  <data name="HasLongPositionActive.Name" xml:space="preserve">
    <value>There is active long position</value>
  </data>
  <data name="HasPositionActive.Name" xml:space="preserve">
    <value>There is active position</value>
  </data>
  <data name="HasShortPositionActive.Name" xml:space="preserve">
    <value>There is active short position</value>
  </data>
  <data name="HasTwoLoss.Name" xml:space="preserve">
    <value>2 losses successively</value>
  </data>
  <data name="High.Name" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="Highest.Name" xml:space="preserve">
    <value>Highest for</value>
  </data>
  <data name="Hold.Name" xml:space="preserve">
    <value>Hold</value>
  </data>
  <data name="INTERACTIVESPLINE.Name" xml:space="preserve">
    <value>Interactive spline</value>
  </data>
  <data name="Interval.Name" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="IntervalBase.Name" xml:space="preserve">
    <value>Interval base</value>
  </data>
  <data name="LastClosedIsLong2.Name" xml:space="preserve">
    <value>Last closed position was long</value>
  </data>
  <data name="LastClosedIsShort2.Name" xml:space="preserve">
    <value>Last closed position was short</value>
  </data>
  <data name="LastClosedNamePositionExitDate.Name" xml:space="preserve">
    <value>Exit date of last closed named position</value>
  </data>
  <data name="LastClosedNamePositionExitTime.Name" xml:space="preserve">
    <value>Exit time of last closed named position</value>
  </data>
  <data name="LastClosedNamePositionExitPrice.Name" xml:space="preserve">
    <value>Exit price of last closed named position</value>
  </data>
  <data name="LastClosedPositionDate.Name" xml:space="preserve">
    <value>Date of last closed position</value>
  </data>
  <data name="LastClosedPositionExitDate.Name" xml:space="preserve">
    <value>Exit date of last closed position</value>
  </data>
  <data name="LastClosedPositionExitTime.Name" xml:space="preserve">
    <value>Exit time of last closed position</value>
  </data>
  <data name="LastClosedPositionTime.Name" xml:space="preserve">
    <value>Time of last closed position</value>
  </data>
  <data name="PosActiveNameExit.Name" xml:space="preserve">
    <value>Last exit has such name</value>
  </data>
  <data name="LastExitPrice.Name" xml:space="preserve">
    <value>Last exit price</value>
  </data>
  <data name="LastClosedIsLong.Name" xml:space="preserve">
    <value>Last position has been closed and it was long</value>
  </data>
  <data name="LastClosedIsShort.Name" xml:space="preserve">
    <value>Last position has been closed and it was short</value>
  </data>
  <data name="Long.Name" xml:space="preserve">
    <value>Buy</value>
  </data>
  <data name="Low.Name" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="Lowest.Name" xml:space="preserve">
    <value>Lowest for</value>
  </data>
  <data name="MarginPct.Name" xml:space="preserve">
    <value>Money value%</value>
  </data>
  <data name="Max.Name" xml:space="preserve">
    <value>Max</value>
  </data>
  <data name="Method.Name" xml:space="preserve">
    <value>Method</value>
  </data>
  <data name="Min.Name" xml:space="preserve">
    <value>Min</value>
  </data>
  <data name="MinimalCommission.Name" xml:space="preserve">
    <value>Minimum comission</value>
  </data>
  <data name="MinutesInPosition.Name" xml:space="preserve">
    <value>Minutes in position</value>
  </data>
  <data name="SecMultiply.Name" xml:space="preserve">
    <value>Multiply (CB) by</value>
  </data>
  <data name="Multiply.Name" xml:space="preserve">
    <value>Multiply by</value>
  </data>
  <data name="SecMultiplyWith.Name" xml:space="preserve">
    <value>Multiply by</value>
  </data>
  <data name="NotClear.Name" xml:space="preserve">
    <value>Do not clear</value>
  </data>
  <data name="NotTradableOption.Name" xml:space="preserve">
    <value>Not tradable source (Option)</value>
  </data>
  <data name="NotTradableSecurity.Name" xml:space="preserve">
    <value>Not tradable source (instrument)</value>
  </data>
  <data name="NumDaysProfit.Name" xml:space="preserve">
    <value>Profit (in N days)</value>
  </data>
  <data name="NumMinutesProfit.Name" xml:space="preserve">
    <value>Profit (in N minutes)</value>
  </data>
  <data name="NumPositionsProfit.Name" xml:space="preserve">
    <value>Profit (in N positions)</value>
  </data>
  <data name="Open.Name" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Period1.Name" xml:space="preserve">
    <value>Period1</value>
  </data>
  <data name="Period2.Name" xml:space="preserve">
    <value>Period2</value>
  </data>
  <data name="ProfitPct.Name" xml:space="preserve">
    <value>Profit %</value>
  </data>
  <data name="Profit.Name" xml:space="preserve">
    <value>Profit</value>
  </data>
  <data name="Relative.Name" xml:space="preserve">
    <value>Relative</value>
  </data>
  <data name="RelativeForPeriod.Name" xml:space="preserve">
    <value>Relative for period</value>
  </data>
  <data name="RelativeCommission.Name" xml:space="preserve">
    <value>Relative comission</value>
  </data>
  <data name="RelativeCommisionWithMinimal.Name" xml:space="preserve">
    <value>Relative comission with minimum</value>
  </data>
  <data name="PositionSharesByBar.Name" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="PositionShares.Name" xml:space="preserve">
    <value>Position size (initial)</value>
  </data>
  <data name="Shift.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="Slippage.Name" xml:space="preserve">
    <value>Slippage </value>
  </data>
  <data name="SlowLimit.Name" xml:space="preserve">
    <value>Slow limit </value>
  </data>
  <data name="StartFrom.Name" xml:space="preserve">
    <value>Initial   </value>
  </data>
  <data name="StartIndex.Name" xml:space="preserve">
    <value>Begin with</value>
  </data>
  <data name="StepPrice.Name" xml:space="preserve">
    <value>Step price</value>
  </data>
  <data name="StopLoss.Name" xml:space="preserve">
    <value>Stop loss</value>
  </data>
  <data name="Sub.Name1" xml:space="preserve">
    <value>Subtract</value>
  </data>
  <data name="SummFor.Name" xml:space="preserve">
    <value>Sum in</value>
  </data>
  <data name="SumForTimeFrameHandler.Name" xml:space="preserve">
    <value>Sum for time frame</value>
  </data>
  <data name="Time.Name" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="TimeInMins.Name" xml:space="preserve">
    <value>Time in minutes</value>
  </data>
  <data name="TradableOption.Name" xml:space="preserve">
    <value>Tradable source (Option)</value>
  </data>
  <data name="TradableSecurity.Name" xml:space="preserve">
    <value>Tradable source (instrument)</value>
  </data>
  <data name="CalcTradableSecurity.Name" xml:space="preserve">
    <value>Calculates tradable source (instrument)</value>
  </data>
  <data name="TrailEnable.Name" xml:space="preserve">
    <value>Enable the trail</value>
  </data>
  <data name="TrailLoss.Name" xml:space="preserve">
    <value>Trail loss</value>
  </data>
  <data name="TrailStop.Name" xml:space="preserve">
    <value>Trail stop</value>
  </data>
  <data name="TrailStopAbs.Name" xml:space="preserve">
    <value>Trail stop absolute</value>
  </data>
  <data name="Unknown.Name" xml:space="preserve">
    <value>Unknow</value>
  </data>
  <data name="Updater.Name" xml:space="preserve">
    <value>Updatable value</value>
  </data>
  <data name="UseCalcPrice.Name" xml:space="preserve">
    <value>Use estimated price</value>
  </data>
  <data name="Volume.Name" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="WholeDayProfit.Name" xml:space="preserve">
    <value>Profit (one day period)</value>
  </data>
  <data name="WholeTimeProfit.Name" xml:space="preserve">
    <value>Profit (whole period)</value>
  </data>
  <data name="WholeTimeProfit.Direction.Name" xml:space="preserve">
    <value>Direction trades</value>
  </data>
  <data name="CombinePricesCount.Name" xml:space="preserve">
    <value>Combine prices</value>
  </data>
  <data name="TimeFrame.Name" xml:space="preserve">
    <value>Time frame</value>
  </data>
  <data name="TimeFrameUnit.Name" xml:space="preserve">
    <value>Time frame unit</value>
  </data>
  <data name="TimeFrameShift.Name" xml:space="preserve">
    <value>Time frame shift</value>
  </data>
  <data name="TimeFrameShiftUnit.Name" xml:space="preserve">
    <value>Time frame shift unit</value>
  </data>
  <data name="ContractsCount.Name" xml:space="preserve">
    <value>Contracts count</value>
  </data>
  <data name="Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="DIM.Name" xml:space="preserve">
    <value>-DI</value>
  </data>
  <data name="DIP.Name" xml:space="preserve">
    <value>+DI</value>
  </data>
  <data name="ADX.Name" xml:space="preserve">
    <value>ADX (Old)</value>
  </data>
  <data name="ADXFull.Name" xml:space="preserve">
    <value>ADX</value>
  </data>
  <data name="AroonDown.Name" xml:space="preserve">
    <value>Aroon-</value>
  </data>
  <data name="AroonUp.Name" xml:space="preserve">
    <value>Aroon+</value>
  </data>
  <data name="BollingerBands1.Name" xml:space="preserve">
    <value>Bollinger Bands (+)</value>
  </data>
  <data name="BollingerBands2.Name" xml:space="preserve">
    <value>Bollinger Bands (-)</value>
  </data>
  <data name="CCI.Name" xml:space="preserve">
    <value>CCI (Old)</value>
  </data>
  <data name="CCINew.Name" xml:space="preserve">
    <value>CCI</value>
  </data>
  <data name="CuttlerRSI.Name" xml:space="preserve">
    <value>Cutler's RSI</value>
  </data>
  <data name="MACDEx.Name" xml:space="preserve">
    <value>MACD Ext</value>
  </data>
  <data name="MACDSig.Name" xml:space="preserve">
    <value>MACD Signal</value>
  </data>
  <data name="MedianPrice.Name" xml:space="preserve">
    <value>Median Price</value>
  </data>
  <data name="ParabolicSAR" xml:space="preserve">
    <value>Parabolic SAR</value>
  </data>
  <data name="TrueRange.Name" xml:space="preserve">
    <value>TR</value>
  </data>
  <data name="TypicalPrice.Name" xml:space="preserve">
    <value>Typical Price</value>
  </data>
  <data name="BoolBreaker.Name" xml:space="preserve">
    <value>Boolean Breaker</value>
  </data>
  <data name="BoolConst.Name" xml:space="preserve">
    <value>Boolean Constant</value>
  </data>
  <data name="StringConst.Name" xml:space="preserve">
    <value>String Constant</value>
  </data>
  <data name="MomentumOsc.Name" xml:space="preserve">
    <value>Chande Momentum Oscillator</value>
  </data>
  <data name="MomentumPct.Name" xml:space="preserve">
    <value>Momentum %</value>
  </data>
  <data name="OpenInterest.Name" xml:space="preserve">
    <value>Open Interest</value>
  </data>
  <data name="OptVolatility.Name" xml:space="preserve">
    <value>Option Volatility</value>
  </data>
  <data name="TheoreticalPrice.Name" xml:space="preserve">
    <value>Theoretical price</value>
  </data>
  <data name="ZeroLagTEMA.Name" xml:space="preserve">
    <value>TEMA (Zero Lag)</value>
  </data>
  <data name="MAEPct.Name" xml:space="preserve">
    <value>MAE %</value>
  </data>
  <data name="MFEPct.Name" xml:space="preserve">
    <value>MFE %</value>
  </data>
  <data name="StochRSI.Name" xml:space="preserve">
    <value>Stoch RSI</value>
  </data>
  <data name="BidAskMarketPosition.Name" xml:space="preserve">
    <value>Buy/Sell cluster(view only)</value>
  </data>
  <data name="DeltaMarketPosition.Name" xml:space="preserve">
    <value>Delta cluster(view only)</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.Name" xml:space="preserve">
    <value>All Time Trade Statistics</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.Name" xml:space="preserve">
    <value>Last Contracts Trade Statistics</value>
  </data>
  <data name="LastTradeStatisticsHandler.Name" xml:space="preserve">
    <value>Last Trade Statistics</value>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.Name" xml:space="preserve">
    <value>Trade Statistics Extremum Price (POC)</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler.Name" xml:space="preserve">
    <value>Trade Statistics Extended Extremum Price 1</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler2.Name" xml:space="preserve">
    <value>Trade Statistics Extended Extremum Price 2</value>
  </data>
  <data name="TradeStatisticsExtremumValueHandler.Name" xml:space="preserve">
    <value>Trade Statistics Extremum Value</value>
  </data>
  <data name="TradeStatisticsHandler.Name" xml:space="preserve">
    <value>Trade Statistics</value>
  </data>
  <data name="TradeStatisticsCombineHandler.Name" xml:space="preserve">
    <value>Stacked Trading Statistics</value>
  </data>
  <data name="TradeStatisticsLowerEdgeHandler.Name" xml:space="preserve">
    <value>Trade Statistics Lower Level (VAL)</value>
  </data>
  <data name="TradeStatisticsUpperEdgeHandler.Name" xml:space="preserve">
    <value>Trade Statistics Upper Level (VAH)</value>
  </data>
  <data name="TradeStatisticsBarsCountHandler.Name" xml:space="preserve">
    <value>Trade Statistics Strings Count</value>
  </data>
  <data name="TradeStatisticsBarsSumHandler.Name" xml:space="preserve">
    <value>Trade Statistics Strings Sum</value>
  </data>
  <data name="TradeStatisticsExtendedBarsCountHandler.Name" xml:space="preserve">
    <value>Trade Statistics Extended Strings Count 1</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler.Name" xml:space="preserve">
    <value>Trade Statistics Extended Strings Sum 1</value>
  </data>
  <data name="TradeStatisticsExtendedBarsCountHandler2.Name" xml:space="preserve">
    <value>Trade Statistics Extended Strings Count 2</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler2.Name" xml:space="preserve">
    <value>Trade Statistics Extended Strings Sum 2</value>
  </data>
  <data name="TradeStatisticsPriceValueHandler.Name" xml:space="preserve">
    <value>Trade Statistics Price Value</value>
  </data>
  <data name="VolumeForPeriodHandler.Name" xml:space="preserve">
    <value>Volume for period</value>
  </data>
  <data name="AlignedSecurityHandler.Name" xml:space="preserve">
    <value>Aligned instrument</value>
  </data>
  <data name="BuysHandler.Name" xml:space="preserve">
    <value>Buys</value>
  </data>
  <data name="SellsHandler.Name" xml:space="preserve">
    <value>Sells</value>
  </data>
  <data name="BuysMinusSellsHandler.Name" xml:space="preserve">
    <value>Buys Minus Sells</value>
  </data>
  <data name="VolumeMarketPosition.Name" xml:space="preserve">
    <value>Volume cluster(view only)</value>
  </data>
  <data name="MessageHandler.Name" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="TextHandler.Name" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="Momentum" xml:space="preserve">
    <value>Momentum</value>
  </data>
  <data name="BalancedPrice.Name" xml:space="preserve">
    <value>Average entry price</value>
  </data>
  <data name="BalancedPriceBySecurity.Name" xml:space="preserve">
    <value>Average entry price (by security)</value>
  </data>
  <data name="BalancedPriceBySecurity.Description" xml:space="preserve">
    <value>An average position exit price.</value>
  </data>
  <data name="BalancedPriceBySecurity.PositionSide.Name" xml:space="preserve">
    <value>Position side</value>
  </data>
  <data name="AverageExitPrice.Name" xml:space="preserve">
    <value>Average exit price</value>
  </data>
  <data name="Ask.Name" xml:space="preserve">
    <value>Ask</value>
  </data>
  <data name="AskQty.Name" xml:space="preserve">
    <value>Total offer</value>
  </data>
  <data name="Bid.Name" xml:space="preserve">
    <value>Bid</value>
  </data>
  <data name="BidQty.Name" xml:space="preserve">
    <value>Total demand</value>
  </data>
  <data name="BarNumber.Name" xml:space="preserve">
    <value>Bar number</value>
  </data>
  <data name="HoldSignalForNBars.Name" xml:space="preserve">
    <value>Hold signal for N bars</value>
  </data>
  <data name="IsItLossAtLastPosition.Name" xml:space="preserve">
    <value>Last closed position was unprofitable</value>
  </data>
  <data name="PositionChangeEntryBarNumber.Name" xml:space="preserve">
    <value>Changed Position Entry Bar Number</value>
  </data>
  <data name="PositionChangeExitBarNumber.Name" xml:space="preserve">
    <value>Changed Position Exit Bar Number</value>
  </data>
  <data name="PositionEntryBarNumber.Name" xml:space="preserve">
    <value>Position Entry Bar Number</value>
  </data>
  <data name="PositionExitBarNumber.Name" xml:space="preserve">
    <value>Position Entry Сurrent Bar Number</value>
  </data>
  <data name="PositionChangeEntryPrice.Name" xml:space="preserve">
    <value>Changed Position Entry Price</value>
  </data>
  <data name="PositionChangeExitPrice.Name" xml:space="preserve">
    <value>Changed Position Exit Price</value>
  </data>
  <data name="PositionIsVirtualHandler.Name" xml:space="preserve">
    <value>Position Is Virtual</value>
  </data>
  <data name="PositionIsVirtualClosedHandler.Name" xml:space="preserve">
    <value>Position Is Virtually Closed</value>
  </data>
  <data name="Median.Name" xml:space="preserve">
    <value>Equity Drawdown</value>
  </data>
  <data name="DrawdownHandler.Name" xml:space="preserve">
    <value>Drawdown</value>
  </data>
  <data name="DrawdownHandler.DrawdownKind.Name" xml:space="preserve">
    <value>Drawdown kind</value>
  </data>
  <data name="BuyCount.Name" xml:space="preserve">
    <value>Number of purchase requests</value>
  </data>
  <data name="SellCount.Name" xml:space="preserve">
    <value>Number of requests for sale</value>
  </data>
  <data name="BuyDeposit.Name" xml:space="preserve">
    <value>Buy Deposit</value>
  </data>
  <data name="SellDeposit.Name" xml:space="preserve">
    <value>Sell Deposit</value>
  </data>
  <data name="HighestPos.Name" xml:space="preserve">
    <value>Bars since last high</value>
  </data>
  <data name="LowestPos.Name" xml:space="preserve">
    <value>Bars since last low</value>
  </data>
  <data name="SessionClose.Name" xml:space="preserve">
    <value>Session close</value>
  </data>
  <data name="SessionHeld.Name" xml:space="preserve">
    <value>Current Session Bar</value>
  </data>
  <data name="SessionHigh.Name" xml:space="preserve">
    <value>Session high</value>
  </data>
  <data name="SessionLow.Name" xml:space="preserve">
    <value>Session low</value>
  </data>
  <data name="SessionOpen.Name" xml:space="preserve">
    <value>Session open</value>
  </data>
  <data name="HighBid.Name" xml:space="preserve">
    <value>High bid</value>
  </data>
  <data name="LowOffer.Name" xml:space="preserve">
    <value>Low offer</value>
  </data>
  <data name="PriceMin.Name" xml:space="preserve">
    <value>Low limit</value>
  </data>
  <data name="PriceMax.Name" xml:space="preserve">
    <value>High limit</value>
  </data>
  <data name="HoldSignalForNBars.NBars.Name" xml:space="preserve">
    <value>Bars count</value>
  </data>
  <data name="ControlledBoolConst.Name" xml:space="preserve">
    <value>Controlled Boolean Constant</value>
  </data>
  <data name="ResettableControlledBoolConst.Name" xml:space="preserve">
    <value>Resettable Controlled Boolean Constant</value>
  </data>
  <data name="BarsConstructorHandler.Name" xml:space="preserve">
    <value>Bars Constructor</value>
  </data>
  <data name="Input.BarsConstructorHandler.1" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Input.BarsConstructorHandler.2" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Input.BarsConstructorHandler.3" xml:space="preserve">
    <value>Maximum</value>
  </data>
  <data name="Input.BarsConstructorHandler.4" xml:space="preserve">
    <value>Mimimum</value>
  </data>
  <data name="Input.BarsConstructorHandler.5" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="TimeFrameKind.Name" xml:space="preserve">
    <value>Time frame kind</value>
  </data>
  <data name="TopTimeFrame.Name" xml:space="preserve">
    <value>Top time frame</value>
  </data>
  <data name="TopTimeFrameUnit.Name" xml:space="preserve">
    <value>Top time frame unit</value>
  </data>
  <data name="PriceMode.Name" xml:space="preserve">
    <value>Price mode</value>
  </data>
  <data name="Add.Description" xml:space="preserve">
    <value>Sum a few input values (from 2 to 6 inputs)</value>
  </data>
  <data name="And.Description" xml:space="preserve">
    <value>Logical conjunction of a few input values (from 2 to 30 inputs). Output is TRUE only if all inputs are TRUE at the same time.</value>
  </data>
  <data name="Ask.Description" xml:space="preserve">
    <value>Best sell price recorded at the end of every bar (if available).</value>
  </data>
  <data name="AskQty.Description" xml:space="preserve">
    <value>Number of securities in all orders for sale (in lots). [br]
The data for the block is taken from "Quotes". If the broker or exchange does not transmit data, then for the block to work, you need to open the "Depth of Market" window and select the required instrument in it.</value>
  </data>
  <data name="BarNumber.Description" xml:space="preserve">
    <value>An index of an element in a list of bars or numeric values.</value>
  </data>
  <data name="BarsConstructorHandler.Description" xml:space="preserve">
    <value>Handler converts 5 input numeric series to a synthetic security with bars. Inputs are: open, close, high, low, volume.</value>
  </data>
  <data name="Bid.Description" xml:space="preserve">
    <value>Best buy price recorded at the end of every bar (if available).</value>
  </data>
  <data name="BidQty.Description" xml:space="preserve">
    <value>Number of securities in all purchase orders (in lots). [br]
The data for the block is taken from "Quotes". If the broker or exchange does not transmit data, then for the block to work, you need to open the "Depth of Market" window and select the required instrument in it.</value>
  </data>
  <data name="BoolBreaker.Description" xml:space="preserve">
    <value>Sets a FALSE value at every candle except the last one. For the last value sets a selected TRUE/FALSE value. This block is used together with the control pane buttons.</value>
  </data>
  <data name="BoolConst.Description" xml:space="preserve">
    <value>This block sets a fixed boolean value for every bar.</value>
  </data>
  <data name="StringConst.Description" xml:space="preserve">
    <value>This block sets a fixed string value for every bar.</value>
  </data>
  <data name="BuyCount.Description" xml:space="preserve">
    <value>The total current number of purchase orders in the order queue. In quotes, it corresponds to the "Orders to buy" field. Not cached.</value>
  </data>
  <data name="Close.Description" xml:space="preserve">
    <value>Closing price of the bar.</value>
  </data>
  <data name="Compress.Description" xml:space="preserve">
    <value>Compresses current bars time range (minutes into minutes, days into days) into a longer one. Only divisible ranges can be used. For example, 15 minutes can be compressed into 15, 30, 45, 60 minutes and so on.</value>
  </data>
  <data name="CompressAdvanced.Description" xml:space="preserve">
    <value>Compresses a current bars time range (minutes into minutes, days into days) of bars into a longer one. Only divisible ranges can be used. For example, 15 minutes can be compressed into 15, 30, 45, 60 minutes and so on.</value>
  </data>
  <data name="CompressToSeconds.Description" xml:space="preserve">
    <value>Compresses current time range of bars into a longer one. Only divisible ranges can be used. For example, 1 minute can be compressed into 60, 120, 180, 240 seconds and so on.</value>
  </data>
  <data name="ConstGen.Description" xml:space="preserve">
    <value>A constant value.</value>
  </data>
  <data name="ConstGen.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ConstGen.Value.Description" xml:space="preserve">
    <value>A value to return as output of a handler</value>
  </data>
  <data name="ControlledBoolConst.Description" xml:space="preserve">
    <value>Controlled boolean constant (switch). If input is TRUE the result is taken from a field 'Value', otherwise the result is taken from a field 'Default value'.</value>
  </data>
  <data name="ControlledBoolConst.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ControlledBoolConst.Value.Description" xml:space="preserve">
    <value>A value to return as output of a handler when input is true</value>
  </data>
  <data name="ControlledBoolConst.DefaultValue.Name" xml:space="preserve">
    <value>Default value</value>
  </data>
  <data name="ControlledBoolConst.DefaultValue.Description" xml:space="preserve">
    <value>A value to return as output of a handler when input is false</value>
  </data>
  <data name="ValueReceiverHandler.DefaultValue.Name" xml:space="preserve">
    <value>Default value</value>
  </data>
  <data name="ValueReceiverHandler.DefaultValue.Description" xml:space="preserve">
    <value>A value to return as output of a handler when can't load from server</value>
  </data>
  <data name="BoolReceiverHandler.DefaultValue.Name" xml:space="preserve">
    <value>Default value</value>
  </data>
  <data name="BoolReceiverHandler.DefaultValue.Description" xml:space="preserve">
    <value>A value to return as output of a handler when can't load from server</value>
  </data>
  <data name="CrossOver.Description" xml:space="preserve">
    <value>Handler returns true, if second input (signal) crosses down a reference line (first input).</value>
  </data>
  <data name="CrossUnder.Description" xml:space="preserve">
    <value>Handler returns true, if second input (signal) crosses up a reference line (first input).</value>
  </data>
  <data name="Cutter.Description" xml:space="preserve">
    <value>Cuts High and Low up to a selected value.</value>
  </data>
  <data name="Cutter.Decimals.Name" xml:space="preserve">
    <value>Decimals</value>
  </data>
  <data name="Cutter.Decimals.Description" xml:space="preserve">
    <value>Decimals for ceiling</value>
  </data>
  <data name="Date.Description" xml:space="preserve">
    <value>Date of every bar is converted to number as yymmdd. I.e. date 12.31.2018 converts to a number 181231.</value>
  </data>
  <data name="DayOfMonth.Description" xml:space="preserve">
    <value>Handler accepts an instrument at the entry and returns a month day as number from 1 31.</value>
  </data>
  <data name="DayOfWeek.Description" xml:space="preserve">
    <value>Handler accepts an instrument at the entry and returns a week day as number from 1 (Monday) to 7 (Sunday).</value>
  </data>
  <data name="Decompres.Description" xml:space="preserve">
    <value>Decompresses calculated numeric data to be used further with other data in authentic range. The Decompress block should be connected to a block being compressed and to the Compress block linked to a block being decompressed. [br]TSLab has three decompression methods. [br]Attention! The 2nd method cannot be applied to offline data testing, as it results in looking into the future and, as a result, corrupts results significantly.</value>
  </data>
  <data name="DecompresBool.Description" xml:space="preserve">
    <value>Decompresses Boolean data which have been calculated in compressed range to be used further with other data in authentic range. The Decompress block should be connected to a block being decompressed and with the Compress block, linked to a block being decompressed.</value>
  </data>
  <data name="EqualHandler.Description" xml:space="preserve">
    <value>Handler returns true, if input values are equal (with respect to double values precision)</value>
  </data>
  <data name="Flip.Description" xml:space="preserve">
    <value>Imitates a trigger with 2 entries, when True appears at the first entry, an outgoing value becomes True, until True appears at the second entry. When True appears at the second entry, an indicator value becomes False, until True appears at the first entry. If True appears at two entries simultaneously, then an indicator valye is False, so it means that the first entry is ignored.</value>
  </data>
  <data name="GreaterHandler.Description" xml:space="preserve">
    <value>Handler returns true, if the first input is strictly greater than the second input.</value>
  </data>
  <data name="GreaterOrEqualHandler.Description" xml:space="preserve">
    <value>Handler returns true, if the first input is greater or equal than the second input.</value>
  </data>
  <data name="High.Description" xml:space="preserve">
    <value>A maximum price of a bar.</value>
  </data>
  <data name="HighestPos.Description" xml:space="preserve">
    <value>The number of bars since the latest high.</value>
  </data>
  <data name="HighestPos.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="HighestPos.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="Hold.Description" xml:space="preserve">
    <value>Holds an incoming Boolean signal during N candles (the Period parameter). So, if an incoming candle value becomes True, it will be duplicated for N candles.</value>
  </data>
  <data name="Hold.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="Hold.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="LessHandler.Description" xml:space="preserve">
    <value>Handler returns true, if the first input is strictly less than the second input.</value>
  </data>
  <data name="LessOrEqualHandler.Description" xml:space="preserve">
    <value>Handler returns true, if the first input is less or equal than the second input.</value>
  </data>
  <data name="Ln.Name" xml:space="preserve">
    <value>Ln</value>
  </data>
  <data name="Ln.Description" xml:space="preserve">
    <value>A natural logarithm (Ln) for a values series.</value>
  </data>
  <data name="Low.Description" xml:space="preserve">
    <value>A minimum price of a bar.</value>
  </data>
  <data name="LowestPos.Description" xml:space="preserve">
    <value>The number of bars since the latest low.</value>
  </data>
  <data name="LowestPos.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="LowestPos.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="Max.Description" xml:space="preserve">
    <value>Maximum of a few input values (from 2 to 6 inputs)</value>
  </data>
  <data name="Min.Description" xml:space="preserve">
    <value>Minimum of a few input values (from 2 to 6 inputs)</value>
  </data>
  <data name="Multiply.Description" xml:space="preserve">
    <value>Multiplies each item of input by a constant factor.</value>
  </data>
  <data name="Not.Description" xml:space="preserve">
    <value>Negation. Incoming logical value is changed to the opposite. TRUE changes to FALSE, FALSE changes to TRUE.</value>
  </data>
  <data name="Open.Description" xml:space="preserve">
    <value>Opening price of the bar.</value>
  </data>
  <data name="OpenInterest.Description" xml:space="preserve">
    <value>Open interest as recieved from data feed. This value is shown also in 'Quotes' table.</value>
  </data>
  <data name="OptVolatility.Description" xml:space="preserve">
    <value>Theoretical option volatility received from the Exchange. This value is also shown at the Quotes window.</value>
  </data>
  <data name="Or.Description" xml:space="preserve">
    <value>Logical disjunction of a few input values (from 2 to 30 inputs). Output is TRUE if at least one input is TRUE.</value>
  </data>
  <data name="ResettableControlledBoolConst.Description" xml:space="preserve">
    <value>Resettable controlled boolean constant (switch). If input is TRUE the result is taken from a field 'Value', otherwise the result is taken from a field 'Default value'. Second input determines 'Value'. If it contains more TRUE, then 'Value' is set to 'Default value'.</value>
  </data>
  <data name="ResettableControlledBoolConst.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ResettableControlledBoolConst.Value.Description" xml:space="preserve">
    <value>A value to return as output of a handler when input is true</value>
  </data>
  <data name="ResettableControlledBoolConst.DefaultValue.Name" xml:space="preserve">
    <value>Default value</value>
  </data>
  <data name="ResettableControlledBoolConst.DefaultValue.Description" xml:space="preserve">
    <value>A value to return as output of a handler when input is false</value>
  </data>
  <data name="SecDivideWith.Description" xml:space="preserve">
    <value>Handler converts bars of an input to a synthetic security (each incoming bar is divided by an individual weight from a second input).</value>
  </data>
  <data name="SecDivideWith.Decimals.Name" xml:space="preserve">
    <value>Decimals</value>
  </data>
  <data name="SecDivideWith.Decimals.Description" xml:space="preserve">
    <value>Decimals for ceiling</value>
  </data>
  <data name="SecMultiply.Description" xml:space="preserve">
    <value>Handler converts bars of an input to a synthetic security (all prices of incoming bars are multiplied by a given coefficient). </value>
  </data>
  <data name="SecMultiplyWith.Description" xml:space="preserve">
    <value>Handler converts bars of an input to a synthetic security (each incoming bar is multiplied by an individual weight from a second input).</value>
  </data>
  <data name="SecMultiplyWith.Decimals.Name" xml:space="preserve">
    <value>Decimals</value>
  </data>
  <data name="SecMultiplyWith.Decimals.Description" xml:space="preserve">
    <value>Decimals for ceiling</value>
  </data>
  <data name="SellCount.Description" xml:space="preserve">
    <value>The total current number of sell orders in the order queue. In quotes, it corresponds to the "Orders to sell" field. Not cached</value>
  </data>
  <data name="SessionClose.Description" xml:space="preserve">
    <value>Shows a session close trade price.</value>
  </data>
  <data name="SessionHeld.Description" xml:space="preserve">
    <value>A current bar index from start of current trading day.</value>
  </data>
  <data name="SessionHigh.Description" xml:space="preserve">
    <value>Shows the session highest trade price.</value>
  </data>
  <data name="SessionLow.Description" xml:space="preserve">
    <value>Shows the session lowest trade price.</value>
  </data>
  <data name="SessionOpen.Description" xml:space="preserve">
    <value>Shows a session opening trade price.</value>
  </data>
  <data name="Shift.Description" xml:space="preserve">
    <value>Moves values for N candles to the right.</value>
  </data>
  <data name="Shift.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="Shift.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="PrevValue.Name" xml:space="preserve">
    <value>Previous value</value>
  </data>
  <data name="PrevValue.Description" xml:space="preserve">
    <value>Returns the previous value N steps back.</value>
  </data>
  <data name="PrevValue.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="StepPrice.Description" xml:space="preserve">
    <value>A step price recorded at the end of every bar (if available).</value>
  </data>
  <data name="TheoreticalPrice.Description" xml:space="preserve">
    <value>Theoretical instrument price received from the Exchange. This value is also shown at the Quotes window.</value>
  </data>
  <data name="Tick.Name" xml:space="preserve">
    <value>Price step</value>
  </data>
  <data name="Tick.Description" xml:space="preserve">
    <value>Price step of a security. This value is shown also in 'Quotes' table.</value>
  </data>
  <data name="Time.Description" xml:space="preserve">
    <value>Time of every bar is converted to number as hhmmss.</value>
  </data>
  <data name="TimeInMins.Description" xml:space="preserve">
    <value>Time of the bar from midnight in minutes. I.e. time 10:31 converts to a number 631.</value>
  </data>
  <data name="Volume.Description" xml:space="preserve">
    <value>Volume of the bar</value>
  </data>
  <data name="AbsolutCommission.Name" xml:space="preserve">
    <value>Absolute comission</value>
  </data>
  <data name="AbsolutCommission.Description" xml:space="preserve">
    <value>Absolute commission for one trade (long or short)</value>
  </data>
  <data name="RelativeCommisionWithMinimal.Description" xml:space="preserve">
    <value>Relative commission for one trade (long or short) as percents. Minumum absolute comission for a trade is additionally applied.</value>
  </data>
  <data name="RelativeCommission.Description" xml:space="preserve">
    <value>Relative commission for one trade (long or short) as percents. Cost of money: is used to get a price of a borrowed funds.</value>
  </data>
  <data name="TextHandler.Description" xml:space="preserve">
    <value>This block has no entries. It has an editable text parameter which returns as a result of its work.</value>
  </data>
  <data name="BoolBreaker.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="BoolBreaker.Value.Description" xml:space="preserve">
    <value>A value to return as output of a handler</value>
  </data>
  <data name="BoolConst.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="BoolConst.Value.Description" xml:space="preserve">
    <value>A value to return as output of a handler</value>
  </data>
  <data name="InteractiveConstGen.Description" xml:space="preserve">
    <value>Creates an interactive constant on a chart pane (a horizontal line).</value>
  </data>
  <data name="InteractiveLineGen.Description" xml:space="preserve">
    <value>Creates an interactive line on a chart pane.</value>
  </data>
  <data name="Ln.Mult.Name" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="Ln.Mult.Description" xml:space="preserve">
    <value>A result of logarithm may be multiplied by this coefficient ( Mult*LN(x) + Add )</value>
  </data>
  <data name="Ln.Add.Name" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Ln.Add.Description" xml:space="preserve">
    <value>A result of logarithm (after multiplication) may be shifted by this value ( Mult*LN(x) + Add )</value>
  </data>
  <data name="Multiply.Coef.Name" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="Multiply.Coef.Description" xml:space="preserve">
    <value>Every item of input is multiplied by this coefficient ( Mult*x )</value>
  </data>
  <data name="SecDivideWith.Coef.Name" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="SecDivideWith.Coef.Description" xml:space="preserve">
    <value>Every bar of input is multiplied by this coefficient ( Mult * x / Source2 )</value>
  </data>
  <data name="SecMultiply.Coef.Name" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="SecMultiply.Coef.Description" xml:space="preserve">
    <value>Every bar of input is multiplied by this coefficient ( Mult*x )</value>
  </data>
  <data name="SecMultiplyWith.Coef.Name" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="SecMultiplyWith.Coef.Description" xml:space="preserve">
    <value>Every bar of input is multiplied by this coefficient ( Mult * Source2 * x )</value>
  </data>
  <data name="AbsolutCommission.Commission.Name" xml:space="preserve">
    <value>Comission</value>
  </data>
  <data name="AbsolutCommission.Commission.Description" xml:space="preserve">
    <value>Absolute comission per 1 lot of a security</value>
  </data>
  <data name="RelativeCommisionWithMinimal.MinimalCommission.Name" xml:space="preserve">
    <value>Minimal comission</value>
  </data>
  <data name="RelativeCommisionWithMinimal.MinimalCommission.Description" xml:space="preserve">
    <value>Minimal absolute comission for a trade</value>
  </data>
  <data name="RelativeCommisionWithMinimal.CommissionPct.Name" xml:space="preserve">
    <value>Comission, %</value>
  </data>
  <data name="RelativeCommisionWithMinimal.CommissionPct.Description" xml:space="preserve">
    <value>Сomission as a percent of a volume</value>
  </data>
  <data name="RelativeCommission.CommissionPct.Name" xml:space="preserve">
    <value>Comission, %</value>
  </data>
  <data name="RelativeCommission.CommissionPct.Description" xml:space="preserve">
    <value>Сomission as a percent of a volume</value>
  </data>
  <data name="TextHandler.Text.Name" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="TextHandler.Text.Description" xml:space="preserve">
    <value>Text (string)</value>
  </data>
  <data name="AlignedSecurityHandler.Description" xml:space="preserve">
    <value>The 'Aligned Instrument’ block allows to display the same width histograms regardless of the actual number of candles in the chart.</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.Description" xml:space="preserve">
    <value>The 'All Time Trade Statistics' block creates a histogram based on the entire available time interval. [br]The histogram can be built on the number of trades, the volume of trades, the buy quantity, the sell quantity, the difference between the buy and sell quantity and the relative difference between the buy and sell quantity, % (see the 'View' parameter).</value>
  </data>
  <data name="BidAskMarketPosition.Description" xml:space="preserve">
    <value>Bid/Ask footprint shows the number of purchases and sales separately for every price step or price range, depending on value of a 'Combine Steps' parameter. If there are more purchases, the line turns green, if less, the line turns red. In case the numbers of purchases and sales are equal, the line turns yellow.</value>
  </data>
  <data name="BuysHandler.Description" xml:space="preserve">
    <value>A handler calculates statistics (amount or total volume) of a long trades</value>
  </data>
  <data name="BuysMinusSellsHandler.Description" xml:space="preserve">
    <value>A handler calculates statistics difference (amount or total volume) of a long and short trades</value>
  </data>
  <data name="DeltaMarketPosition.Description" xml:space="preserve">
    <value>Delta Footprint shows difference in the number of purchases and sales separately for every price step or price range, depending on value of a 'Combine Steps' parameter. If there are more purchases, the line turns green, if less, the line turns red. In case the numbers of sales and purchases are equal, the line turns yellow.</value>
  </data>
  <data name="InteractiveSeriesHandler.Name" xml:space="preserve">
    <value>InteractiveSeriesHandler</value>
  </data>
  <data name="InteractiveSeriesHandler.Description" xml:space="preserve">
    <value>БЕЗ ОПИСАНИЯ (кубик виден только в девелоперской версии)</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.Description" xml:space="preserve">
    <value>The 'Last Contracts Trade Statistics' block creates a histogram for the specified number of -last contracts.</value>
  </data>
  <data name="LastTradeStatisticsHandler.Description" xml:space="preserve">
    <value>The 'Latest Trade Statistics' block creates a histogram for the specified time interval.</value>
  </data>
  <data name="SellsHandler.Description" xml:space="preserve">
    <value>A handler calculates statistics (amount or total volume) of a short trades</value>
  </data>
  <data name="TradeStatisticsBarsCountHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Strings Count' block gives the number of lines of trade statistics corresponding to the selected filter.</value>
  </data>
  <data name="TradeStatisticsBarsSumHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Strings Sum' block gives a value based on the sum of the values of rows of trade statistics.</value>
  </data>
  <data name="TradeStatisticsExtendedBarsCountHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extended Strings Count 1' block displays the number of lines of trade statistics corresponding to the selected filter.</value>
  </data>
  <data name="TradeStatisticsExtendedBarsCountHandler2.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extended Strings Count 2' block displays the number of lines of trade statistics corresponding to the selected filter.</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extended Strings Sum 1' block gives a value based on the sum of the values of lines of trade statistics.</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler2.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extended Strings Sum 2' block gives a value based on the sum of the values of lines of trade statistics.</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extended Extremum Price 1' block shows the maximum value of trade statistics at the extremum price.</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler2.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extended Extremum Price 2' block shows the price at which the maximum value of the histogram was reached.</value>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extremum Price' block shows the price at which the maximum value of the histogram was reached.</value>
  </data>
  <data name="TradeStatisticsExtremumValueHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Extremum Value' block shows the maximum value of trade statistics at an extreme price.</value>
  </data>
  <data name="TradeStatisticsHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics' block creates a histogram for the selected timeframe (time interval). [br]The histogram can be built on the number of trades , the volume of trades, the buy quantity, the sell quantity, the difference between the buy and sell quantity and the relative difference between the buy and sell quantity, % (see the 'View' parameter).</value>
  </data>
  <data name="TradeStatisticsCombineHandler.Description" xml:space="preserve">
    <value>The 'Stacked Trade Statistics' block summarizes the last N histograms submitted to input.</value>
  </data>
  <data name="TradeStatisticsLowerEdgeHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Lower Level' block allows you to set the cut-off data percentage for the lower level. This block is connected to the block 'Trading statistics'.</value>
  </data>
  <data name="TradeStatisticsPriceValueHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Price Value' block creates a histogram based on the selected price. Used in conjunction with the block 'Trading statistics'.</value>
  </data>
  <data name="TradeStatisticsUpperEdgeHandler.Description" xml:space="preserve">
    <value>The 'Trade Statistics Upper Level' block allows you to set the percentage of data cutoff at the upper level. This block is connected to the block 'Trading statistics'.</value>
  </data>
  <data name="VolumeForPeriodHandler.Description" xml:space="preserve">
    <value>Volume for period (total or average)</value>
  </data>
  <data name="VolumeMarketPosition.Description" xml:space="preserve">
    <value>Volume footprint shows the sum of purchases and sales for every price step or price range, depending on value of a 'Combine Steps' parameter.</value>
  </data>
  <data name="ADX.Description" xml:space="preserve">
    <value>Old algo to calculate ADX: EMA of (Input1-Input2)/(Input1+Input2)</value>
  </data>
  <data name="ADX.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="ADX.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="ADXFull.Description" xml:space="preserve">
    <value>An indicator of the Average Directional Movement Index (ADX). Helps to define a possible trend direction.</value>
  </data>
  <data name="ADXFull.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="ADXFull.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="AMA.Name" xml:space="preserve">
    <value>AMA</value>
  </data>
  <data name="AMA.Description" xml:space="preserve">
    <value>The Adaptive Moving Average.</value>
  </data>
  <data name="AMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="AMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="AroonDown.Description" xml:space="preserve">
    <value>The Aroon- indicator.</value>
  </data>
  <data name="AroonDown.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="AroonDown.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="AroonUp.Description" xml:space="preserve">
    <value>The Aroon+ indicator.</value>
  </data>
  <data name="AroonUp.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="AroonUp.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="AverageTrueRange.Name" xml:space="preserve">
    <value>ATR (Old)</value>
  </data>
  <data name="AverageTrueRange.Description" xml:space="preserve">
    <value>Old algo to calculate ATR. This indicator shows a exponentially moving average value of the True Range values (TR).</value>
  </data>
  <data name="AverageTrueRange.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="AverageTrueRange.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="AverageTrueRangeNew.Name" xml:space="preserve">
    <value>ATR</value>
  </data>
  <data name="AverageTrueRangeNew.Description" xml:space="preserve">
    <value>The average True Range (ATR). This indicator shows a moving average value of the True Range values (TR).</value>
  </data>
  <data name="AverageTrueRangeNew.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="AverageTrueRangeNew.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="BollingerBands1.Description" xml:space="preserve">
    <value>The upper Bollinger band.</value>
  </data>
  <data name="BollingerBands1.Coef.Name" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="BollingerBands1.Coef.Description" xml:space="preserve">
    <value>Width of a Bollinger band</value>
  </data>
  <data name="BollingerBands1.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="BollingerBands1.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="BollingerBands2.Description" xml:space="preserve">
    <value>The lower Bollinger band.</value>
  </data>
  <data name="BollingerBands2.Coef.Name" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="BollingerBands2.Coef.Description" xml:space="preserve">
    <value>Width of a Bollinger band</value>
  </data>
  <data name="BollingerBands2.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="BollingerBands2.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="CCI.Description" xml:space="preserve">
    <value>The Commodity Channel Index (CCI) measures deviation of instrument price from its average price.</value>
  </data>
  <data name="CCI.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="CCI.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="Compress.Interval.Name" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="Compress.Interval.Description" xml:space="preserve">
    <value>Target interval in units of security timeframe. I.e. Interval=5 for timeframe H1 results in bars in timeframe H5. But Interval=4 for timeframe M2 results in timeframe M4.</value>
  </data>
  <data name="CompressAdvanced.IntervalBase.Name" xml:space="preserve">
    <value>Interval base</value>
  </data>
  <data name="CompressAdvanced.IntervalBase.Description" xml:space="preserve">
    <value>Target timeframe base (DAYS, MINUTE, SECONDS, TICK, VOLUME, PRICERANGE).</value>
  </data>
  <data name="CompressAdvanced.Interval.Name" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="CompressAdvanced.Interval.Description" xml:space="preserve">
    <value>Target interval in units of parameter 'Interval base'.</value>
  </data>
  <data name="CompressToSeconds.Interval.Name" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="CompressToSeconds.Interval.Description" xml:space="preserve">
    <value>Target interval in seconds. I.e. Interval=16 results in timeframe S16. The source must be compatible with a target timeframe.</value>
  </data>
  <data name="CuttlerRSI.Description" xml:space="preserve">
    <value>A variation called the Cutler's RSI, based on a simple moving average. This is a momentum oscillator, measuring velocity and magnitude of directional price movements.</value>
  </data>
  <data name="CuttlerRSI.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="CuttlerRSI.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="DEMA.Name" xml:space="preserve">
    <value>DEMA</value>
  </data>
  <data name="DEMA.Description" xml:space="preserve">
    <value>The Double Exponential Moving Average.</value>
  </data>
  <data name="DEMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="DEMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="DIM.Description" xml:space="preserve">
    <value>A negative direction indicator of the Average Directional Movement Index.</value>
  </data>
  <data name="DIM.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="DIM.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="DIP.Description" xml:space="preserve">
    <value>A positive direction indicator of the Average Directional Movement Index.</value>
  </data>
  <data name="DIP.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="DIP.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="EMA.Name" xml:space="preserve">
    <value>EMA</value>
  </data>
  <data name="EMA.Description" xml:space="preserve">
    <value>The Exponential Moving Average. Calculated by summing up a previous moving average value and some part of a current closing price.</value>
  </data>
  <data name="EMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="EMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="FAMA.Name" xml:space="preserve">
    <value>FAMA</value>
  </data>
  <data name="FAMA.Description" xml:space="preserve">
    <value>The Fractal Adaptive Moving Average.</value>
  </data>
  <data name="Highest.Description" xml:space="preserve">
    <value>The highest price of an instrument in a period.</value>
  </data>
  <data name="Highest.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="Highest.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="Lowest.Description" xml:space="preserve">
    <value>The lowest price of an instrument in a period.</value>
  </data>
  <data name="Lowest.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="Lowest.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="LWMA.Name" xml:space="preserve">
    <value>LWMA</value>
  </data>
  <data name="LWMA.Description" xml:space="preserve">
    <value>The Linear-Weighted Moving Average</value>
  </data>
  <data name="LWMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="LWMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="MACD.Name" xml:space="preserve">
    <value>MACD</value>
  </data>
  <data name="MACD.Description" xml:space="preserve">
    <value>The Moving Average Convergence/Divergence. This indicator spots trend changes. Shows a ratio of two moving average values of price. Parameters of movings are hardcoded (12 and 26).</value>
  </data>
  <data name="MACDEx.Description" xml:space="preserve">
    <value>The Moving Average Convergence/Divergence with calculation periods unlocked for optimization (First EMA - Second EMA).</value>
  </data>
  <data name="MACDSig.Description" xml:space="preserve">
    <value>The MACD signal line.</value>
  </data>
  <data name="MAMA.Name" xml:space="preserve">
    <value>MAMA</value>
  </data>
  <data name="MAMA.Description" xml:space="preserve">
    <value>The Mesa Adaptive Moving Average.</value>
  </data>
  <data name="MedianPrice.Description" xml:space="preserve">
    <value>This function sums up values of High and Low in the bar, and then divides this sum by 2. This value is the middle of the bar.</value>
  </data>
  <data name="Momentum.Name" xml:space="preserve">
    <value>Momentum</value>
  </data>
  <data name="Momentum.Description" xml:space="preserve">
    <value>The Momentum indicator. Calculated as Momentum Simple = C[0] - C[n], C[0] - a current period closing price. С[n] - a closing price as it was N periods ago.</value>
  </data>
  <data name="Momentum.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="Momentum.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="MomentumOsc.Description" xml:space="preserve">
    <value>The Chande Momentum Oscillator.</value>
  </data>
  <data name="MomentumOsc.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="MomentumOsc.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="MomentumPct.Description" xml:space="preserve">
    <value>The Momentum indicator, also known as Rate Of Change (ROC). Does not accept any negative values, calculated in percents as MOMENTUM = CLOSE[i] / CLOSE[i - n] * 100)</value>
  </data>
  <data name="MomentumPct.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="MomentumPct.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="ParabolicSAR.Name" xml:space="preserve">
    <value>Parabolic SAR</value>
  </data>
  <data name="ParabolicSAR.Description" xml:space="preserve">
    <value>The Parabolic Time/Price System.</value>
  </data>
  <data name="Relative.Description" xml:space="preserve">
    <value>Relative change of price starting from the beginning of some period applied in the chart. The first bar closing price is considered to be one unit and other values are based on this unit. Indicator values are presented as percents.</value>
  </data>
  <data name="RelativeForPeriod.Description" xml:space="preserve">
    <value>Relative change of price starting from the beginning of configured timeframe. Indicator values are presented as percents.</value>
  </data>
  <data name="RSI.Name" xml:space="preserve">
    <value>RSI</value>
  </data>
  <data name="RSI.Description" xml:space="preserve">
    <value>The Relative Strength Index is a momentum oscillator, measuring velocity and magnitude of directional price movements.</value>
  </data>
  <data name="RSI.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="RSI.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="SMA.Name" xml:space="preserve">
    <value>SMA</value>
  </data>
  <data name="SMA.Description" xml:space="preserve">
    <value>The Simple Moving Average is calculated by summing up incoming values, for example, instrument close prices of some period. The result is divided by a period value.</value>
  </data>
  <data name="SMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="SMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="SMMA.Name" xml:space="preserve">
    <value>SMMA</value>
  </data>
  <data name="SMMA.Description" xml:space="preserve">
    <value>The Smoothed Moving Average.</value>
  </data>
  <data name="SMMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="SMMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="StDev.Name" xml:space="preserve">
    <value>StDev</value>
  </data>
  <data name="StDev.Description" xml:space="preserve">
    <value>The Standard Deviation indicator (RMS deviation).</value>
  </data>
  <data name="StDev.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="StDev.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="StochK.Name" xml:space="preserve">
    <value>StochK</value>
  </data>
  <data name="StochK.Description" xml:space="preserve">
    <value>The Stochastic Oscillator = (Current bar closing price - Period minimum value calculated on bar minimum) / (Bar maximum value calculated on bar maximum - Bar minimum value based on bar minimum) * 100. This indicator shows how close price is to its upper and lower borders.The indicator varies in the range from 0 to 100.</value>
  </data>
  <data name="StochK.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="StochK.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="StochRSI.Description" xml:space="preserve">
    <value>Stochastics based on relative strength index. StochRSI = (Current RSI - period minimum RSI) / (Period maximum RSI - period minimum RSI) * 100.</value>
  </data>
  <data name="StochRSI.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="StochRSI.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="SumForTimeFrameHandler.Description" xml:space="preserve">
    <value>Sum for time frame</value>
  </data>
  <data name="SummFor.Description" xml:space="preserve">
    <value>Sums up incoming values, for example, this indicator can sum up instrument close prices in some period.</value>
  </data>
  <data name="SummFor.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="SummFor.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="TEMA.Name" xml:space="preserve">
    <value>TEMA</value>
  </data>
  <data name="TEMA.Description" xml:space="preserve">
    <value>The Triple Exponential Moving Average.</value>
  </data>
  <data name="TEMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="TEMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="TestCanvasPaneHandler.Name" xml:space="preserve">
    <value>Test Canvas Pane Handler</value>
  </data>
  <data name="TestCanvasPaneHandler.Description" xml:space="preserve">
    <value>Test handler to check interaction with a CanvasPane. It is visible in developer build only.</value>
  </data>
  <data name="TRIX.Name" xml:space="preserve">
    <value>TRIX</value>
  </data>
  <data name="TRIX.Description" xml:space="preserve">
    <value>The Triple Exponential Average.</value>
  </data>
  <data name="TRIX.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="TRIX.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="TrueRange.Description" xml:space="preserve">
    <value>The True Range (TR) is the biggest one from these three values: difference between current maximum and minimum; difference between a previous closing price and a current maximum; difference between a previous closing price and a current minimum.</value>
  </data>
  <data name="TypicalPrice.Description" xml:space="preserve">
    <value>The Typical Price is an average price based on High, Low and Close. The result is called an average or typical price.</value>
  </data>
  <data name="Volatility.Name" xml:space="preserve">
    <value>Variation</value>
  </data>
  <data name="Volatility.Description" xml:space="preserve">
    <value>Variation: average of squared difference of values and corresponding SMA.</value>
  </data>
  <data name="Volatility.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="Volatility.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="ZeroLagTEMA.Description" xml:space="preserve">
    <value>The Triple Exponential Moving Average with a limited lag. </value>
  </data>
  <data name="ZeroLagTEMA.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="ZeroLagTEMA.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="AgentCurrentPosition.Description" xml:space="preserve">
    <value>This block shows a calculated position of an agent.</value>
  </data>
  <data name="CurrentPosition.Description" xml:space="preserve">
    <value>Shows a total position involving an instrument. In laboratory mode this block shows a calculated position of a script. In agent mode this block shows a value of the Current column(in the Positions window) for tradable sources.</value>
  </data>
  <data name="EstimatedMoney.Description" xml:space="preserve">
    <value>Shows your portfolio estimation. In agent mode portfolio estimation is received from your account. In laboratory mode portfolio estimation is calculated according the following formula: Portfolio Estimation = money + positions.</value>
  </data>
  <data name="FreeMoney.Description" xml:space="preserve">
    <value>Shows free money in your account. In agent mode information about free money is received from your account. In laboratory mode information about free money is calculated according to the following formula: Free Money = money - (minus)positions - (minus)money blocked in orders.</value>
  </data>
  <data name="NumDaysProfit.Description" xml:space="preserve">
    <value>Calculates profit involving an instrument received during a specified number of days.</value>
  </data>
  <data name="NumDaysProfit.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="NumDaysProfit.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="NumMinutesProfit.Description" xml:space="preserve">
    <value>Calculates profit involving an instrument received during a specified number of minutes.</value>
  </data>
  <data name="NumMinutesProfit.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="NumMinutesProfit.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="NumPositionsProfit.Description" xml:space="preserve">
    <value>Calculates profit involving an instrument received during a specified number of positions.</value>
  </data>
  <data name="NumPositionsProfit.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="NumPositionsProfit.Period.Description" xml:space="preserve">
    <value>Indicator period (processing window)</value>
  </data>
  <data name="WholeDayProfit.Description" xml:space="preserve">
    <value>Calculates profit involving an instrument received in all trades of the day.</value>
  </data>
  <data name="WholeTimeProfit.Description" xml:space="preserve">
    <value>Calculates profit involving an instrument received in all trades of the whole period.</value>
  </data>
  <data name="HoldSignalForNBars.Description" xml:space="preserve">
    <value>Holds a signal TRUE for some number of bars.</value>
  </data>
  <data name="HoldSignalForNBars.NBars.Description" xml:space="preserve">
    <value>Hold signal for N bars</value>
  </data>
  <data name="InteractiveConstGen.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="InteractiveConstGen.Value.Description" xml:space="preserve">
    <value>Value of a constant</value>
  </data>
  <data name="InteractiveConstGen.PaneSide.Name" xml:space="preserve">
    <value>Pane side</value>
  </data>
  <data name="InteractiveConstGen.PaneSide.Description" xml:space="preserve">
    <value>Pane side (vertical axis)</value>
  </data>
  <data name="InteractiveConstGen.Color.Name" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="InteractiveConstGen.Color.Description" xml:space="preserve">
    <value>Color in hexadecimal RGB format (i.e. #ff0000 - red, #00ff00 - green, #0000ff - blue)</value>
  </data>
  <data name="InteractiveConstGen.Thickness.Name" xml:space="preserve">
    <value>Thickness</value>
  </data>
  <data name="InteractiveConstGen.Thickness.Description" xml:space="preserve">
    <value>Thickness of a line</value>
  </data>
  <data name="InteractiveLineGen.PaneSide.Name" xml:space="preserve">
    <value>Pane side</value>
  </data>
  <data name="InteractiveLineGen.PaneSide.Description" xml:space="preserve">
    <value>Pane side (vertical axis)</value>
  </data>
  <data name="InteractiveLineGen.Color.Name" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="InteractiveLineGen.Color.Description" xml:space="preserve">
    <value>Color in hexadecimal RGB format (i.e. #ff0000 - red, #00ff00 - green, #0000ff - blue)</value>
  </data>
  <data name="InteractiveLineGen.Thickness.Name" xml:space="preserve">
    <value>Thickness</value>
  </data>
  <data name="InteractiveLineGen.Thickness.Description" xml:space="preserve">
    <value>Thickness of a line</value>
  </data>
  <data name="InteractiveLineGen.FirstValue.Name" xml:space="preserve">
    <value>First value</value>
  </data>
  <data name="InteractiveLineGen.FirstValue.Description" xml:space="preserve">
    <value>Y value of a first point</value>
  </data>
  <data name="InteractiveLineGen.SecondValue.Name" xml:space="preserve">
    <value>Second value</value>
  </data>
  <data name="InteractiveLineGen.SecondValue.Description" xml:space="preserve">
    <value>Y value of a second point</value>
  </data>
  <data name="MessageHandler.Description" xml:space="preserve">
    <value>When input becomes TRUE a handler sends user message to a TSLab log.</value>
  </data>
  <data name="FormatMessageHandler.Name" xml:space="preserve">
    <value>Format message</value>
  </data>
  <data name="FormatMessageHandler.Description" xml:space="preserve">
    <value>When the value appears at the input of the block 'True' outputs a formatted message to the program log.
    Formatting:
    {Input3} - user input value 3
    ...
    {Input30} - user input value 30
    {DateTime} - date and time
    {InitDeposit} - initial deposit
    {Symbol} - the name of the instrument
    {Interval} - the interval
    {lastPrice} - current price
    {EntryPrice} - entry price of the last position</value>
  </data>
  <data name="FormatMessageHandler.Message.Name" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="FormatMessageHandler.Message.Description" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="FormatMessageHandler.MessageFormat.Name" xml:space="preserve">
    <value>Message format</value>
  </data>
  <data name="FormatMessageHandler.MessageFormat.Description" xml:space="preserve">
    <value>Message format:
{Trade Name} - agent or script name
{Text} - message</value>
  </data>
  <data name="FormatMessageHandler.Tag.Name" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="FormatMessageHandler.Tag.Description" xml:space="preserve">
    <value>Additional user tag</value>
  </data>
  <data name="FormatMessageHandler.WriteToLog.Name" xml:space="preserve">
    <value>Write to log</value>
  </data>
  <data name="FormatMessageHandler.WriteToLog.Description" xml:space="preserve">
    <value>Write message to log</value>
  </data>
  <data name="FormatMessageHandler.Type.Name" xml:space="preserve">
    <value>Importance</value>
  </data>
  <data name="FormatMessageHandler.Type.Description" xml:space="preserve">
    <value>Message importance (Info, Warning, Error)</value>
  </data>
  <data name="TestCanvasPaneHandler.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="TestCanvasPaneHandler.Value.Description" xml:space="preserve">
    <value>Value of a constant</value>
  </data>
  <data name="BalancedPrice.Description" xml:space="preserve">
    <value>An average position entry price.</value>
  </data>
  <data name="BarsHeld.Description" xml:space="preserve">
    <value>Returns the number of bars to hold the position.</value>
  </data>
  <data name="CalcEntryPrice.Description" xml:space="preserve">
    <value>The calculated price of the trade at which the position was opened. In the laboratory mode it is equal to the opening price of the bar following the signal.</value>
  </data>
  <data name="DaysInPosition.Description" xml:space="preserve">
    <value>The number of days in position.</value>
  </data>
  <data name="DrowdownCount.Description" xml:space="preserve">
    <value>Calculates the number of consecutive loss positions.</value>
  </data>
  <data name="ProfitsCount.Description" xml:space="preserve">
    <value>Calculates the number of consecutive profit positions.</value>
  </data>
  <data name="EntryDate.Description" xml:space="preserve">
    <value>A date of position entry presented as number in YYMMDD format.</value>
  </data>
  <data name="EntryPrice.Description" xml:space="preserve">
    <value>In the laboratory mode, the price of the deal at which the position was opened.
In real trading mode, the average price of transactions for the placed order.
If the transaction prices are unknown, the price is taken from the order. If the order was placed with the "by market" type, then the price of 0 or the price of the upper or lower limit (for futures) for the instrument is taken.</value>
  </data>
  <data name="EntryTime.Description" xml:space="preserve">
    <value>Time of  position entry presented as number in HHMMSS format.</value>
  </data>
  <data name="HasLongPositionActive.Description" xml:space="preserve">
    <value>The Boolean function verifying if there is an active long position.</value>
  </data>
  <data name="HasPositionActive.Description" xml:space="preserve">
    <value>The Boolean function verifying that there is an active position.</value>
  </data>
  <data name="HasShortPositionActive.Description" xml:space="preserve">
    <value>The Boolean function verifying that there is an active short position.</value>
  </data>
  <data name="HasTwoLoss.Description" xml:space="preserve">
    <value>2 or more consecutive loss positions.</value>
  </data>
  <data name="IsItLossAtLastPosition.Description" xml:space="preserve">
    <value>Check if a closed position was unprofitable.</value>
  </data>
  <data name="LastClosedIsLong.Description" xml:space="preserve">
    <value>The latest position has been closed and it was long.</value>
  </data>
  <data name="LastClosedIsLong2.Description" xml:space="preserve">
    <value>The Boolean function verifying that the latest closed position was long.</value>
  </data>
  <data name="LastClosedIsShort.Description" xml:space="preserve">
    <value>The latest position has been closed and it was short.</value>
  </data>
  <data name="LastClosedIsShort2.Description" xml:space="preserve">
    <value>The Boolean function verifying that the latest closed position was short.</value>
  </data>
  <data name="LastClosedNamePositionExitDate.Description" xml:space="preserve">
    <value>The exit date of the latest closed named position (a number with format YYMMDD).</value>
  </data>
  <data name="LastClosedNamePositionExitDate.Name.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LastClosedNamePositionExitDate.Name.Description" xml:space="preserve">
    <value>Position opening signal name</value>
  </data>
  <data name="LastClosedNamePositionExitTime.Description" xml:space="preserve">
    <value>The exit time of the latest closed named position (a number with format HHMMSS).</value>
  </data>
  <data name="LastClosedNamePositionExitTime.Name.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LastClosedNamePositionExitTime.Name.Description" xml:space="preserve">
    <value>Position opening signal name</value>
  </data>
  <data name="LastClosedNamePositionExitPrice.Description" xml:space="preserve">
    <value>The exit price of the latest closed named position.</value>
  </data>
  <data name="LastClosedNamePositionExitPrice.Name.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LastClosedNamePositionExitPrice.Name.Description" xml:space="preserve">
    <value>Position opening signal name</value>
  </data>
  <data name="LastClosedPositionDate.Description" xml:space="preserve">
    <value>The date of the latest closed position (a number with format YYMMDD).</value>
  </data>
  <data name="LastClosedPositionExitDate.Description" xml:space="preserve">
    <value>The exit date of the latest closed position (a number with format YYMMDD).</value>
  </data>
  <data name="LastClosedPositionExitTime.Description" xml:space="preserve">
    <value>The exit time of the latest closed position (a number with format HHMMSS).</value>
  </data>
  <data name="LastClosedPositionTime.Description" xml:space="preserve">
    <value>The time of the latest closed position (a number with format HHMMSS).</value>
  </data>
  <data name="LastExitPrice.Description" xml:space="preserve">
    <value>The price of the latest exit.</value>
  </data>
  <data name="MAE.Name" xml:space="preserve">
    <value>MAE</value>
  </data>
  <data name="MAE.Description" xml:space="preserve">
    <value>Maximum Adverse Excursion per one contract/lot.</value>
  </data>
  <data name="MAEPct.Description" xml:space="preserve">
    <value>Maximum Adverse Excursion per one contract/lot (as percents).</value>
  </data>
  <data name="Median.Description" xml:space="preserve">
    <value>Shows deviation of the income curved line from the median.</value>
  </data>
  <data name="MFE.Name" xml:space="preserve">
    <value>MFE</value>
  </data>
  <data name="MFE.Description" xml:space="preserve">
    <value>Maximum Favorable Excursion per one contract/lot.</value>
  </data>
  <data name="MFEPct.Description" xml:space="preserve">
    <value>Maximum Favorable Excursion per one contract/lot (as percents).</value>
  </data>
  <data name="MinutesInPosition.Description" xml:space="preserve">
    <value>The number of minutes in position.</value>
  </data>
  <data name="PosActiveNameExit.Description" xml:space="preserve">
    <value>The parameter allows to give name the block Position Close. The value of this block is true if the last close for the instrument had this name.</value>
  </data>
  <data name="PosActiveNameExit.Name.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PosActiveNameExit.Name.Description" xml:space="preserve">
    <value>Close signal name</value>
  </data>
  <data name="PositionChangeEntryBarNumber.Description" xml:space="preserve">
    <value>Shows entry bar number of a changed complex position.</value>
  </data>
  <data name="PositionChangeEntryPrice.Description" xml:space="preserve">
    <value>Shows last entry price of a changed complex position. If none handler returns zero.</value>
  </data>
  <data name="PositionChangeExitBarNumber.Description" xml:space="preserve">
    <value>Shows exit bar number of a changed complex position.</value>
  </data>
  <data name="PositionChangeExitPrice.Description" xml:space="preserve">
    <value>Shows last exit price of a changed complex position. If none handler returns zero.</value>
  </data>
  <data name="PositionEntryBarNumber.Description" xml:space="preserve">
    <value>Shows a complex position entry bar number.</value>
  </data>
  <data name="PositionExitBarNumber.Description" xml:space="preserve">
    <value>Returns the number of the current bar when opening positions (in the history of all position openings)</value>
  </data>
  <data name="PositionIsVirtualClosedHandler.Description" xml:space="preserve">
    <value>Is position has virtual close (calculated only)?</value>
  </data>
  <data name="PositionIsVirtualHandler.Description" xml:space="preserve">
    <value>A handler returns TRUE if input position is virtual.</value>
  </data>
  <data name="PositionShares.Description" xml:space="preserve">
    <value>Returns initial position size</value>
  </data>
  <data name="PositionSharesByBar.Description" xml:space="preserve">
    <value>Returns current size of position in lots at every bar.</value>
  </data>
  <data name="Profit.Description" xml:space="preserve">
    <value>Profit (loss) given by the position in absolute values. Calculated per one contract/lot.</value>
  </data>
  <data name="ProfitPct.Description" xml:space="preserve">
    <value>Profit (loss) given by the position in percentage valu.Calculated per one contract/lot.</value>
  </data>
  <data name="TrailStop.Description" xml:space="preserve">
    <value>This block is identical to 'Trailing stop absolute', but its parameters are in the percentage value.</value>
  </data>
  <data name="TrailStopAbs.Description" xml:space="preserve">
    <value>The trailing stop, the values are given in absolute numbers. The block has 3 parameters describing 2 modes of functioning. [br]The 1st mode: Stop-loss is described as stop-loss, which sets the maximum fall (in case of short - growth) of the price you can accept. This fall is set in numbers. [br]The 2nd mode is selected if the price grows (in case of short the price falls) according to the value set in the parameter 'Enable Trail'. In other word he profit is being trailed. [br]The parameter 'Use the Calculated Price' allows to calculate Stop from the calculated opening price. In the Laboratory mode this is the opening price of the bar following the signal. In the real trade mode this is the price of position opening. Disabling this parameter causes using the real price received during the trading session. [br]The calculated price cannot be calculated if the box 'By Market at Fixed Price' is selected and slippage higher than 0 is set.</value>
  </data>
  <data name="BuysHandler.QuantityMode.Name" xml:space="preserve">
    <value>Quantity units</value>
  </data>
  <data name="BuysHandler.QuantityMode.Description" xml:space="preserve">
    <value>Market volume quantity units (shares, lots, trades count)</value>
  </data>
  <data name="BuysMinusSellsHandler.QuantityMode.Name" xml:space="preserve">
    <value>Quantity units</value>
  </data>
  <data name="BuysMinusSellsHandler.QuantityMode.Description" xml:space="preserve">
    <value>Market volume quantity units (shares, lots, trades count)</value>
  </data>
  <data name="Compress.Shift.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="Compress.Shift.Description" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="CompressAdvanced.Shift.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="CompressAdvanced.Shift.Description" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="Decompres.Method.Name" xml:space="preserve">
    <value>Decompress algorythm</value>
  </data>
  <data name="Decompres.Method.Description" xml:space="preserve">
    <value>Decompress algorythm</value>
  </data>
  <data name="DecompresBool.Method.Name" xml:space="preserve">
    <value>Decompress algorythm</value>
  </data>
  <data name="DecompresBool.Method.Description" xml:space="preserve">
    <value>Decompress algorythm</value>
  </data>
  <data name="FAMA.FastLimit.Name" xml:space="preserve">
    <value>Fast limit</value>
  </data>
  <data name="FAMA.FastLimit.Description" xml:space="preserve">
    <value>Fast limit parameter</value>
  </data>
  <data name="FAMA.SlowLimit.Name" xml:space="preserve">
    <value>Slow limit</value>
  </data>
  <data name="FAMA.SlowLimit.Description" xml:space="preserve">
    <value>Slow limit parameter</value>
  </data>
  <data name="InteractiveConstGen.IsNeedRecalculate.Name" xml:space="preserve">
    <value>Recalculate agent?</value>
  </data>
  <data name="InteractiveConstGen.IsNeedRecalculate.Description" xml:space="preserve">
    <value>Recalculate agent when line changes its parameters</value>
  </data>
  <data name="InteractiveLineGen.Mode.Name" xml:space="preserve">
    <value>Line type</value>
  </data>
  <data name="InteractiveLineGen.Mode.Description" xml:space="preserve">
    <value>Line type (finit, infinit, ray)</value>
  </data>
  <data name="InteractiveLineGen.FirstDateTime.Name" xml:space="preserve">
    <value>First date</value>
  </data>
  <data name="InteractiveLineGen.FirstDateTime.Description" xml:space="preserve">
    <value>Date of a first point</value>
  </data>
  <data name="InteractiveLineGen.SecondDateTime.Name" xml:space="preserve">
    <value>Second date</value>
  </data>
  <data name="InteractiveLineGen.SecondDateTime.Description" xml:space="preserve">
    <value>Date of a second point</value>
  </data>
  <data name="InteractiveLineGen.IsNeedRecalculate.Name" xml:space="preserve">
    <value>Recalculate agent?</value>
  </data>
  <data name="InteractiveLineGen.IsNeedRecalculate.Description" xml:space="preserve">
    <value>Recalculate agent when line changes its parameters</value>
  </data>
  <data name="MACDEx.Period1.Name" xml:space="preserve">
    <value>First period</value>
  </data>
  <data name="MACDEx.Period1.Description" xml:space="preserve">
    <value>First EMA period</value>
  </data>
  <data name="MACDEx.Period2.Name" xml:space="preserve">
    <value>Second period</value>
  </data>
  <data name="MACDEx.Period2.Description" xml:space="preserve">
    <value>Second EMA period</value>
  </data>
  <data name="MACDSig.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="MACDSig.Period.Description" xml:space="preserve">
    <value>Signal EMA period</value>
  </data>
  <data name="MAMA.FastLimit.Name" xml:space="preserve">
    <value>Fast limit</value>
  </data>
  <data name="MAMA.FastLimit.Description" xml:space="preserve">
    <value>Fast limit parameter</value>
  </data>
  <data name="MAMA.SlowLimit.Name" xml:space="preserve">
    <value>Slow limit</value>
  </data>
  <data name="MAMA.SlowLimit.Description" xml:space="preserve">
    <value>Slow limit parameter</value>
  </data>
  <data name="MessageHandler.Message.Name" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="MessageHandler.Message.Description" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="MessageHandler.Tag.Name" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="MessageHandler.Tag.Description" xml:space="preserve">
    <value>Additional user tag</value>
  </data>
  <data name="MessageHandler.Type.Name" xml:space="preserve">
    <value>Importance</value>
  </data>
  <data name="MessageHandler.Type.Description" xml:space="preserve">
    <value>Message importance (Info, Warning, Error)</value>
  </data>
  <data name="ParabolicSAR.AccelerationStart.Name" xml:space="preserve">
    <value>Acceleration start</value>
  </data>
  <data name="ParabolicSAR.AccelerationStart.Description" xml:space="preserve">
    <value>Initial acceleration</value>
  </data>
  <data name="ParabolicSAR.AccelerationStep.Name" xml:space="preserve">
    <value>Acceleration step</value>
  </data>
  <data name="ParabolicSAR.AccelerationStep.Description" xml:space="preserve">
    <value>Step to increase acceleration</value>
  </data>
  <data name="ParabolicSAR.AccelerationMax.Name" xml:space="preserve">
    <value>Acceleration max</value>
  </data>
  <data name="ParabolicSAR.AccelerationMax.Description" xml:space="preserve">
    <value>Acceleration limit</value>
  </data>
  <data name="RelativeForPeriod.TimeFrame.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="RelativeForPeriod.TimeFrame.Description" xml:space="preserve">
    <value>Timeframe (format D.HH:MM:SS)</value>
  </data>
  <data name="SellsHandler.QuantityMode.Name" xml:space="preserve">
    <value>Quantity units</value>
  </data>
  <data name="SellsHandler.QuantityMode.Description" xml:space="preserve">
    <value>Market volume quantity units (shares, lots, trades count)</value>
  </data>
  <data name="SessionClose.Session.Name" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionClose.Session.Description" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionHigh.Session.Name" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionHigh.Session.Description" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionLow.Session.Name" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionLow.Session.Description" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionOpen.Session.Name" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SessionOpen.Session.Description" xml:space="preserve">
    <value>Session</value>
  </data>
  <data name="SMMA.Shift.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="SMMA.Shift.Description" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="SumForTimeFrameHandler.TimeFrame.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="SumForTimeFrameHandler.TimeFrame.Description" xml:space="preserve">
    <value>Timeframe (format D.HH:MM:SS)</value>
  </data>
  <data name="VolumeForPeriodHandler.TimeFrame.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="VolumeForPeriodHandler.TimeFrame.Description" xml:space="preserve">
    <value>Timeframe (integer value in units of parameter 'Timeframe units')</value>
  </data>
  <data name="VolumeForPeriodHandler.TimeFrameUnit.Name" xml:space="preserve">
    <value>Timeframe units</value>
  </data>
  <data name="VolumeForPeriodHandler.TimeFrameUnit.Description" xml:space="preserve">
    <value>Timeframe units (second, minute, hour, day)</value>
  </data>
  <data name="VolumeForPeriodHandler.ValueMode.Name" xml:space="preserve">
    <value>Processing algo</value>
  </data>
  <data name="VolumeForPeriodHandler.ValueMode.Description" xml:space="preserve">
    <value>Processing algo (sum or average)</value>
  </data>
  <data name="NumDaysProfit.ProfitKind.Name" xml:space="preserve">
    <value>Profit kind</value>
  </data>
  <data name="NumDaysProfit.ProfitKind.Description" xml:space="preserve">
    <value>Profit kind (fixed or unfixed)</value>
  </data>
  <data name="NumMinutesProfit.ProfitKind.Name" xml:space="preserve">
    <value>Profit kind</value>
  </data>
  <data name="NumMinutesProfit.ProfitKind.Description" xml:space="preserve">
    <value>Profit kind (fixed or unfixed)</value>
  </data>
  <data name="NumPositionsProfit.ProfitKind.Name" xml:space="preserve">
    <value>Profit kind</value>
  </data>
  <data name="NumPositionsProfit.ProfitKind.Description" xml:space="preserve">
    <value>Profit kind (fixed or unfixed)</value>
  </data>
  <data name="RelativeCommisionWithMinimal.MarginPct.Name" xml:space="preserve">
    <value>Margin, %</value>
  </data>
  <data name="RelativeCommisionWithMinimal.MarginPct.Description" xml:space="preserve">
    <value>Margin to open or to keep position (as percents)</value>
  </data>
  <data name="RelativeCommission.MarginPct.Name" xml:space="preserve">
    <value>Margin, %</value>
  </data>
  <data name="RelativeCommission.MarginPct.Description" xml:space="preserve">
    <value>Margin to open or to keep position (as percents)</value>
  </data>
  <data name="WholeDayProfit.SessionStart.Name" xml:space="preserve">
    <value>Session start</value>
  </data>
  <data name="WholeDayProfit.SessionStart.Description" xml:space="preserve">
    <value>Trading session start (format 1h 30m 00s)</value>
  </data>
  <data name="WholeDayProfit.ProfitKind.Name" xml:space="preserve">
    <value>Profit kind</value>
  </data>
  <data name="WholeDayProfit.ProfitKind.Description" xml:space="preserve">
    <value>Profit kind (fixed or unfixed)</value>
  </data>
  <data name="WholeTimeProfit.ProfitKind.Name" xml:space="preserve">
    <value>Profit kind</value>
  </data>
  <data name="WholeTimeProfit.ProfitKind.Description" xml:space="preserve">
    <value>Profit kind (fixed or unfixed)</value>
  </data>
  <data name="TrailStop.StopLoss.Name" xml:space="preserve">
    <value>Stop loss</value>
  </data>
  <data name="TrailStop.StopLoss.Description" xml:space="preserve">
    <value>Initial stop loss</value>
  </data>
  <data name="TrailStop.TrailEnable.Name" xml:space="preserve">
    <value>Trail enable</value>
  </data>
  <data name="TrailStop.TrailEnable.Description" xml:space="preserve">
    <value>Where to start actual trailing</value>
  </data>
  <data name="TrailStop.TrailLoss.Name" xml:space="preserve">
    <value>Trail loss</value>
  </data>
  <data name="TrailStop.TrailLoss.Description" xml:space="preserve">
    <value>Trail loss</value>
  </data>
  <data name="TrailStop.UseCalcPrice.Name" xml:space="preserve">
    <value>Use calc price</value>
  </data>
  <data name="TrailStop.UseCalcPrice.Description" xml:space="preserve">
    <value>Use calculated price</value>
  </data>
  <data name="TrailStopAbs.StopLoss.Name" xml:space="preserve">
    <value>Stop loss</value>
  </data>
  <data name="TrailStopAbs.StopLoss.Description" xml:space="preserve">
    <value>Initial stop loss</value>
  </data>
  <data name="TrailStopAbs.TrailEnable.Name" xml:space="preserve">
    <value>Trail enable</value>
  </data>
  <data name="TrailStopAbs.TrailEnable.Description" xml:space="preserve">
    <value>Where to start actual trailing</value>
  </data>
  <data name="TrailStopAbs.TrailLoss.Name" xml:space="preserve">
    <value>Trail loss</value>
  </data>
  <data name="TrailStopAbs.TrailLoss.Description" xml:space="preserve">
    <value>Trail loss</value>
  </data>
  <data name="TrailStopAbs.UseCalcPrice.Name" xml:space="preserve">
    <value>Use calc price</value>
  </data>
  <data name="TrailStopAbs.UseCalcPrice.Description" xml:space="preserve">
    <value>Use calculated price</value>
  </data>
  <data name="AlignedSecurityHandler.TimeFrame.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="AlignedSecurityHandler.TimeFrame.Description" xml:space="preserve">
    <value>Timeframe (integer value in units of parameter 'Timeframe units')</value>
  </data>
  <data name="AlignedSecurityHandler.TimeFrameUnit.Name" xml:space="preserve">
    <value>Timeframe units</value>
  </data>
  <data name="AlignedSecurityHandler.TimeFrameUnit.Description" xml:space="preserve">
    <value>Timeframe units (second, minute, hour, day)</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.WidthPercent.Name" xml:space="preserve">
    <value>Width, %</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.WidthPercent.Description" xml:space="preserve">
    <value>A width of a hystogram relative to a width of a chart pane.</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.CombinePricesCount.Name" xml:space="preserve">
    <value>Combine price steps</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.CombinePricesCount.Description" xml:space="preserve">
    <value>How many price steps should be grouped together.</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="AllTimeTradeStatisticsHandler.Kind.Description" xml:space="preserve">
    <value>Kind of a trade statistics (trades count, trade volume, buy count, sell count, buy and sell difference, relative buy and sell difference).</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.ContractsCount.Name" xml:space="preserve">
    <value>Contracts count</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.ContractsCount.Description" xml:space="preserve">
    <value>A parameter to set contracts count to be used for trade statistics.</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.CombinePricesCount.Name" xml:space="preserve">
    <value>Combine price steps</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.CombinePricesCount.Description" xml:space="preserve">
    <value>How many price steps should be grouped together.</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.Kind.Description" xml:space="preserve">
    <value>Kind of a trade statistics (trades count, trade volume, buy count, sell count, buy and sell difference, relative buy and sell difference).</value>
  </data>
  <data name="LastTradeStatisticsHandler.TimeFrame.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="LastTradeStatisticsHandler.TimeFrame.Description" xml:space="preserve">
    <value>Timeframe (integer value in units of parameter 'Timeframe units')</value>
  </data>
  <data name="LastTradeStatisticsHandler.TimeFrameUnit.Name" xml:space="preserve">
    <value>Timeframe units</value>
  </data>
  <data name="LastTradeStatisticsHandler.TimeFrameUnit.Description" xml:space="preserve">
    <value>Timeframe units (second, minute, hour, day)</value>
  </data>
  <data name="LastTradeStatisticsHandler.CombinePricesCount.Name" xml:space="preserve">
    <value>Combine price steps</value>
  </data>
  <data name="LastTradeStatisticsHandler.CombinePricesCount.Description" xml:space="preserve">
    <value>How many price steps should be grouped together.</value>
  </data>
  <data name="LastTradeStatisticsHandler.Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="LastTradeStatisticsHandler.Kind.Description" xml:space="preserve">
    <value>Kind of a trade statistics (trades count, trade volume, buy count, sell count, buy and sell difference, relative buy and sell difference).</value>
  </data>
  <data name="TradeStatisticsBarsCountHandler.TrimValue.Name" xml:space="preserve">
    <value>Trim value</value>
  </data>
  <data name="TradeStatisticsBarsCountHandler.TrimValue.Description" xml:space="preserve">
    <value>Trim value.</value>
  </data>
  <data name="TradeStatisticsBarsCountHandler.TrimComparisonMode.Name" xml:space="preserve">
    <value>Comparison operator</value>
  </data>
  <data name="TradeStatisticsBarsCountHandler.TrimComparisonMode.Description" xml:space="preserve">
    <value>Comparison operator for trimming (greater, greater or equal, less, less or equal, equal, not equal).</value>
  </data>
  <data name="TradeStatisticsBarsSumHandler.TrimValue.Name" xml:space="preserve">
    <value>Trim value</value>
  </data>
  <data name="TradeStatisticsBarsSumHandler.TrimValue.Description" xml:space="preserve">
    <value>Trim value.</value>
  </data>
  <data name="TradeStatisticsBarsSumHandler.TrimComparisonMode.Name" xml:space="preserve">
    <value>Comparison operator</value>
  </data>
  <data name="TradeStatisticsBarsSumHandler.TrimComparisonMode.Description" xml:space="preserve">
    <value>Comparison operator for trimming (greater, greater or equal, less, less or equal, equal, not equal).</value>
  </data>
  <data name="TradeStatisticsExtendedBarsCountHandler.TrimComparisonMode.Name" xml:space="preserve">
    <value>Comparison operator</value>
  </data>
  <data name="TradeStatisticsExtendedBarsCountHandler.TrimComparisonMode.Description" xml:space="preserve">
    <value>Comparison operator for trimming (greater, greater or equal, less, less or equal, equal, not equal).</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler.Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler.Kind.Description" xml:space="preserve">
    <value>Kind of a trade statistics (trades count, trade volume, buy count, sell count, buy and sell difference, relative buy and sell difference).</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler.TrimComparisonMode.Name" xml:space="preserve">
    <value>Comparison operator</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler.TrimComparisonMode.Description" xml:space="preserve">
    <value>Comparison operator for trimming (greater, greater or equal, less, less or equal, equal, not equal).</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler2.Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="TradeStatisticsExtendedBarsSumHandler2.Kind.Description" xml:space="preserve">
    <value>Kind of a trade statistics (trades count, trade volume, buy count, sell count, buy and sell difference, relative buy and sell difference).</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler.PriceMode.Name" xml:space="preserve">
    <value>Extremum kind</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler.PriceMode.Description" xml:space="preserve">
    <value>Extremum kind (minimum, maximum).</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler2.PriceMode.Name" xml:space="preserve">
    <value>Extremum kind</value>
  </data>
  <data name="TradeStatisticsExtendedExtremumPriceHandler2.PriceMode.Description" xml:space="preserve">
    <value>Extremum kind (minimum, maximum).</value>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.TrimValueMode.Name" xml:space="preserve">
    <value>Trim value mode</value>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.TrimValueMode.Description" xml:space="preserve">
    <value />
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.TrimValue.Name" xml:space="preserve">
    <value>Trim value</value>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.TrimValue.Description" xml:space="preserve">
    <value>Trim value.</value>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.PriceMode.Name" xml:space="preserve">
    <value>Extremum kind</value>
  </data>
  <data name="TradeStatisticsExtremumPriceHandler.PriceMode.Description" xml:space="preserve">
    <value>Extremum kind (minimum, maximum).</value>
  </data>
  <data name="TradeStatisticsHandler.TimeFrameKind.Name" xml:space="preserve">
    <value>Time frame kind</value>
  </data>
  <data name="TradeStatisticsHandler.TimeFrameKind.Description" xml:space="preserve">
    <value>Time frame kind (from now to past, from midnight to now).</value>
  </data>
  <data name="TradeStatisticsHandler.StartTime.Name" xml:space="preserve">
    <value>Start time</value>
  </data>
  <data name="TradeStatisticsHandler.StartTime.Description" xml:space="preserve">
    <value>Start building a profile.</value>
  </data>
  <data name="TradeStatisticsHandler.TimeFrame.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="TradeStatisticsHandler.TimeFrame.Description" xml:space="preserve">
    <value>Timeframe (integer value in units of parameter 'Timeframe units')</value>
  </data>
  <data name="TradeStatisticsHandler.TimeFrameUnit.Name" xml:space="preserve">
    <value>Timeframe units</value>
  </data>
  <data name="TradeStatisticsHandler.TimeFrameUnit.Description" xml:space="preserve">
    <value>Timeframe units (second, minute, hour, day)</value>
  </data>
  <data name="TradeStatisticsHandler.CombinePricesCount.Name" xml:space="preserve">
    <value>Combine price steps</value>
  </data>
  <data name="TradeStatisticsHandler.CombinePricesCount.Description" xml:space="preserve">
    <value>How many price steps should be grouped together.</value>
  </data>
  <data name="TradeStatisticsHandler.Kind.Name" xml:space="preserve">
    <value>Kind</value>
  </data>
  <data name="TradeStatisticsHandler.Kind.Description" xml:space="preserve">
    <value>Kind of a trade statistics (trades count, trade volume, buy count, sell count, buy and sell difference, relative buy and sell difference).</value>
  </data>
  <data name="TradeStatisticsLowerEdgeHandler.TrimLevelPercent.Name" xml:space="preserve">
    <value>Trim level, %</value>
  </data>
  <data name="TradeStatisticsLowerEdgeHandler.TrimLevelPercent.Description" xml:space="preserve">
    <value>Trim level (as percents).</value>
  </data>
  <data name="TradeStatisticsUpperEdgeHandler.TrimLevelPercent.Name" xml:space="preserve">
    <value>Trim level, %</value>
  </data>
  <data name="TradeStatisticsUpperEdgeHandler.TrimLevelPercent.Description" xml:space="preserve">
    <value>Trim level (as percents).</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.WidthPercent.Name" xml:space="preserve">
    <value>Width, %</value>
  </data>
  <data name="LastContractsTradeStatisticsHandler.WidthPercent.Description" xml:space="preserve">
    <value>A width of a hystogram relative to a width of a chart pane.</value>
  </data>
  <data name="LastTradeStatisticsHandler.WidthPercent.Name" xml:space="preserve">
    <value>Width, %</value>
  </data>
  <data name="LastTradeStatisticsHandler.WidthPercent.Description" xml:space="preserve">
    <value>A width of a hystogram relative to a width of a chart pane.</value>
  </data>
  <data name="TradeStatisticsHandler.WidthPercent.Name" xml:space="preserve">
    <value>Width, %</value>
  </data>
  <data name="TradeStatisticsHandler.WidthPercent.Description" xml:space="preserve">
    <value>A width of a hystogram relative to a width of a chart pane.</value>
  </data>
  <data name="SpecifiedQuantityPriceAtTradeHandler.Name" xml:space="preserve">
    <value>Specified quantity price at trade</value>
  </data>
  <data name="SpecifiedQuantityPriceAtTradeHandler.Description" xml:space="preserve">
    <value>Specified quantity price at trade</value>
  </data>
  <data name="SpecifiedQuantityPriceAtTradeHandler.Quantity.Name" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="SpecifiedQuantityPriceAtTradeHandler.Quantity.Description" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="SpecifiedQuantityPriceAtTradeHandler.Direction.Name" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="SpecifiedQuantityPriceAtTradeHandler.Direction.Description" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="BarsCountForValuesSumHandler.Name" xml:space="preserve">
    <value>Number of bars for the sum of values</value>
  </data>
  <data name="BarsCountForValuesSumHandler.Description" xml:space="preserve">
    <value>Number of bars for the sum of values</value>
  </data>
  <data name="BarsCountForValuesSumHandler.ValuesSum.Name" xml:space="preserve">
    <value>Values sum</value>
  </data>
  <data name="BarsCountForValuesSumHandler.ValuesSum.Description" xml:space="preserve">
    <value>Indicator values sum</value>
  </data>
  <data name="ControlMessageHandler.Name" xml:space="preserve">
    <value>Control message</value>
  </data>
  <data name="ControlMessageHandler.Description" xml:space="preserve">
    <value>Outputs control message</value>
  </data>
  <data name="ControlMessageHandler.TrueMessage.Name" xml:space="preserve">
    <value>True message</value>
  </data>
  <data name="ControlMessageHandler.TrueMessage.Description" xml:space="preserve">
    <value>True message</value>
  </data>
  <data name="ControlMessageHandler.FalseMessage.Name" xml:space="preserve">
    <value>False message</value>
  </data>
  <data name="ControlMessageHandler.FalseMessage.Description" xml:space="preserve">
    <value>False message</value>
  </data>
  <data name="ControlMessageHandler.Message.Name" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="ControlMessageHandler.Message.Description" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="ExportValuesHandler.Name" xml:space="preserve">
    <value>Export values</value>
  </data>
  <data name="ImportBoolValuesHandler.Name" xml:space="preserve">
    <value>Import bool values</value>
  </data>
  <data name="ImportDoubleValuesHandler.Name" xml:space="preserve">
    <value>Import double values</value>
  </data>
  <data name="ImportIntValuesHandler.Name" xml:space="preserve">
    <value>Import int values</value>
  </data>
  <data name="TimestampHandler.Name" xml:space="preserve">
    <value>Timestamp</value>
  </data>
  <data name="LastClosedPositionExitBarNumber.Name" xml:space="preserve">
    <value>Exit bar number of last closed position</value>
  </data>
  <data name="LastClosedPositionExitBarNumber.Description" xml:space="preserve">
    <value>The exit bar number of the latest closed position.</value>
  </data>
  <data name="OrderBookPrice.Name" xml:space="preserve">
    <value>Order book, price</value>
  </data>
  <data name="OrderBookPrice.Description" xml:space="preserve">
    <value>Price value from a row of the order book.</value>
  </data>
  <data name="OrderBookPrice.Buy.Name" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="OrderBookPrice.Buy.Description" xml:space="preserve">
    <value>On - Buy, Off - Sell</value>
  </data>
  <data name="OrderBookPrice.Index.Name" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="OrderBookPrice.Index.Description" xml:space="preserve">
    <value>Index of row starting at 0, from the middle of the order book.</value>
  </data>
  <data name="OrderBookQty.Name" xml:space="preserve">
    <value>Order book, quantity</value>
  </data>
  <data name="OrderBookQty.Description" xml:space="preserve">
    <value>Quantity value from a row of the order book.</value>
  </data>
  <data name="OrderBookQty.Buy.Name" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="OrderBookQty.Buy.Description" xml:space="preserve">
    <value>On - Buy, Off - Sell</value>
  </data>
  <data name="OrderBookQty.Index.Name" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="OrderBookQty.Index.Description" xml:space="preserve">
    <value>Index of row starting at 0, from the middle of the order book.</value>
  </data>
  <data name="OrderBookTotal.Name" xml:space="preserve">
    <value>Order book, total</value>
  </data>
  <data name="OrderBookTotal.Description" xml:space="preserve">
    <value>Total ask/bid for the depth of the order book.</value>
  </data>
  <data name="OrderBookTotal.Buy.Name" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="OrderBookTotal.Buy.Description" xml:space="preserve">
    <value>On - Buy, Off - Sell</value>
  </data>
  <data name="OrderBookTotal.NumberRows.Name" xml:space="preserve">
    <value>Number of rows</value>
  </data>
  <data name="OrderBookTotal.NumberRows.Description" xml:space="preserve">
    <value>Number of rows from the middle of the order book for which the total</value>
  </data>
  <data name="ResultForOptimization.Name" xml:space="preserve">
    <value>Result for optimization</value>
  </data>
  <data name="ResultForOptimization.Description" xml:space="preserve">
    <value>Value for showing in the "Result from script" column in the optimization results grid.</value>
  </data>
  <data name="ControlledBoolBreaker.Name" xml:space="preserve">
    <value>Controlled Boolean Breaker</value>
  </data>
  <data name="ControlledBoolBreaker.Description" xml:space="preserve">
    <value>Sets a FALSE value at every candle except the last one. For the last value sets a selected TRUE/FALSE value. This block is used together with the control pane buttons. When signaled, the Value parameter reset automatically.</value>
  </data>
  <data name="ControlledBoolBreaker.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ControlledBoolBreaker.Value.Description" xml:space="preserve">
    <value>Set true for waiting a signal. Reset automatically when signaled.</value>
  </data>
  <data name="RecalcScheduler.Name" xml:space="preserve">
    <value>Recalc Scheduler</value>
  </data>
  <data name="RecalcScheduler.Description" xml:space="preserve">
    <value>Execute a script by schedule.</value>
  </data>
  <data name="RecalcScheduler.RecalcTime.Name" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="RecalcScheduler.RecalcTime.Description" xml:space="preserve">
    <value>Executing time.</value>
  </data>
  <data name="EventKindHandler.Name" xml:space="preserve">
    <value>Event</value>
  </data>
  <data name="EventKindHandler.Description" xml:space="preserve">
    <value>During the next recalculation, if the specified event is executed, the Event block will return the value true. This value can be used in the algorithm. [br]The block can be used many times in the editor. The block connects to the source, returns an event for the tool.</value>
  </data>
  <data name="EventKindHandler.EventKind.Name" xml:space="preserve">
    <value>Event kind</value>
  </data>
  <data name="EventKindHandler.EventKind.Description" xml:space="preserve">
    <value>Event type: None, Order rejected, Order filled, Position opening, Position closing, Order quantity changed, Trading is started, Trading is stopped, Order canceled, Pretrade limitation.</value>
  </data>
  <data name="RandomHandler.Name" xml:space="preserve">
    <value>Random number</value>
  </data>
  <data name="RandomHandler.Description" xml:space="preserve">
    <value>Random number in the specified range.</value>
  </data>
  <data name="RandomHandler.MinValue.Name" xml:space="preserve">
    <value>Min value</value>
  </data>
  <data name="RandomHandler.MaxValue.Name" xml:space="preserve">
    <value>Max value</value>
  </data>
  <data name="RandomHandler.Precision.Name" xml:space="preserve">
    <value>Precision</value>
  </data>
  <data name="RandomHandler.Precision.Description" xml:space="preserve">
    <value>The number of decimal places.</value>
  </data>
  <data name="RandomHandler.Seed.Name" xml:space="preserve">
    <value>Seed</value>
  </data>
  <data name="RandomHandler.Seed.Description" xml:space="preserve">
    <value>A number used to calculate a starting value for the pseudo-random number sequence. (0 - not set).</value>
  </data>
  <data name="RandomHandler.SaveHistory.Name" xml:space="preserve">
    <value>Save history</value>
  </data>
  <data name="PositionByName.Name" xml:space="preserve">
    <value>Position by name</value>
  </data>
  <data name="PositionByName.Description" xml:space="preserve">
    <value>Get the position value from the Positions table.</value>
  </data>
  <data name="PositionByName.Symbol.Name" xml:space="preserve">
    <value>Symbol</value>
  </data>
  <data name="PositionByName.Symbol.Description" xml:space="preserve">
    <value>Symbol from the position table.</value>
  </data>
  <data name="PositionByName.Account.Name" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="PositionByName.Account.Description" xml:space="preserve">
    <value>Account name (optional).</value>
  </data>
  <data name="PositionByName.Currency.Name" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="PositionByName.Currency.Description" xml:space="preserve">
    <value>Currency name (optional).</value>
  </data>
  <data name="PositionByName.PositionField.Name" xml:space="preserve">
    <value>Position field</value>
  </data>
  <data name="PositionByName.PositionField.Description" xml:space="preserve">
    <value>Output position field.</value>
  </data>
  <data name="AgentsInfo.Name" xml:space="preserve">
    <value>Table Agents</value>
  </data>
  <data name="AgentsInfo.Description" xml:space="preserve">
    <value>Designed to work with the Agents table from a script.
Returns a numeric value corresponding to the selected table field.
Depending on the data provider, use the account or the account currency to determine whether the instrument belongs to the market.
For most markets, it is enough to specify a Ticker.</value>
  </data>
  <data name="AgentsInfo.AgentName.Name" xml:space="preserve">
    <value>Agent</value>
  </data>
  <data name="AgentsInfo.AgentName.Description" xml:space="preserve">
    <value>The name of the agent from the Agents table.</value>
  </data>
  <data name="AgentsInfo.SecurityName.Name" xml:space="preserve">
    <value>Tiker</value>
  </data>
  <data name="AgentsInfo.SecurityName.Description" xml:space="preserve">
    <value>Instrument name.</value>
  </data>
  <data name="AgentsInfo.AccountName.Name" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="AgentsInfo.AccountName.Description" xml:space="preserve">
    <value>Account name (optional).</value>
  </data>
  <data name="AgentsInfo.CurrencyName.Name" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="AgentsInfo.CurrencyName.Description" xml:space="preserve">
    <value>Account currency (optional).</value>
  </data>
  <data name="AgentsInfo.AgentField.Name" xml:space="preserve">
    <value>Output value</value>
  </data>
  <data name="AgentsInfo.AgentField.Description" xml:space="preserve">
    <value>The output value from the table corresponding to the settings.</value>
  </data>
  <data name="QuoteByName.Name" xml:space="preserve">
    <value>Quote by name</value>
  </data>
  <data name="QuoteByName.Description" xml:space="preserve">
    <value>Get the value from the Quote table.</value>
  </data>
  <data name="QuoteByName.Quote.Name" xml:space="preserve">
    <value>Quote</value>
  </data>
  <data name="NetValueByAccount.Name" xml:space="preserve">
    <value>Net value by account</value>
  </data>
  <data name="NetValueByAccount.Description" xml:space="preserve">
    <value>Get the total net value of the account. If the account is not specified, the account name is taken from the agent (only in agent mode).</value>
  </data>
  <data name="NetValueByAccount.Account.Name" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="NetValueByAccount.Account.Description" xml:space="preserve">
    <value>Account name (optional).</value>
  </data>
  <data name="LastExitAvgPrice.Name" xml:space="preserve">
    <value>Average exit price last position</value>
  </data>
  <data name="LastExitAvgPrice.Description" xml:space="preserve">
    <value>Average exit price last position.</value>
  </data>
  <data name="LastClosedNamePositionAvgExitPrice.Name" xml:space="preserve">
    <value>Average exit price last position by name</value>
  </data>
  <data name="LastClosedNamePositionAvgExitPrice.Description" xml:space="preserve">
    <value>Average exit price last position by name.</value>
  </data>
  <data name="LastClosedNamePositionAvgExitPrice.Name.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LastClosedNamePositionAvgExitPrice.Name.Description" xml:space="preserve">
    <value>Position opening signal name</value>
  </data>
  <data name="ChannelHandler.ChannelApiKey.Description" xml:space="preserve">
    <value>The key that determines which TSChannel the values will be transmitted to. Copy the API Key value from the "Transmitter" of the corresponding channel in your account on signal.tslab.pro</value>
  </data>
  <data name="ChannelHandler.ChannelApiKey.Name" xml:space="preserve">
    <value>Api Key</value>
  </data>
  <data name="ChannelHandler.Name" xml:space="preserve">
    <value>Transmitter‌</value>
  </data>
  <data name="ParameterSenderHandler.Name" xml:space="preserve">
    <value>Parameter Encoder</value>
  </data>
  <data name="ReceiverHandler.Name" xml:space="preserve">
    <value>Receiver</value>
  </data>
  <data name="ReceiverHandler.ReceiverApiKey.Description" xml:space="preserve">
    <value>The key that determines which TSChannel values will be taken from. Copy the API Key value from the "Receiver" of the corresponding channel in your account on signal.tslab.pro</value>
  </data>
  <data name="ReceiverHandler.ReceiverApiKey.Name" xml:space="preserve">
    <value>Api Key</value>
  </data>
  <data name="ReceiverHandler.ChannelApiKey.Name" xml:space="preserve">
    <value>Channel Api Key</value>
  </data>
  <data name="ReceiverHandler.ChannelApiKey.Description" xml:space="preserve">
    <value>Channel Api Key to test access for channel</value>
  </data>
  <data name="IsReceiverOnline.Name" xml:space="preserve">
    <value>Is Receiver Online</value>
  </data>
  <data name="ValueReceiverHandler.Name" xml:space="preserve">
    <value>Value Decoder</value>
  </data>
  <data name="ValueReceiverHandler.Value.Description" xml:space="preserve">
    <value>Extracts the value corresponding to the desired key from the received data packet and makes it available for further calculations.</value>
  </data>
  <data name="ValueReceiverHandler.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ValueSenderHandler.Name" xml:space="preserve">
    <value>Value Encoder</value>
  </data>
  <data name="BoolReceiverHandler.Name" xml:space="preserve">
    <value>Boolean Decoder</value>
  </data>
  <data name="BoolReceiverHandler.Value.Description" xml:space="preserve">
    <value>Extracts the value corresponding to the desired key from the received data packet and makes it available for further calculations.</value>
  </data>
  <data name="BoolReceiverHandler.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="AddPositionHandler.Name" xml:space="preserve">
    <value>Add position in cycle</value>
  </data>
  <data name="AddPositionHandler.UseVirtualClosing.Name" xml:space="preserve">
    <value>Use "Virtual Closing"</value>
  </data>
  <data name="AddPositionHandler.Description" xml:space="preserve">
    <value>A pass on the bar is performed for all iteration cycles. During the passage, the positions that need to be opened are calculated. As many positions is added, as many iterations returned the result true.</value>
  </data>
  <data name="AddPositionHandler.UseVirtualClosing.Description" xml:space="preserve">
    <value>This parameter is necessary for cases when the position closing signal is missed, so that there are no new gaps. It says that the position signal was issued by the script, but the real application has not yet passed. For example, auto-closing is expected. If the option is enabled, the Cycle will move to the next free iteration, if it is disabled, there will be no new position openings.</value>
  </data>
  <data name="CycleAndHandler.Description" xml:space="preserve">
    <value>If the Boolean values take the value true on all iterations, then, at the output of the block, the value true is returned on the bar (on recalculation). If one of the Logical Values takes the value false, the value false is returned at the output of the block.</value>
  </data>
  <data name="CycleAndHandler.Name" xml:space="preserve">
    <value>Cycle End</value>
  </data>
  <data name="CycleBoolResultHandler.Description" xml:space="preserve">
    <value>Outputs a logical value from the loop to the bar by the iteration number.</value>
  </data>
  <data name="CycleBoolResultHandler.Index.Description" xml:space="preserve">
    <value>a logical result based on the iteration number of the cycle</value>
  </data>
  <data name="CycleBoolResultHandler.Index.Name" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="CycleBoolResultHandler.Name" xml:space="preserve">
    <value>Cycle logic result</value>
  </data>
  <data name="CycleBoolResultHandler.UseLastIndex.Description" xml:space="preserve">
    <value>always use the last iteration number of the cycle</value>
  </data>
  <data name="CycleBoolResultHandler.UseLastIndex.Name" xml:space="preserve">
    <value>Use last index</value>
  </data>
  <data name="CycleBoolResultsHandler.Description" xml:space="preserve">
    <value>Can be displayed on the chart. The chart will display all the iterations of the cycle. The block results can be passed to another Cycle, with the same number of iterations supported. Nested cycles are not supported.</value>
  </data>
  <data name="CycleBoolResultsHandler.Name" xml:space="preserve">
    <value>Cycle logic results</value>
  </data>
  <data name="CycleHandler.Description" xml:space="preserve">
    <value>At the top of the Cycle block there is a service connector for communication with the blocks of opening positions or updated values (simple and updatable cycle value). Thus, the entry into the cycle is indicated (the beginning of the calculation of the cycle). If this connector is not connected to anything, then the first formula (or logical formula) for which the output from the Cycle block is submitted and in which there is an appeal to the Cycle block by its name is considered to be the beginning of the calculation of the cycle.[br]All the blocks that are connected between the beginning of the cycle and the end of the cycle participate in the calculation of the results of the cycle. All the blocks that are connected between the beginning of the cycle and the end of the cycle participate in the calculation of the results of the cycle and they can't be tied to another cycle.</value>
  </data>
  <data name="CycleHandler.MaxCount.Description" xml:space="preserve">
    <value>specifies the maximum number of iterations.</value>
  </data>
  <data name="CycleHandler.MaxCount.Name" xml:space="preserve">
    <value>Maximum number</value>
  </data>
  <data name="CycleHandler.Name" xml:space="preserve">
    <value>Cycle</value>
  </data>
  <data name="CycleOrHandler.Description" xml:space="preserve">
    <value>If in one of the iterations the logical value takes the value true, then the block output returns the value true on the bar (on recalculation), otherwise the value false is returned. At the input, the results of the logical values of the cycle work, for example, a logical formula.</value>
  </data>
  <data name="CycleOrHandler.Name" xml:space="preserve">
    <value>Cycle Or</value>
  </data>
  <data name="CycleDoubleResultHandler.Description" xml:space="preserve">
    <value>Returns the value by the iteration number, and outputs the value to the bar.</value>
  </data>
  <data name="CycleDoubleResultHandler.Index.Description" xml:space="preserve">
    <value>indicates from which iteration it is necessary to copy the real value to output it to the bar.</value>
  </data>
  <data name="CycleDoubleResultHandler.Index.Name" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="CycleDoubleResultHandler.Name" xml:space="preserve">
    <value>Cycle result</value>
  </data>
  <data name="CycleDoubleResultHandler.UseLastIndex.Name" xml:space="preserve">
    <value>Use latest index</value>
  </data>
  <data name="CycleDoubleResultsHandler.Description" xml:space="preserve">
    <value>Can be displayed on a chart. It can be passed to another cycle, with the same number of iterations supported. Nested cycles are not supported. A service connector for displaying the parameter to the control panel.</value>
  </data>
  <data name="CycleDoubleResultsHandler.Name" xml:space="preserve">
    <value>Cycle results</value>
  </data>
  <data name="CycleValueUpdaterHandler.Description" xml:space="preserve">
    <value>The usual updated value in the cycle moves from the old iteration to the value of the new iteration. The updated cycle value works with an array of iteration values. The output is a list of real values. For each iteration of the cycle, its own separate, independently updated value is maintained.</value>
  </data>
  <data name="CycleValueUpdaterHandler.ExecutionOrder.Description" xml:space="preserve">
    <value>Determines the queue for calculating the Updated value in the algorithm, in the general order (by default), at the end of the algorithm (in the queue of this calculation branch) or after leaving the position.</value>
  </data>
  <data name="CycleValueUpdaterHandler.ExecutionOrder.Name" xml:space="preserve">
    <value>Execution order</value>
  </data>
  <data name="CycleValueUpdaterHandler.Name" xml:space="preserve">
    <value>Cycle updatable value</value>
  </data>
  <data name="CycleValueUpdaterHandler.StartFrom.Description" xml:space="preserve">
    <value>The initial value of the block.</value>
  </data>
  <data name="CycleValueUpdaterHandler.StartFrom.Name" xml:space="preserve">
    <value>Initial</value>
  </data>
  <data name="ExportValuesHandler.Description" xml:space="preserve">
    <value>Passes the value by the identifier set by the user.</value>
  </data>
  <data name="ExportValuesHandler.Id.Name" xml:space="preserve">
    <value>Identifier</value>
  </data>
  <data name="ImportBoolValuesHandler.Description" xml:space="preserve">
    <value>Returns a Boolean value, according to the identifier set in the Export values block.</value>
  </data>
  <data name="ImportBoolValuesHandler.Id.Name" xml:space="preserve">
    <value>Identifier</value>
  </data>
  <data name="ImportDoubleValuesHandler.Description" xml:space="preserve">
    <value>Returns a Double value, according to the identifier set in the Export values block.</value>
  </data>
  <data name="ImportDoubleValuesHandler.Id.Name" xml:space="preserve">
    <value>Identifier</value>
  </data>
  <data name="ImportIntValuesHandler.Description" xml:space="preserve">
    <value>Returns an integer, according to the Identifier set in the Export values block.</value>
  </data>
  <data name="ImportIntValuesHandler.Id.Name" xml:space="preserve">
    <value>Identifier</value>
  </data>
  <data name="TimestampHandler.Description" xml:space="preserve">
    <value>Time in Unix Time Stamp format with milliseconds. [br]Feature: the block returns a number without conversions, regardless of the "Local Time" settings in the data provider. The block gives the corresponding UTC time/date in the UTS format on the bar.</value>
  </data>
  <data name="ChannelHandler.Description" xml:space="preserve">
    <value>Transmits all the “key: value” pairs formed by packer blocks to the TSChannel server. The transfer of a batch of values occurs at the time of recalculation of the script.</value>
  </data>
  <data name="ParameterSenderHandler.Description" xml:space="preserve">
    <value>Generates a “Key/Value” pair based on a parameter of another block, for example, an indicator. [br]Block’s Name defines the key (name) of the value passed to the channel. When it is received in another script, it will be possible to identify the value by this name.</value>
  </data>
  <data name="ReceiverHandler.Description" xml:space="preserve">
    <value>Receives data packets from the TSChannel. A new data packet is received when the script is being recalculated.</value>
  </data>
  <data name="ValueReceiverHandler.Description" xml:space="preserve">
    <value>Receives data packets from the TSChannel. A new data packet is received when the script is being recalculated.</value>
  </data>
  <data name="ValueSenderHandler.Description" xml:space="preserve">
    <value>Generates a “Key/Value” pair based on the value calculated in the script. [br]Block’s Name defines the key (name) of the value passed to the channel. When it is received in another script, it will be possible to identify the value by this name.</value>
  </data>
  <data name="LotSize.Name" xml:space="preserve">
    <value>Lot size</value>
  </data>
  <data name="LotSize.Description" xml:space="preserve">
    <value>Lot size of a security. The block returns the number of shares in one lot. This value is shown also in 'Quotes' table.</value>
  </data>
  <data name="PriceMax.Description" xml:space="preserve">
    <value>The block returns the upper limit of the instrument from quotes. The maximum possible price for this instrument for this session.</value>
  </data>
  <data name="PriceMin.Description" xml:space="preserve">
    <value>The block returns the lower limit of the instrument from quotes. The minimum possible price for this instrument for this session.</value>
  </data>
  <data name="SaveToGlobalCache2.Name" xml:space="preserve">
    <value>Save to Global Cache</value>
  </data>
  <data name="SaveToGlobalCache2.Description" xml:space="preserve">
    <value>Save any indicator to Global Cache. The last value is recorded.</value>
  </data>
  <data name="SaveToGlobalCache2.Name.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SaveToGlobalCache2.Name.Description" xml:space="preserve">
    <value>Unique name in the Global Cache</value>
  </data>
  <data name="SaveToGlobalCache2.SaveToStorage.Name" xml:space="preserve">
    <value>Save to disk</value>
  </data>
  <data name="SaveToGlobalCache2.SaveToStorage.Description" xml:space="preserve">
    <value>Save to HDD to use indicator values across different program sessions</value>
  </data>
  <data name="SaveToGlobalCache2.SaveToNextBar.Name" xml:space="preserve">
    <value>Save to next bar</value>
  </data>
  <data name="SaveToGlobalCache2.SaveToNextBar.Description" xml:space="preserve">
    <value>Save the new value to the next bar. If disabled, it will save to the current bar.</value>
  </data>
  <data name="SaveToGlobalCache2.MaxValues.Name" xml:space="preserve">
    <value>Maximum numbers</value>
  </data>
  <data name="SaveToGlobalCache2.MaxValues.Description" xml:space="preserve">
    <value>The maximum number of values. If 0, then it will be limited by the number of bars</value>
  </data>
  <data name="SaveToGlobalCache2.NotTrim.Name" xml:space="preserve">
    <value>Do not trim</value>
  </data>
  <data name="SaveToGlobalCache2.NotTrim.Description" xml:space="preserve">
    <value>When saving, do not limit the data. When enabling this setting, the 'Maximum numbers' setting will not be taken into account</value>
  </data>
  <data name="SaveToGlobalCache2.IsTraceToFile.Name" xml:space="preserve">
    <value>Log to file</value>
  </data>
  <data name="SaveToGlobalCache2.IsTraceToFile.Description" xml:space="preserve">
    <value>Log data to file Temp\GlobalCache_{name}.txt</value>
  </data>
  <data name="LoadFromGlobalCache2.Name" xml:space="preserve">
    <value>Load from Global Cache</value>
  </data>
  <data name="LoadFromGlobalCache2.Description" xml:space="preserve">
    <value>Load indicator from Global Cache</value>
  </data>
  <data name="LoadFromGlobalCache2.Name.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LoadFromGlobalCache2.Name.Description" xml:space="preserve">
    <value>Unique name in the Global Cache</value>
  </data>
  <data name="LoadFromGlobalCache2.LoadFromStorage.Name" xml:space="preserve">
    <value>Load from disk</value>
  </data>
  <data name="LoadFromGlobalCache2.LoadFromStorage.Description" xml:space="preserve">
    <value>Load from HDD to use indicator values across different program sessions</value>
  </data>
  <data name="InstrumentByName.Name" xml:space="preserve">
    <value>Instrument by name</value>
  </data>
  <data name="InstrumentByName.Description" xml:space="preserve">
    <value>Find the instrument by name in the List of instruments. If the instrument is not found by name, it returns the first one in the list.</value>
  </data>
  <data name="InstrumentByName.Name.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="InstrumentByNumber.Name" xml:space="preserve">
    <value>Instrument by number</value>
  </data>
  <data name="InstrumentByNumber.Description" xml:space="preserve">
    <value>Find the instrument by number in the List of instruments.</value>
  </data>
  <data name="InstrumentByNumber.Number.Name" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="WeightedAveragePrice.Name" xml:space="preserve">
    <value>Weighted average bar price</value>
  </data>
  <data name="WeightedAveragePrice.Description" xml:space="preserve">
    <value>The block contains the weighted average price of a bar, about on trades on the instrument. For correct work, use the second chart. 1 min = 60 sec.</value>
  </data>
  <data name="WeightedAveragePrice.Direction.Name" xml:space="preserve">
    <value>Direction trades</value>
  </data>
  <data name="BarsTickDataHandler.Name" xml:space="preserve">
    <value>Bars tick data</value>
  </data>
  <data name="BarsTickDataHandler.Description" xml:space="preserve">
    <value>Designed to work with cached data from quotes. Builds bars with the source interval. To work, use the second interval of the source. For example, 60 seconds.</value>
  </data>
  <data name="BarsTickDataHandler.Field.Name" xml:space="preserve">
    <value>Data quotes</value>
  </data>
  <data name="InitialDeposit.Description" xml:space="preserve">
    <value>The initial trading deposit from the script setting</value>
  </data>
  <data name="InitialDeposit.Name" xml:space="preserve">
    <value>Initial Deposit</value>
  </data>
  <data name="IsPortfolioReady.Description" xml:space="preserve">
    <value>The portfolio is ready to trade (The data source is connected and the data is loaded)</value>
  </data>
  <data name="IsPortfolioReady.Name" xml:space="preserve">
    <value>Portfolio is ready</value>
  </data>
  <data name="AverageExitPrice.Description" xml:space="preserve">
    <value>The average exit price of a position. If there was only one exit, then it is equal to the exit price. If there have been position changes, it returns the weighted average exit price (taking into account the quantities).</value>
  </data>
  <data name="Value.Name" xml:space="preserve">
    <value>Value</value>
    <comment>ok Значение</comment>
  </data>
  <data name="Period.Name" xml:space="preserve">
    <value>Period</value>
    <comment>Период</comment>
  </data>
  <data name="TrimDeltaAskBidQuantity.Name" xml:space="preserve">
    <value>Trim delta ask bid quantity</value>
  </data>
  <data name="TrimRelativeDeltaAskBidQuantityPercent.Name" xml:space="preserve">
    <value>Trim relative delta ask bid quantity, %</value>
  </data>
  <data name="TrimComparisonMode.Name" xml:space="preserve">
    <value>Trim comparison mode</value>
  </data>
  <data name="TrimAskQuantity.Name" xml:space="preserve">
    <value>Trim ask quantity</value>
  </data>
  <data name="TrimBidQuantity.Name" xml:space="preserve">
    <value>Trim bid quantity</value>
  </data>
  <data name="TrimQuantity.Name" xml:space="preserve">
    <value>Trim quantity</value>
  </data>
  <data name="TrimTradesCount.Name" xml:space="preserve">
    <value>Trim trades count</value>
  </data>
  <data name="UseTrimAskQuantity.Name" xml:space="preserve">
    <value>Use trim ask quantity</value>
  </data>
  <data name="UseTrimBidQuantity.Name" xml:space="preserve">
    <value>Use trim bid quantity</value>
  </data>
  <data name="UseTrimDeltaAskBidQuantity.Name" xml:space="preserve">
    <value>Use trim delta ask bid quantity</value>
  </data>
  <data name="UseTrimRelativeDeltaAskBidQuantityPercent.Name" xml:space="preserve">
    <value>Use trim relative delta ask bid quantity, %</value>
  </data>
  <data name="UseTrimQuantity.Name" xml:space="preserve">
    <value>Use trim quantity</value>
  </data>
  <data name="UseTrimTradesCount.Name" xml:space="preserve">
    <value>Use trim trades count</value>
  </data>
  <data name="TrimTradesCountComparisonMode.Name" xml:space="preserve">
    <value>Trim trades count comparison mode</value>
  </data>
  <data name="TrimQuantityComparisonMode.Name" xml:space="preserve">
    <value>Trim quantity comparison mode</value>
  </data>
  <data name="TrimAskQuantityComparisonMode.Name" xml:space="preserve">
    <value>Trim ask quantity comparison mode</value>
  </data>
  <data name="TrimBidQuantityComparisonMode.Name" xml:space="preserve">
    <value>Trim bid quantity comparison mode</value>
  </data>
  <data name="TrimDeltaAskBidQuantityComparisonMode.Name" xml:space="preserve">
    <value>Trim delta ask bid quantity comparison mode</value>
  </data>
  <data name="TrimRelativeDeltaAskBidQuantityPercentComparisonMode.Name" xml:space="preserve">
    <value>Trim relative delta ask bid quantity comparison mode, %</value>
  </data>
  <data name="ProfitKind.Name" xml:space="preserve">
    <value>Profit kind</value>
  </data>
  <data name="Message.Name" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="TemplateLibrary.Pane" xml:space="preserve">
    <value>Chart pane</value>
    <comment>ok Панель графика</comment>
  </data>
  <data name="Quantity.Name" xml:space="preserve">
    <value>Position size</value>
  </data>
  <data name="Direction.Name" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="Index.Name" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="UseLastIndex.Name" xml:space="preserve">
    <value>Use last index</value>
  </data>
</root>